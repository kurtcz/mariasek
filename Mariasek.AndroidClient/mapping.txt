# compiler: R8
# compiler_version: 3.3.75
# min_api: 23
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 7f3217a
# pg_map_hash: SHA-256 7f3217a4ed358302e8ad7515e85508c246b01f9d74ef58e2a9bc3bdcc772452f
android.runtime.JavaProxyThrowable -> android.runtime.JavaProxyThrowable:
    14:14:void <clinit>() -> <clinit>
    20:22:void <init>() -> <init>
    29:31:void <init>(java.lang.String) -> <init>
    38:40:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    47:49:void <init>(java.lang.String,java.lang.Throwable,boolean,boolean) -> <init>
    56:58:void <init>(java.lang.Throwable) -> <init>
    65:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:73:void monodroidClearReferences() -> monodroidClearReferences
android.runtime.XmlReaderPullParser -> android.runtime.XmlReaderPullParser:
    52:52:void <clinit>() -> <clinit>
    58:60:void <init>() -> <init>
    171:171:void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    67:67:int getAttributeCount() -> getAttributeCount
    179:179:java.lang.String getAttributeName(int) -> getAttributeName
    187:187:java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    195:195:java.lang.String getAttributePrefix(int) -> getAttributePrefix
    203:203:java.lang.String getAttributeType(int) -> getAttributeType
    211:211:java.lang.String getAttributeValue(int) -> getAttributeValue
    219:219:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    75:75:int getColumnNumber() -> getColumnNumber
    83:83:int getDepth() -> getDepth
    91:91:int getEventType() -> getEventType
    227:227:boolean getFeature(java.lang.String) -> getFeature
    99:99:java.lang.String getInputEncoding() -> getInputEncoding
    123:123:int getLineNumber() -> getLineNumber
    131:131:java.lang.String getName() -> getName
    139:139:java.lang.String getNamespace() -> getNamespace
    235:235:java.lang.String getNamespace(java.lang.String) -> getNamespace
    243:243:int getNamespaceCount(int) -> getNamespaceCount
    251:251:java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    259:259:java.lang.String getNamespaceUri(int) -> getNamespaceUri
    147:147:java.lang.String getPositionDescription() -> getPositionDescription
    155:155:java.lang.String getPrefix() -> getPrefix
    267:267:java.lang.Object getProperty(java.lang.String) -> getProperty
    163:163:java.lang.String getText() -> getText
    275:275:char[] getTextCharacters(int[]) -> getTextCharacters
    283:283:boolean isAttributeDefault(int) -> isAttributeDefault
    107:107:boolean isEmptyElementTag() -> isEmptyElementTag
    115:115:boolean isWhitespace() -> isWhitespace
    363:365:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    370:371:void monodroidClearReferences() -> monodroidClearReferences
    291:291:int next() -> next
    299:299:int nextTag() -> nextTag
    307:307:java.lang.String nextText() -> nextText
    315:315:int nextToken() -> nextToken
    323:323:void require(int,java.lang.String,java.lang.String) -> require
    331:331:void setFeature(java.lang.String,boolean) -> setFeature
    339:339:void setInput(java.io.InputStream,java.lang.String) -> setInput
    347:347:void setInput(java.io.Reader) -> setInput
    355:355:void setProperty(java.lang.String,java.lang.Object) -> setProperty
android.runtime.XmlReaderResourceParser -> android.runtime.XmlReaderResourceParser:
    72:72:void <clinit>() -> <clinit>
    78:80:void <init>() -> <init>
    87:87:void close() -> close
    367:367:void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    143:143:boolean getAttributeBooleanValue(int,boolean) -> getAttributeBooleanValue
    151:151:boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean) -> getAttributeBooleanValue
    103:103:int getAttributeCount() -> getAttributeCount
    159:159:float getAttributeFloatValue(int,float) -> getAttributeFloatValue
    167:167:float getAttributeFloatValue(java.lang.String,java.lang.String,float) -> getAttributeFloatValue
    175:175:int getAttributeIntValue(int,int) -> getAttributeIntValue
    183:183:int getAttributeIntValue(java.lang.String,java.lang.String,int) -> getAttributeIntValue
    191:191:int getAttributeListValue(int,java.lang.String[],int) -> getAttributeListValue
    199:199:int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int) -> getAttributeListValue
    207:207:java.lang.String getAttributeName(int) -> getAttributeName
    215:215:int getAttributeNameResource(int) -> getAttributeNameResource
    95:95:java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    375:375:java.lang.String getAttributePrefix(int) -> getAttributePrefix
    223:223:int getAttributeResourceValue(int,int) -> getAttributeResourceValue
    231:231:int getAttributeResourceValue(java.lang.String,java.lang.String,int) -> getAttributeResourceValue
    383:383:java.lang.String getAttributeType(int) -> getAttributeType
    239:239:int getAttributeUnsignedIntValue(int,int) -> getAttributeUnsignedIntValue
    247:247:int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int) -> getAttributeUnsignedIntValue
    255:255:java.lang.String getAttributeValue(int) -> getAttributeValue
    263:263:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    111:111:java.lang.String getClassAttribute() -> getClassAttribute
    279:279:int getColumnNumber() -> getColumnNumber
    287:287:int getDepth() -> getDepth
    295:295:int getEventType() -> getEventType
    391:391:boolean getFeature(java.lang.String) -> getFeature
    119:119:java.lang.String getIdAttribute() -> getIdAttribute
    271:271:int getIdAttributeResourceValue(int) -> getIdAttributeResourceValue
    303:303:java.lang.String getInputEncoding() -> getInputEncoding
    327:327:int getLineNumber() -> getLineNumber
    335:335:java.lang.String getName() -> getName
    343:343:java.lang.String getNamespace() -> getNamespace
    399:399:java.lang.String getNamespace(java.lang.String) -> getNamespace
    407:407:int getNamespaceCount(int) -> getNamespaceCount
    415:415:java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    423:423:java.lang.String getNamespaceUri(int) -> getNamespaceUri
    127:127:java.lang.String getPositionDescription() -> getPositionDescription
    351:351:java.lang.String getPrefix() -> getPrefix
    431:431:java.lang.Object getProperty(java.lang.String) -> getProperty
    135:135:int getStyleAttribute() -> getStyleAttribute
    359:359:java.lang.String getText() -> getText
    439:439:char[] getTextCharacters(int[]) -> getTextCharacters
    447:447:boolean isAttributeDefault(int) -> isAttributeDefault
    311:311:boolean isEmptyElementTag() -> isEmptyElementTag
    319:319:boolean isWhitespace() -> isWhitespace
    527:529:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    534:535:void monodroidClearReferences() -> monodroidClearReferences
    455:455:int next() -> next
    463:463:int nextTag() -> nextTag
    471:471:java.lang.String nextText() -> nextText
    479:479:int nextToken() -> nextToken
    487:487:void require(int,java.lang.String,java.lang.String) -> require
    495:495:void setFeature(java.lang.String,boolean) -> setFeature
    503:503:void setInput(java.io.InputStream,java.lang.String) -> setInput
    511:511:void setInput(java.io.Reader) -> setInput
    519:519:void setProperty(java.lang.String,java.lang.Object) -> setProperty
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesCompatParcelizer -> android.support.v4.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi21Parcelizer -> android.support.v4.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi26Parcelizer -> android.support.v4.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplBaseParcelizer -> android.support.v4.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2293:2304:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    585:585:void <clinit>() -> <clinit>
    559:561:void <init>(android.os.Parcel) -> <init>
    578:582:java.lang.String toString() -> toString
    571:572:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    586:586:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    589:589:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    586:586:java.lang.Object[] newArray(int) -> newArray
    594:594:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2326:2342:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    434:434:void <clinit>() -> <clinit>
    197:205:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    389:426:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    339:369:java.lang.Object getMediaDescription() -> getMediaDescription
    324:324:java.lang.String toString() -> toString
    318:318:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    435:435:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    441:441:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    435:435:java.lang.Object[] newArray(int) -> newArray
    447:447:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Api21Impl -> android.support.v4.media.MediaDescriptionCompat$Api21Impl:
    626:626:android.media.MediaDescription build(android.media.MediaDescription$Builder) -> build
    579:579:android.media.MediaDescription$Builder createBuilder() -> createBuilder
    650:650:java.lang.CharSequence getDescription(android.media.MediaDescription) -> getDescription
    668:668:android.os.Bundle getExtras(android.media.MediaDescription) -> getExtras
    656:656:android.graphics.Bitmap getIconBitmap(android.media.MediaDescription) -> getIconBitmap
    662:662:android.net.Uri getIconUri(android.media.MediaDescription) -> getIconUri
    632:632:java.lang.String getMediaId(android.media.MediaDescription) -> getMediaId
    644:644:java.lang.CharSequence getSubtitle(android.media.MediaDescription) -> getSubtitle
    638:638:java.lang.CharSequence getTitle(android.media.MediaDescription) -> getTitle
    603:603:void setDescription(android.media.MediaDescription$Builder,java.lang.CharSequence) -> setDescription
    621:621:void setExtras(android.media.MediaDescription$Builder,android.os.Bundle) -> setExtras
    609:609:void setIconBitmap(android.media.MediaDescription$Builder,android.graphics.Bitmap) -> setIconBitmap
    615:615:void setIconUri(android.media.MediaDescription$Builder,android.net.Uri) -> setIconUri
    585:585:void setMediaId(android.media.MediaDescription$Builder,java.lang.String) -> setMediaId
    597:597:void setSubtitle(android.media.MediaDescription$Builder,java.lang.CharSequence) -> setSubtitle
    591:591:void setTitle(android.media.MediaDescription$Builder,java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompat$Api23Impl -> android.support.v4.media.MediaDescriptionCompat$Api23Impl:
    685:685:android.net.Uri getMediaUri(android.media.MediaDescription) -> getMediaUri
    679:679:void setMediaUri(android.media.MediaDescription$Builder,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    467:467:void <init>() -> <init>
    568:568:android.support.v4.media.MediaDescriptionCompat build() -> build
    511:511:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    546:546:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    523:523:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    535:535:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    477:477:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    557:557:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    499:499:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    488:488:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    299:634:void <clinit>() -> <clinit>
    364:365:void <init>(android.os.Parcel) -> <init>
    555:555:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    635:635:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    638:638:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    635:635:java.lang.Object[] newArray(int) -> newArray
    643:643:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    133:133:void <clinit>() -> <clinit>
    111:113:void <init>(int,float) -> <init>
    124:124:int describeContents() -> describeContents
    118:119:java.lang.String toString() -> toString
    129:130:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    134:134:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    142:142:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    134:134:java.lang.Object[] newArray(int) -> newArray
    147:147:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2341:2341:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver$$ExternalSyntheticThrowCCEIfNotNull0 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver$$ExternalSyntheticThrowCCEIfNotNull0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver$$InternalSyntheticThrowCCEIfNotNull$5$1e32e399876a526bcf909e662213296a1faa94961348d0fc6b98d5ce36aec39e$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    1065:1065:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
    1082:1088:android.os.Bundle unparcelWithClassLoader(android.os.Bundle) -> unparcelWithClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    2304:2304:void <clinit>() -> <clinit>
    2211:2213:void <init>(android.os.Parcel) -> <init>
    2320:2320:java.lang.String toString() -> toString
    2232:2233:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    2305:2305:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2309:2309:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    2305:2305:java.lang.Object[] newArray(int) -> newArray
    2314:2314:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    2364:2364:void <clinit>() -> <clinit>
    2359:2360:void <init>(android.os.Parcel) -> <init>
    2383:2383:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    2364:2364:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2367:2367:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    2364:2364:java.lang.Object[] newArray(int) -> newArray
    2372:2372:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    2148:2148:void <clinit>() -> <clinit>
    1961:1961:void <init>(java.lang.Object) -> <init>
    1952:1971:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,androidx.versionedparcelable.VersionedParcelable) -> <init>
    2041:2052:boolean equals(java.lang.Object) -> equals
    2030:2033:int hashCode() -> hashCode
    2022:2022:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    2149:2149:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2155:2159:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    2149:2149:java.lang.Object[] newArray(int) -> newArray
    2164:2164:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    67:67:void <clinit>() -> <clinit>
    44:49:void <init>(android.os.Parcel) -> <init>
    59:63:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    68:68:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    68:68:java.lang.Object[] newArray(int) -> newArray
    76:76:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    874:874:void <clinit>() -> <clinit>
    580:592:void <init>(android.os.Parcel) -> <init>
    597:609:java.lang.String toString() -> toString
    619:630:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    875:875:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    878:878:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    875:875:java.lang.Object[] newArray(int) -> newArray
    883:883:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    981:981:void <clinit>() -> <clinit>
    910:914:void <init>(android.os.Parcel) -> <init>
    1038:1038:java.lang.String toString() -> toString
    919:922:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    982:982:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    986:986:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    982:982:java.lang.Object[] newArray(int) -> newArray
    991:991:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    25:26:void <init>() -> <init>
    37:41:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    54:74:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    82:83:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    145:145:void <clinit>() -> <clinit>
    139:142:void <init>(android.os.Parcel) -> <init>
    131:136:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    146:146:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    149:149:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    146:146:java.lang.Object[] newArray(int) -> newArray
    153:153:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    68:68:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    71:74:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    57:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    64:64:void run() -> run
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    63:63:void <init>() -> <init>
    70:70:void <init>(int) -> <init>
    78:78:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    88:89:boolean containsAll(java.util.Collection) -> containsAll
    153:155:java.util.Set entrySet() -> entrySet
    548:552:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    170:172:java.util.Set keySet() -> keySet
    102:104:void putAll(java.util.Map) -> putAll
    114:118:boolean removeAll(java.util.Collection) -> removeAll
    128:134:boolean retainAll(java.util.Collection) -> retainAll
    529:539:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    187:189:java.util.Collection values() -> values
androidx.collection.ArrayMap$EntrySet -> androidx.collection.ArrayMap$EntrySet:
    194:194:void <init>(androidx.collection.ArrayMap) -> <init>
    197:197:java.util.Iterator iterator() -> iterator
    202:202:int size() -> size
androidx.collection.ArrayMap$KeyIterator -> androidx.collection.ArrayMap$KeyIterator:
    403:404:void <init>(androidx.collection.ArrayMap) -> <init>
    409:409:java.lang.Object elementAt(int) -> elementAt
    414:414:void removeAt(int) -> removeAt
androidx.collection.ArrayMap$KeySet -> androidx.collection.ArrayMap$KeySet:
    206:206:void <init>(androidx.collection.ArrayMap) -> <init>
    209:209:boolean add(java.lang.Object) -> add
    214:214:boolean addAll(java.util.Collection) -> addAll
    219:219:void clear() -> clear
    224:224:boolean contains(java.lang.Object) -> contains
    229:229:boolean containsAll(java.util.Collection) -> containsAll
    284:284:boolean equals(java.lang.Object) -> equals
    290:292:int hashCode() -> hashCode
    234:234:boolean isEmpty() -> isEmpty
    239:239:java.util.Iterator iterator() -> iterator
    244:246:boolean remove(java.lang.Object) -> remove
    254:254:boolean removeAll(java.util.Collection) -> removeAll
    259:259:boolean retainAll(java.util.Collection) -> retainAll
    264:264:int size() -> size
    269:272:java.lang.Object[] toArray() -> toArray
    279:279:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$MapIterator -> androidx.collection.ArrayMap$MapIterator:
    439:441:void <init>(androidx.collection.ArrayMap) -> <init>
    497:506:boolean equals(java.lang.Object) -> equals
    470:474:java.lang.Object getKey() -> getKey
    479:483:java.lang.Object getValue() -> getValue
    446:446:boolean hasNext() -> hasNext
    511:518:int hashCode() -> hashCode
    434:434:java.lang.Object next() -> next
    451:453:java.util.Map$Entry next() -> next
    459:465:void remove() -> remove
    488:492:java.lang.Object setValue(java.lang.Object) -> setValue
    523:523:java.lang.String toString() -> toString
androidx.collection.ArrayMap$ValueCollection -> androidx.collection.ArrayMap$ValueCollection:
    298:298:void <init>(androidx.collection.ArrayMap) -> <init>
    301:301:boolean add(java.lang.Object) -> add
    306:306:boolean addAll(java.util.Collection) -> addAll
    311:311:void clear() -> clear
    316:316:boolean contains(java.lang.Object) -> contains
    321:322:boolean containsAll(java.util.Collection) -> containsAll
    331:331:boolean isEmpty() -> isEmpty
    336:336:java.util.Iterator iterator() -> iterator
    341:343:boolean remove(java.lang.Object) -> remove
    351:356:boolean removeAll(java.util.Collection) -> removeAll
    367:372:boolean retainAll(java.util.Collection) -> retainAll
    383:383:int size() -> size
    388:391:java.lang.Object[] toArray() -> toArray
    398:398:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$ValueIterator -> androidx.collection.ArrayMap$ValueIterator:
    419:420:void <init>(androidx.collection.ArrayMap) -> <init>
    425:425:java.lang.Object elementAt(int) -> elementAt
    430:430:void removeAt(int) -> removeAt
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    78:79:void <clinit>() -> <clinit>
    279:279:void <init>() -> <init>
    286:293:void <init>(int) -> <init>
    300:302:void <init>(androidx.collection.ArraySet) -> <init>
    310:312:void <init>(java.util.Collection) -> <init>
    320:323:void <init>(java.lang.Object[]) -> <init>
    416:469:boolean add(java.lang.Object) -> add
    478:491:void addAll(androidx.collection.ArraySet) -> addAll
    752:755:boolean addAll(java.util.Collection) -> addAll
    174:230:void allocArrays(int) -> allocArrays
    89:91:int binarySearch(int) -> binarySearch
    333:343:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    738:739:boolean containsAll(java.util.Collection) -> containsAll
    352:364:void ensureCapacity(int) -> ensureCapacity
    636:645:boolean equals(java.lang.Object) -> equals
    239:270:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    664:667:int hashCode() -> hashCode
    96:123:int indexOf(java.lang.Object,int) -> indexOf
    386:386:int indexOf(java.lang.Object) -> indexOf
    134:161:int indexOfNull() -> indexOfNull
    404:404:boolean isEmpty() -> isEmpty
    711:711:java.util.Iterator iterator() -> iterator
    504:506:boolean remove(java.lang.Object) -> remove
    580:588:boolean removeAll(androidx.collection.ArraySet) -> removeAll
    768:769:boolean removeAll(java.util.Collection) -> removeAll
    519:566:java.lang.Object removeAt(int) -> removeAt
    783:785:boolean retainAll(java.util.Collection) -> retainAll
    596:596:int size() -> size
    602:603:java.lang.Object[] toArray() -> toArray
    610:617:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    681:699:java.lang.String toString() -> toString
    396:396:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$ElementIterator -> androidx.collection.ArraySet$ElementIterator:
    715:716:void <init>(androidx.collection.ArraySet) -> <init>
    721:721:java.lang.Object elementAt(int) -> elementAt
    726:726:void removeAt(int) -> removeAt
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    50:50:void <init>() -> <init>
    60:78:void <init>(int) -> <init>
    86:89:void addFirst(java.lang.Object) -> addFirst
    98:101:void addLast(java.lang.Object) -> addLast
    140:140:void clear() -> clear
    31:43:void doubleCapacity() -> doubleCapacity
    242:245:java.lang.Object get(int) -> get
    217:220:java.lang.Object getFirst() -> getFirst
    229:232:java.lang.Object getLast() -> getLast
    261:261:boolean isEmpty() -> isEmpty
    111:116:java.lang.Object popFirst() -> popFirst
    126:132:java.lang.Object popLast() -> popLast
    187:207:void removeFromEnd(int) -> removeFromEnd
    154:172:void removeFromStart(int) -> removeFromStart
    253:253:int size() -> size
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    50:50:void <init>() -> <init>
    59:77:void <init>(int) -> <init>
    85:88:void addFirst(int) -> addFirst
    97:100:void addLast(int) -> addLast
    133:133:void clear() -> clear
    31:43:void doubleCapacity() -> doubleCapacity
    197:198:int get(int) -> get
    176:177:int getFirst() -> getFirst
    186:187:int getLast() -> getLast
    214:214:boolean isEmpty() -> isEmpty
    110:112:int popFirst() -> popFirst
    122:125:int popLast() -> popLast
    164:167:void removeFromEnd(int) -> removeFromEnd
    147:150:void removeFromStart(int) -> removeFromStart
    206:206:int size() -> size
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.IndexBasedArrayIterator -> androidx.collection.IndexBasedArrayIterator:
    27:28:void <init>(int) -> <init>
    36:36:boolean hasNext() -> hasNext
    41:44:java.lang.Object next() -> next
    50:56:void remove() -> remove
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    457:483:void append(long,java.lang.Object) -> append
    441:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    429:429:boolean containsKey(long) -> containsKey
    434:434:boolean containsValue(java.lang.Object) -> containsValue
    132:132:void delete(long) -> delete
    218:238:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:120:java.lang.Object get(long,java.lang.Object) -> get
    400:404:int indexOfKey(long) -> indexOfKey
    416:421:int indexOfValue(java.lang.Object) -> indexOfValue
    340:340:boolean isEmpty() -> isEmpty
    354:358:long keyAt(int) -> keyAt
    249:291:void put(long,java.lang.Object) -> put
    301:302:void putAll(androidx.collection.LongSparseArray) -> putAll
    316:318:java.lang.Object putIfAbsent(long,java.lang.Object) -> putIfAbsent
    139:144:void remove(long) -> remove
    156:160:boolean remove(long,java.lang.Object) -> remove
    171:173:void removeAt(int) -> removeAt
    186:189:java.lang.Object replace(long,java.lang.Object) -> replace
    204:208:boolean replace(long,java.lang.Object,java.lang.Object) -> replace
    387:391:void setValueAt(int,java.lang.Object) -> setValueAt
    328:332:int size() -> size
    495:516:java.lang.String toString() -> toString
    374:378:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:56:void <init>(int) -> <init>
    322:322:int createCount() -> createCount
    281:281:void evictAll() -> evictAll
    336:336:int evictionCount() -> evictionCount
    84:125:java.lang.Object get(java.lang.Object) -> get
    307:307:int hitCount() -> hitCount
    299:299:int maxSize() -> maxSize
    315:315:int missCount() -> missCount
    139:156:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    329:329:int putCount() -> putCount
    201:213:java.lang.Object remove(java.lang.Object) -> remove
    66:72:void resize(int) -> resize
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    290:290:int size() -> size
    344:344:java.util.Map snapshot() -> snapshot
    348:351:java.lang.String toString() -> toString
    171:189:void trimToSize(int) -> trimToSize
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    687:721:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    381:382:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    738:743:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    423:423:boolean isEmpty() -> isEmpty
    392:392:java.lang.Object keyAt(int) -> keyAt
    437:494:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    503:513:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    528:530:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    543:545:java.lang.Object remove(java.lang.Object) -> remove
    558:562:boolean remove(java.lang.Object,java.lang.Object) -> remove
    576:626:java.lang.Object removeAt(int) -> removeAt
    639:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    655:659:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    414:415:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    670:670:int size() -> size
    757:782:java.lang.String toString() -> toString
    402:402:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    461:487:void append(int,java.lang.Object) -> append
    445:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    433:433:boolean containsKey(int) -> containsKey
    438:438:boolean containsValue(java.lang.Object) -> containsValue
    132:132:void delete(int) -> delete
    231:251:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:120:java.lang.Object get(int,java.lang.Object) -> get
    402:406:int indexOfKey(int) -> indexOfKey
    420:425:int indexOfValue(java.lang.Object) -> indexOfValue
    353:353:boolean isEmpty() -> isEmpty
    362:366:int keyAt(int) -> keyAt
    262:304:void put(int,java.lang.Object) -> put
    314:315:void putAll(androidx.collection.SparseArrayCompat) -> putAll
    329:331:java.lang.Object putIfAbsent(int,java.lang.Object) -> putIfAbsent
    139:144:void remove(int) -> remove
    156:160:boolean remove(int,java.lang.Object) -> remove
    171:173:void removeAt(int) -> removeAt
    184:186:void removeAtRange(int,int) -> removeAtRange
    199:202:java.lang.Object replace(int,java.lang.Object) -> replace
    217:221:boolean replace(int,java.lang.Object,java.lang.Object) -> replace
    389:393:void setValueAt(int,java.lang.Object) -> setValueAt
    341:345:int size() -> size
    499:520:java.lang.String toString() -> toString
    376:380:java.lang.Object valueAt(int) -> valueAt
androidx.core.R$styleable -> androidx.core.R$styleable:
    172:213:void <clinit>() -> <clinit>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    162:165:void <clinit>() -> <clinit>
    173:173:void <init>() -> <init>
    554:555:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    658:659:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    186:187:java.lang.String getAttributionTag(android.content.Context) -> getAttributionTag
    599:599:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    539:539:int getColor(android.content.Context,int) -> getColor
    519:519:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    302:306:java.io.File getDataDir(android.content.Context) -> getDataDir
    483:483:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    462:462:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    409:409:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    686:689:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
    574:574:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    356:356:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    722:722:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    741:741:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
    672:673:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
    219:219:boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    252:252:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    279:279:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    702:706:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    825:825:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    830:830:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
    842:842:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    847:847:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    852:852:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    874:874:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    864:864:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    869:869:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
    886:886:int getColor(android.content.Context,int) -> getColor
    891:891:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    896:896:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
androidx.core.content.ContextCompat$Api24Impl -> androidx.core.content.ContextCompat$Api24Impl:
    913:913:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    908:908:java.io.File getDataDir(android.content.Context) -> getDataDir
    918:918:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
androidx.core.content.ContextCompat$Api26Impl -> androidx.core.content.ContextCompat$Api26Impl:
    931:931:android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$Api28Impl -> androidx.core.content.ContextCompat$Api28Impl:
    943:943:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
androidx.core.content.ContextCompat$Api30Impl -> androidx.core.content.ContextCompat$Api30Impl:
    955:955:java.lang.String getAttributionTag(android.content.Context) -> getAttributionTag
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    355:377:void <clinit>() -> <clinit>
    382:383:void <init>() -> <init>
    386:387:void <init>(int) -> <init>
    409:424:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    901:903:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    910:911:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    916:917:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    606:607:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    664:676:android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int) -> getFileProviderPathsMetaData
    641:655:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int) -> getPathStrategy
    558:563:java.lang.String getType(android.net.Uri) -> getType
    449:450:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    479:480:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File,java.lang.String) -> getUriForFile
    578:578:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    876:894:int modeToMode(java.lang.String) -> modeToMode
    630:632:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    691:734:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int) -> parsePathStrategy
    517:541:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    588:588:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$Api21Impl -> androidx.core.content.FileProvider$Api21Impl:
    930:930:java.io.File[] getExternalMediaDirs(android.content.Context) -> getExternalMediaDirs
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    779:782:void <init>(java.lang.String) -> <init>
    790:802:void addRoot(java.lang.String,java.io.File) -> addRoot
    845:864:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    809:840:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.res.CamColor -> androidx.core.content.res.CamColor:
    128:137:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    290:294:float distance(androidx.core.content.res.CamColor) -> distance
    490:509:androidx.core.content.res.CamColor findCamByJ(float,float,float) -> findCamByJ
    160:160:androidx.core.content.res.CamColor fromColor(int) -> fromColor
    171:242:androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions) -> fromColorInViewingConditions
    253:253:androidx.core.content.res.CamColor fromJch(float,float,float) -> fromJch
    266:280:androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions) -> fromJchInFrame
    116:116:float getAStar() -> getAStar
    123:123:float getBStar() -> getBStar
    63:63:float getChroma() -> getChroma
    57:57:float getHue() -> getHue
    69:69:float getJ() -> getJ
    109:109:float getJStar() -> getJStar
    149:149:int toColor(float,float,float) -> toColor
    414:471:int toColor(float,float,float,androidx.core.content.res.ViewingConditions) -> toColor
    308:353:int viewed(androidx.core.content.res.ViewingConditions) -> viewed
    301:301:int viewedInSrgb() -> viewedInSrgb
androidx.core.content.res.CamUtils -> androidx.core.content.res.CamUtils:
    52:73:void <clinit>() -> <clinit>
    101:101:int intFromLStar(float) -> intFromLStar
    111:111:float lStarFromInt(int) -> lStarFromInt
    121:121:float lStarFromY(float) -> lStarFromY
    163:163:float linearized(int) -> linearized
    137:144:float[] xyzFromInt(int) -> xyzFromInt
    127:131:float yFromInt(int) -> yFromInt
    151:151:float yFromLStar(float) -> yFromLStar
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    53:53:void <clinit>() -> <clinit>
    92:104:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    119:125:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    224:227:android.util.TypedValue getTypedValue() -> getTypedValue
    134:212:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    216:218:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    247:252:int modulateColorAlpha(int,float,float) -> modulateColorAlpha
    234:235:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    42:48:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:61:int[] append(int[],int,int) -> append
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    75:80:void <clinit>() -> <clinit>
    296:304:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList,android.content.res.Resources$Theme) -> addColorStateListToCache
    272:288:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    230:244:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    316:319:android.util.TypedValue getTypedValue() -> getTypedValue
    256:264:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    308:310:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
androidx.core.content.res.ResourcesCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$Api23Impl:
    693:693:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    688:688:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
    355:358:void <init>(android.content.res.ColorStateList,android.content.res.Configuration,android.content.res.Resources$Theme) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
    328:330:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    336:339:boolean equals(java.lang.Object) -> equals
    344:344:int hashCode() -> hashCode
androidx.core.content.res.ViewingConditions -> androidx.core.content.res.ViewingConditions:
    53:56:void <clinit>() -> <clinit>
    112:122:void <init>(float,float,float,float,float,float,float[],float,float,float) -> <init>
    71:71:float getAw() -> getAw
    87:87:float getC() -> getC
    100:100:float getFl() -> getFl
    104:104:float getFlRoot() -> getFlRoot
    75:75:float getN() -> getN
    79:79:float getNbb() -> getNbb
    91:91:float getNc() -> getNc
    83:83:float getNcb() -> getNcb
    96:96:float[] getRgbD() -> getRgbD
    108:108:float getZ() -> getZ
    130:191:androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean) -> make
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    46:46:void <clinit>() -> <clinit>
    561:568:int XYZToColor(double,double,double) -> XYZToColor
    605:605:int constrain(int,int,int) -> constrain
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    37:37:void <clinit>() -> <clinit>
    44:48:void <init>(int,int,int,int) -> <init>
    90:90:androidx.core.graphics.Insets add(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> add
    145:152:boolean equals(java.lang.Object) -> equals
    159:162:int hashCode() -> hashCode
    116:117:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    130:131:androidx.core.graphics.Insets min(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> min
    65:67:androidx.core.graphics.Insets of(int,int,int,int) -> of
    78:78:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    103:103:androidx.core.graphics.Insets subtract(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> subtract
    192:192:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    202:202:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    169:169:java.lang.String toString() -> toString
    182:182:androidx.core.graphics.Insets wrap(android.graphics.Insets) -> wrap
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.Insets$Api29Impl:
    213:213:android.graphics.Insets of(int,int,int,int) -> of
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    213:213:void <clinit>() -> <clinit>
    157:376:void <init>() -> <init>
    1023:1057:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    433:439:int getResId() -> getResId
    406:420:java.lang.String getResPackage() -> getResPackage
    478:484:android.net.Uri getUri() -> getUri
    666:679:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    887:923:void onPostParceling() -> onPostParceling
    850:880:void onPreParceling(boolean) -> onPreParceling
    808:845:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$Api23Impl:
    1230:1242:int getResId(java.lang.Object) -> getResId
    1183:1195:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1259:1271:android.net.Uri getUri(java.lang.Object) -> getUri
    1341:1341:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context) -> loadDrawable
    1280:1334:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context) -> toIcon
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$Api26Impl:
    1097:1097:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> createAdaptiveIconDrawable
    1102:1102:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$Api28Impl:
    1079:1079:int getResId(java.lang.Object) -> getResId
    1069:1069:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1074:1074:int getType(java.lang.Object) -> getType
    1084:1084:android.net.Uri getUri(java.lang.Object) -> getUri
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$Api30Impl:
    1114:1114:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:53:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    160:160:boolean isAtLeastR() -> isAtLeastR
androidx.core.os.ExecutorCompat -> androidx.core.os.ExecutorCompat:
    36:36:java.util.concurrent.Executor create(android.os.Handler) -> create
androidx.core.os.ExecutorCompat$HandlerExecutor -> androidx.core.os.ExecutorCompat$HandlerExecutor:
    45:46:void <init>(android.os.Handler) -> <init>
    51:52:void execute(java.lang.Runnable) -> execute
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    55:55:boolean equals(java.lang.Object,java.lang.Object) -> equals
    97:97:int hash(java.lang.Object[]) -> hash
    159:159:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
androidx.core.util.ObjectsCompat$Api19Impl -> androidx.core.util.ObjectsCompat$Api19Impl:
    171:171:boolean equals(java.lang.Object,java.lang.Object) -> equals
    176:176:int hash(java.lang.Object[]) -> hash
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    52:52:void checkArgument(boolean,java.lang.Object) -> checkArgument
    246:252:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    191:193:int checkFlagsArgument(int,int) -> checkFlagsArgument
    137:137:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    135:135:void <clinit>() -> <clinit>
    144:144:void <init>() -> <init>
    151:153:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    330:332:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    411:413:java.util.List getActionList(android.view.View) -> getActionList
    160:160:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    398:401:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    265:265:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    285:286:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    244:244:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    310:310:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    360:373:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    380:388:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    178:178:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    201:201:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    68:69:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    75:75:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    123:126:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    80:80:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    86:95:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    101:101:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    107:107:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    131:131:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    112:112:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    117:117:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$Api16Impl -> androidx.core.view.AccessibilityDelegateCompat$Api16Impl:
    425:425:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    431:431:boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
    151:152:void <init>(androidx.core.view.ContentInfoCompat$Compat) -> <init>
    301:303:android.content.ClipData buildClipData(android.content.ClipDescription,java.util.List) -> buildClipData
    145:145:java.lang.String flagsToString(int) -> flagsToString
    196:196:android.content.ClipData getClip() -> getClip
    234:234:android.os.Bundle getExtras() -> getExtras
    213:213:int getFlags() -> getFlags
    224:224:android.net.Uri getLinkUri() -> getLinkUri
    205:205:int getSource() -> getSource
    256:269:android.util.Pair partition(androidx.core.util.Predicate) -> partition
    277:295:android.util.Pair partition(android.content.ClipData,androidx.core.util.Predicate) -> partition
    328:328:android.util.Pair partition(android.view.ContentInfo,java.util.function.Predicate) -> partition
    114:114:java.lang.String sourceToString(int) -> sourceToString
    182:182:android.view.ContentInfo toContentInfo() -> toContentInfo
    167:167:androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo) -> toContentInfoCompat
    188:188:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Api31Impl -> androidx.core.view.ContentInfoCompat$Api31Impl:
    339:352:android.util.Pair partition(android.view.ContentInfo,java.util.function.Predicate) -> partition
androidx.core.view.ContentInfoCompat$Api31Impl$$ExternalSyntheticLambda0 -> androidx.core.view.ContentInfoCompat$Api31Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Predicate androidx.core.view.ContentInfoCompat$Api31Impl$$InternalSyntheticLambda$1$d176996ff060e1441b68769ec4c701a12a573ee58dda2aacd7c07492032cdeda$0.f$0 -> f$0
    void androidx.core.view.ContentInfoCompat$Api31Impl$$InternalSyntheticLambda$1$d176996ff060e1441b68769ec4c701a12a573ee58dda2aacd7c07492032cdeda$0.<init>(java.util.function.Predicate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ContentInfoCompat$Api31Impl$$InternalSyntheticLambda$1$d176996ff060e1441b68769ec4c701a12a573ee58dda2aacd7c07492032cdeda$0.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
    503:507:void <init>(androidx.core.view.ContentInfoCompat) -> <init>
    592:592:androidx.core.view.ContentInfoCompat build() -> build
    533:533:androidx.core.view.ContentInfoCompat$Builder setClip(android.content.ClipData) -> setClip
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl:
    672:673:void <init>(androidx.core.view.ContentInfoCompat) -> <init>
    704:704:androidx.core.view.ContentInfoCompat build() -> build
    678:678:void setClip(android.content.ClipData) -> setClip
androidx.core.view.ContentInfoCompat$BuilderCompatImpl -> androidx.core.view.ContentInfoCompat$BuilderCompatImpl:
    623:628:void <init>(androidx.core.view.ContentInfoCompat) -> <init>
    659:659:androidx.core.view.ContentInfoCompat build() -> build
    633:633:void setClip(android.content.ClipData) -> setClip
androidx.core.view.ContentInfoCompat$Compat31Impl -> androidx.core.view.ContentInfoCompat$Compat31Impl:
    446:447:void <init>(android.view.ContentInfo) -> <init>
    459:459:android.content.ClipData getClip() -> getClip
    483:483:android.os.Bundle getExtras() -> getExtras
    471:471:int getFlags() -> getFlags
    477:477:android.net.Uri getLinkUri() -> getLinkUri
    465:465:int getSource() -> getSource
    453:453:android.view.ContentInfo getWrapped() -> getWrapped
    489:489:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$CompatImpl -> androidx.core.view.ContentInfoCompat$CompatImpl:
    383:389:void <init>(androidx.core.view.ContentInfoCompat$BuilderCompatImpl) -> <init>
    401:401:android.content.ClipData getClip() -> getClip
    425:425:android.os.Bundle getExtras() -> getExtras
    413:413:int getFlags() -> getFlags
    419:419:android.net.Uri getLinkUri() -> getLinkUri
    407:407:int getSource() -> getSource
    431:436:java.lang.String toString() -> toString
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    56:56:void <init>(android.graphics.Rect,java.util.List) -> <init>
    77:77:void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets) -> <init>
    112:113:void <init>(android.view.DisplayCutout) -> <init>
    84:106:android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets) -> constructDisplayCutout
    194:198:boolean equals(java.lang.Object) -> equals
    163:166:java.util.List getBoundingRects() -> getBoundingRects
    127:128:int getSafeInsetBottom() -> getSafeInsetBottom
    136:137:int getSafeInsetLeft() -> getSafeInsetLeft
    145:146:int getSafeInsetRight() -> getSafeInsetRight
    118:119:int getSafeInsetTop() -> getSafeInsetTop
    182:185:androidx.core.graphics.Insets getWaterfallInsets() -> getWaterfallInsets
    203:203:int hashCode() -> hashCode
    209:209:java.lang.String toString() -> toString
    213:213:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout) -> wrap
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.DisplayCutoutCompat$Api28Impl:
    229:229:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List) -> createDisplayCutout
    254:254:java.util.List getBoundingRects(android.view.DisplayCutout) -> getBoundingRects
    239:239:int getSafeInsetBottom(android.view.DisplayCutout) -> getSafeInsetBottom
    244:244:int getSafeInsetLeft(android.view.DisplayCutout) -> getSafeInsetLeft
    249:249:int getSafeInsetRight(android.view.DisplayCutout) -> getSafeInsetRight
    234:234:int getSafeInsetTop(android.view.DisplayCutout) -> getSafeInsetTop
androidx.core.view.DisplayCutoutCompat$Api29Impl -> androidx.core.view.DisplayCutoutCompat$Api29Impl:
    287:287:android.view.DisplayCutout createDisplayCutout(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> createDisplayCutout
androidx.core.view.DisplayCutoutCompat$Api30Impl -> androidx.core.view.DisplayCutoutCompat$Api30Impl:
    268:268:android.view.DisplayCutout createDisplayCutout(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets) -> createDisplayCutout
    274:274:android.graphics.Insets getWaterfallInsets(android.view.DisplayCutout) -> getWaterfallInsets
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:64:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    110:111:void <init>(android.view.PointerIcon) -> <init>
    155:158:androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> create
    120:120:java.lang.Object getPointerIcon() -> getPointerIcon
    133:136:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
    184:187:androidx.core.view.PointerIconCompat load(android.content.res.Resources,int) -> load
androidx.core.view.PointerIconCompat$Api24Impl -> androidx.core.view.PointerIconCompat$Api24Impl:
    204:204:android.view.PointerIcon create(android.graphics.Bitmap,float,float) -> create
    199:199:android.view.PointerIcon getSystemIcon(android.content.Context,int) -> getSystemIcon
    209:209:android.view.PointerIcon load(android.content.res.Resources,int) -> load
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    androidx.core.view.ContentInfoCompat $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg(androidx.core.view.ContentInfoCompat) -> $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg
      # {"id":"com.android.tools.r8.synthesized"}
    477:4541:void <clinit>() -> <clinit>
    4154:4154:void <init>() -> <init>
    4386:4386:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1234:1238:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1329:1332:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    4035:4036:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    4108:4121:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    2082:2088:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1896:1903:void bindTempDetach() -> bindTempDetach
    546:546:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    559:559:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    3904:3905:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    1786:1786:int combineMeasuredStates(int,int) -> combineMeasuredStates
    2664:2664:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2585:2590:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1933:1947:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    3480:3480:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    3523:3523:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    3256:3256:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    3453:3453:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> dispatchNestedPreScroll
    3225:3225:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    3385:3385:void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    3421:3421:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> dispatchNestedScroll
    1910:1924:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    1423:1423:void enableAccessibleClickableSpanSupport(android.view.View) -> enableAccessibleClickableSpanSupport
    939:943:void ensureAccessibilityDelegateCompat(android.view.View) -> ensureAccessibilityDelegateCompat
    4085:4085:int generateViewId() -> generateViewId
    928:935:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    948:951:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    959:979:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1800:1800:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1453:1455:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    4302:4302:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1364:1368:java.util.List getActionList(android.view.View) -> getActionList
    1472:1472:float getAlpha(android.view.View) -> getAlpha
    1280:1292:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    3012:3012:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    3059:3059:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3740:3740:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3862:3862:android.view.Display getDisplay(android.view.View) -> getDisplay
    2367:2367:float getElevation(android.view.View) -> getElevation
    2851:2854:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2498:2498:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1108:1108:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    788:789:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1548:1548:int getLabelFor(android.view.View) -> getLabelFor
    1536:1536:int getLayerType(android.view.View) -> getLayerType
    1621:1621:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1999:1999:android.graphics.Matrix getMatrix(android.view.View) -> getMatrix
    1757:1757:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1771:1771:int getMeasuredState(android.view.View) -> getMeasuredState
    1740:1740:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    2049:2049:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2013:2013:int getMinimumWidth(android.view.View) -> getMinimumWidth
    3926:3927:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    2808:2811:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    577:577:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1867:1867:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1851:1851:int getPaddingStart(android.view.View) -> getPaddingStart
    1660:1660:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2247:2247:float getPivotX(android.view.View) -> getPivotX
    2276:2276:float getPivotY(android.view.View) -> getPivotY
    2642:2642:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    2300:2300:float getRotation(android.view.View) -> getRotation
    2308:2308:float getRotationX(android.view.View) -> getRotationX
    2316:2316:float getRotationY(android.view.View) -> getRotationY
    2324:2324:float getScaleX(android.view.View) -> getScaleX
    2332:2332:float getScaleY(android.view.View) -> getScaleY
    3832:3832:int getScrollIndicators(android.view.View) -> getScrollIndicators
    1407:1407:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2625:2628:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    2424:2424:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1963:1963:float getTranslationX(android.view.View) -> getTranslationX
    1977:1977:float getTranslationY(android.view.View) -> getTranslationY
    2388:2388:float getTranslationZ(android.view.View) -> getTranslationZ
    2681:2690:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
    2441:2441:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2340:2340:float getX(android.view.View) -> getX
    2348:2348:float getY(android.view.View) -> getY
    3587:3587:float getZ(android.view.View) -> getZ
    914:914:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    4071:4074:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    3196:3196:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    3343:3343:boolean hasNestedScrollingParent(android.view.View,int) -> hasNestedScrollingParent
    3762:3762:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2971:2971:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    994:994:boolean hasTransientState(android.view.View) -> hasTransientState
    4365:4366:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3750:3750:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3981:3982:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    1187:1187:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    901:902:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    3545:3545:boolean isInLayout(android.view.View) -> isInLayout
    3952:3953:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    3556:3556:boolean isLaidOut(android.view.View) -> isLaidOut
    3573:3573:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    3138:3138:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1703:1703:boolean isOpaque(android.view.View) -> isOpaque
    2984:2984:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4227:4228:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    2527:2527:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    4019:4020:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    4482:4516:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3665:3665:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3617:3617:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2557:2562:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    668:668:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    700:700:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    636:636:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    4306:4306:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1209:1209:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2834:2847:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1023:1023:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1045:1045:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1063:1063:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1086:1086:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1346:1347:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1353:1356:void removeActionWithId(int,android.view.View) -> removeActionWithId
    4135:4145:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    1320:1322:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2452:2452:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1682:1688:android.view.View requireViewById(android.view.View,int) -> requireViewById
    1723:1723:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    4049:4052:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    529:530:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4232:4232:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    731:734:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4382:4382:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1836:1836:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    4276:4280:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2952:2952:void setActivated(android.view.View,boolean) -> setActivated
    2139:2139:void setAlpha(android.view.View,float) -> setAlpha
    767:768:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    2997:2997:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    3029:3029:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    3077:3077:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2472:2488:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    3725:3725:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2356:2356:void setElevation(android.view.View,float) -> setElevation
    2513:2513:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    4000:4001:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    1008:1008:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1136:1136:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    832:833:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    3966:3967:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    1562:1562:void setLabelFor(android.view.View,int) -> setLabelFor
    1598:1598:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1511:1511:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1645:1645:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    3115:3115:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    3940:3941:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    2537:2537:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    2759:2780:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
    596:596:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    1888:1888:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    2263:2263:void setPivotX(android.view.View,float) -> setPivotX
    2292:2292:void setPivotY(android.view.View,float) -> setPivotY
    3842:3844:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    2182:2182:void setRotation(android.view.View,float) -> setRotation
    2196:2196:void setRotationX(android.view.View,float) -> setRotationX
    2210:2210:void setRotationY(android.view.View,float) -> setRotationY
    2936:2936:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    2223:2223:void setScaleX(android.view.View,float) -> setScaleX
    2236:2236:void setScaleY(android.view.View,float) -> setScaleY
    4208:4208:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3780:3780:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    3814:3814:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    1389:1389:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
    2610:2611:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
    3881:3882:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    2402:2402:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2105:2105:void setTranslationX(android.view.View,float) -> setTranslationX
    2122:2122:void setTranslationY(android.view.View,float) -> setTranslationY
    2377:2377:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4523:4537:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    2719:2719:void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setWindowInsetsAnimationCallback
    2154:2154:void setX(android.view.View,float) -> setX
    2169:2169:void setY(android.view.View,float) -> setY
    3606:3606:void setZ(android.view.View,float) -> setZ
    3893:3896:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    3160:3160:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    3309:3309:boolean startNestedScroll(android.view.View,int,int) -> startNestedScroll
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3179:3179:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3326:3326:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3914:3915:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ContentInfoCompat androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    4233:4233:void <init>(int,java.lang.Class,int) -> <init>
    4233:4233:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4238:4238:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4233:4233:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4244:4244:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4233:4233:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4249:4249:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4307:4307:void <init>(int,java.lang.Class,int,int) -> <init>
    4307:4307:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4312:4312:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4307:4307:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4318:4318:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4307:4307:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4323:4323:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4330:4330:void <init>(int,java.lang.Class,int,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4341:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4387:4387:void <init>(int,java.lang.Class,int) -> <init>
    4387:4387:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4392:4392:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4387:4387:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4398:4398:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4387:4387:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4403:4403:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4544:4546:void <init>() -> <init>
    4572:4575:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4588:4594:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4551:4553:void onGlobalLayout() -> onGlobalLayout
    4562:4562:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4600:4600:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4581:4583:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4605:4606:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4416:4416:void <init>(int,java.lang.Class,int) -> <init>
    4421:4425:void <init>(int,java.lang.Class,int,int) -> <init>
    4473:4474:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4456:4456:boolean frameworkAvailable() -> frameworkAvailable
    4444:4448:java.lang.Object get(android.view.View) -> get
    4430:4438:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api15Impl -> androidx.core.view.ViewCompat$Api15Impl:
    5257:5257:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
androidx.core.view.ViewCompat$Api16Impl -> androidx.core.view.ViewCompat$Api16Impl:
    5411:5411:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    5441:5441:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    5401:5401:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    5426:5426:int getMinimumHeight(android.view.View) -> getMinimumHeight
    5421:5421:int getMinimumWidth(android.view.View) -> getMinimumWidth
    5416:5416:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    5431:5431:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    5451:5451:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    5371:5371:boolean hasTransientState(android.view.View) -> hasTransientState
    5446:5446:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    5381:5381:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    5386:5386:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    5391:5391:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    5396:5396:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    5462:5462:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    5436:5436:void requestFitSystemWindows(android.view.View) -> requestFitSystemWindows
    5456:5456:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    5376:5376:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    5406:5406:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
androidx.core.view.ViewCompat$Api17Impl -> androidx.core.view.ViewCompat$Api17Impl:
    5314:5314:int generateViewId() -> generateViewId
    5309:5309:android.view.Display getDisplay(android.view.View) -> getDisplay
    5319:5319:int getLabelFor(android.view.View) -> getLabelFor
    5334:5334:int getLayoutDirection(android.view.View) -> getLayoutDirection
    5349:5349:int getPaddingEnd(android.view.View) -> getPaddingEnd
    5344:5344:int getPaddingStart(android.view.View) -> getPaddingStart
    5359:5359:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    5324:5324:void setLabelFor(android.view.View,int) -> setLabelFor
    5329:5329:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    5339:5339:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    5354:5354:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
androidx.core.view.ViewCompat$Api18Impl -> androidx.core.view.ViewCompat$Api18Impl:
    5202:5202:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    5192:5192:boolean isInLayout(android.view.View) -> isInLayout
    5197:5197:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
androidx.core.view.ViewCompat$Api19Impl -> androidx.core.view.ViewCompat$Api19Impl:
    5229:5229:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    5219:5219:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    5214:5214:boolean isLaidOut(android.view.View) -> isLaidOut
    5224:5224:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    5245:5245:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    5234:5234:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    5239:5239:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.ViewCompat$Api20Impl:
    5564:5564:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets) -> dispatchApplyWindowInsets
    5559:5559:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    5554:5554:void requestApplyInsets(android.view.View) -> requestApplyInsets
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4886:4890:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4811:4816:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4897:4897:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    4903:4903:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    5006:5006:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    4999:4999:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    4958:4958:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    4963:4963:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    4943:4943:float getElevation(android.view.View) -> getElevation
    4805:4805:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4948:4948:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    4928:4928:float getTranslationZ(android.view.View) -> getTranslationZ
    4908:4908:float getZ(android.view.View) -> getZ
    4993:4993:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    4938:4938:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    4978:4978:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    4953:4953:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    4968:4968:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    4918:4918:void setElevation(android.view.View,float) -> setElevation
    4973:4973:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    4826:4840:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    4933:4933:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4923:4923:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4913:4913:void setZ(android.view.View,float) -> setZ
    4983:4983:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    4988:4988:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
    4840:4841:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4846:4872:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    5018:5025:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    5041:5041:int getScrollIndicators(android.view.View) -> getScrollIndicators
    5031:5031:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    5036:5036:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
androidx.core.view.ViewCompat$Api24Impl -> androidx.core.view.ViewCompat$Api24Impl:
    5281:5281:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    5297:5297:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    5292:5292:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    5269:5269:void setPointerIcon(android.view.View,android.view.PointerIcon) -> setPointerIcon
    5276:5276:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    5287:5287:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$Api26Impl -> androidx.core.view.ViewCompat$Api26Impl:
    5155:5155:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    5170:5170:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    5118:5118:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    5165:5165:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    5138:5138:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    5180:5180:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    5128:5128:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    5149:5149:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    5160:5160:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    5108:5108:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    5143:5143:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    5175:5175:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    5133:5133:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    5123:5123:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    5113:5113:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.ViewCompat$Api28Impl:
    5514:5525:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    5480:5480:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    5496:5496:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    5501:5501:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    5533:5541:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    5475:5475:java.lang.Object requireViewById(android.view.View,int) -> requireViewById
    5491:5491:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    5486:5486:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    5506:5506:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.f$0 -> f$0
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    5061:5061:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    5071:5071:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    5055:5055:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    5066:5066:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.ViewCompat$Api30Impl:
    5096:5096:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    5083:5085:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
    5091:5091:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
androidx.core.view.ViewCompat$Api31Impl -> androidx.core.view.ViewCompat$Api31Impl:
    2878:2878:java.lang.String[] getReceiveContentMimeTypes(android.view.View) -> getReceiveContentMimeTypes
    2885:2894:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    2868:2870:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter -> androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter:
    2905:2906:void <init>(androidx.core.view.OnReceiveContentListener) -> <init>
    2912:2921:android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo) -> onReceiveContent
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4614:4614:void <clinit>() -> <clinit>
    4745:4752:void registerListeningView(android.view.View) -> registerListeningView
    4756:4763:void unregisterListeningView(android.view.View) -> unregisterListeningView
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    void $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc
      # {"id":"com.android.tools.r8.synthesized"}
    38:46:void <init>(android.view.View) -> <init>
    148:149:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    164:165:androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    493:494:void cancel() -> cancel
    252:253:long getDuration() -> getDuration
    284:287:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    321:322:long getStartDelay() -> getStartDelay
    830:830:void lambda$setUpdateListener$0(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> lambda$setUpdateListener$0
    338:339:androidx.core.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    354:355:androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    370:371:androidx.core.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    386:387:androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    402:403:androidx.core.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    418:419:androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    434:435:androidx.core.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    450:451:androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    466:467:androidx.core.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    482:483:androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    132:133:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    270:271:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    778:780:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    791:808:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    305:306:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    826:833:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    687:688:void start() -> start
    180:181:androidx.core.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    572:573:androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    196:197:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    588:589:androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    627:630:androidx.core.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    606:609:androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    230:233:androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    724:727:androidx.core.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    754:757:androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    508:509:androidx.core.view.ViewPropertyAnimatorCompat x(float) -> x
    524:525:androidx.core.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    540:541:androidx.core.view.ViewPropertyAnimatorCompat y(float) -> y
    556:557:androidx.core.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    648:651:androidx.core.view.ViewPropertyAnimatorCompat z(float) -> z
    669:672:androidx.core.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewPropertyAnimatorUpdateListener androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$0 -> f$0
    android.view.View androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$1 -> f$1
    void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.<init>(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    791:791:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    794:794:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    799:799:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    804:804:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$Api16Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api16Impl:
    848:848:android.view.ViewPropertyAnimator withEndAction(android.view.ViewPropertyAnimator,java.lang.Runnable) -> withEndAction
    853:853:android.view.ViewPropertyAnimator withLayer(android.view.ViewPropertyAnimator) -> withLayer
    859:859:android.view.ViewPropertyAnimator withStartAction(android.view.ViewPropertyAnimator,java.lang.Runnable) -> withStartAction
androidx.core.view.ViewPropertyAnimatorCompat$Api18Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api18Impl:
    871:871:android.view.animation.Interpolator getInterpolator(android.view.ViewPropertyAnimator) -> getInterpolator
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl:
    914:914:android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener) -> setUpdateListener
androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl:
    891:891:android.view.ViewPropertyAnimator translationZ(android.view.ViewPropertyAnimator,float) -> translationZ
    885:885:android.view.ViewPropertyAnimator translationZBy(android.view.ViewPropertyAnimator,float) -> translationZBy
    896:896:android.view.ViewPropertyAnimator z(android.view.ViewPropertyAnimator,float) -> z
    901:901:android.view.ViewPropertyAnimator zBy(android.view.ViewPropertyAnimator,float) -> zBy
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    135:135:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View) -> getInsetsController
androidx.core.view.WindowInsetsAnimationCompat -> androidx.core.view.WindowInsetsAnimationCompat:
    74:78:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    86:88:void <init>(android.view.WindowInsetsAnimation) -> <init>
    194:194:float getAlpha() -> getAlpha
    168:168:long getDurationMillis() -> getDurationMillis
    121:121:float getFraction() -> getFraction
    148:148:float getInterpolatedFraction() -> getInterpolatedFraction
    160:160:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    97:97:int getTypeMask() -> getTypeMask
    209:209:void setAlpha(float) -> setAlpha
    524:527:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    184:184:void setFraction(float) -> setFraction
    329:329:androidx.core.view.WindowInsetsAnimationCompat toWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> toWindowInsetsAnimationCompat
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat -> androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat:
    220:222:void <init>(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> <init>
    226:228:void <init>(android.view.WindowInsetsAnimation$Bounds) -> <init>
    252:252:androidx.core.graphics.Insets getLowerBound() -> getLowerBound
    276:276:androidx.core.graphics.Insets getUpperBound() -> getUpperBound
    292:297:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat inset(androidx.core.graphics.Insets) -> inset
    312:312:android.view.WindowInsetsAnimation$Bounds toBounds() -> toBounds
    322:322:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat toBoundsCompat(android.view.WindowInsetsAnimation$Bounds) -> toBoundsCompat
    303:303:java.lang.String toString() -> toString
androidx.core.view.WindowInsetsAnimationCompat$Callback -> androidx.core.view.WindowInsetsAnimationCompat$Callback:
    371:372:void <init>(int) -> <init>
    396:396:int getDispatchMode() -> getDispatchMode
androidx.core.view.WindowInsetsAnimationCompat$Impl -> androidx.core.view.WindowInsetsAnimationCompat$Impl:
    541:544:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    572:572:float getAlpha() -> getAlpha
    568:568:long getDurationMillis() -> getDurationMillis
    552:552:float getFraction() -> getFraction
    556:559:float getInterpolatedFraction() -> getInterpolatedFraction
    564:564:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    548:548:int getTypeMask() -> getTypeMask
    580:580:void setAlpha(float) -> setAlpha
    576:576:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl21 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21:
    589:589:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    651:651:int buildAnimationMask(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat) -> buildAnimationMask
    628:642:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat computeAnimationBounds(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int) -> computeAnimationBounds
    621:621:android.view.View$OnApplyWindowInsetsListener createProxyListener(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> createProxyListener
    888:899:void dispatchOnEnd(android.view.View,androidx.core.view.WindowInsetsAnimationCompat) -> dispatchOnEnd
    827:842:void dispatchOnPrepare(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,android.view.WindowInsets,boolean) -> dispatchOnPrepare
    869:881:void dispatchOnProgress(android.view.View,androidx.core.view.WindowInsetsCompat,java.util.List) -> dispatchOnProgress
    850:861:void dispatchOnStart(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> dispatchOnStart
    819:822:android.view.WindowInsets forwardToViewIfNeeded(android.view.View,android.view.WindowInsets) -> forwardToViewIfNeeded
    906:910:androidx.core.view.WindowInsetsAnimationCompat$Callback getCallback(android.view.View) -> getCallback
    662:682:androidx.core.view.WindowInsetsCompat interpolateInsets(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,float,int) -> interpolateInsets
    595:613:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener:
    699:706:void <init>(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    712:807:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1:
    772:772:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int,android.view.View) -> <init>
    775:782:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2:
    786:786:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,android.view.View) -> <init>
    790:791:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3:
    798:798:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat,android.animation.ValueAnimator) -> <init>
    801:802:void run() -> run
androidx.core.view.WindowInsetsAnimationCompat$Impl30 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30:
    923:924:void <init>(android.view.WindowInsetsAnimation) -> <init>
    928:928:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    1043:1044:android.view.WindowInsetsAnimation$Bounds createPlatformBounds(androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> createPlatformBounds
    944:944:long getDurationMillis() -> getDurationMillis
    949:949:float getFraction() -> getFraction
    1054:1054:androidx.core.graphics.Insets getHigherBounds(android.view.WindowInsetsAnimation$Bounds) -> getHigherBounds
    959:959:float getInterpolatedFraction() -> getInterpolatedFraction
    939:939:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1049:1049:androidx.core.graphics.Insets getLowerBounds(android.view.WindowInsetsAnimation$Bounds) -> getLowerBounds
    933:933:int getTypeMask() -> getTypeMask
    1036:1037:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    954:954:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback:
    968:974:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    980:984:androidx.core.view.WindowInsetsAnimationCompat getWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> getWindowInsetsAnimationCompat
    1029:1030:void onEnd(android.view.WindowInsetsAnimation) -> onEnd
    991:991:void onPrepare(android.view.WindowInsetsAnimation) -> onPrepare
    1008:1024:android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List) -> onProgress
    999:1001:android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds) -> onStart
androidx.core.view.WindowInsetsAnimationControllerCompat -> androidx.core.view.WindowInsetsAnimationControllerCompat:
    47:48:void <init>(android.view.WindowInsetsAnimationController) -> <init>
    189:189:void finish(boolean) -> finish
    124:124:float getCurrentAlpha() -> getCurrentAlpha
    115:115:float getCurrentFraction() -> getCurrentFraction
    100:100:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    66:66:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    85:85:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    132:132:int getTypes() -> getTypes
    225:225:boolean isCancelled() -> isCancelled
    213:213:boolean isFinished() -> isFinished
    203:203:boolean isReady() -> isReady
    174:174:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl -> androidx.core.view.WindowInsetsAnimationControllerCompat$Impl:
    229:229:void <init>() -> <init>
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30 -> androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30:
    288:289:void <init>(android.view.WindowInsetsAnimationController) -> <init>
    336:336:void finish(boolean) -> finish
    317:317:float getCurrentAlpha() -> getCurrentAlpha
    312:312:float getCurrentFraction() -> getCurrentFraction
    307:307:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    295:295:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    301:301:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    323:323:int getTypes() -> getTypes
    351:351:boolean isCancelled() -> isCancelled
    346:346:boolean isFinished() -> isFinished
    328:328:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    78:81:void <clinit>() -> <clinit>
    88:96:void <init>(android.view.WindowInsets) -> <init>
    109:129:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    318:318:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2114:2114:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    721:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    696:696:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    566:566:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    441:441:int getStableInsetBottom() -> getStableInsetBottom
    401:401:int getStableInsetLeft() -> getStableInsetLeft
    421:421:int getStableInsetRight() -> getStableInsetRight
    381:381:int getStableInsetTop() -> getStableInsetTop
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    606:606:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    526:526:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    585:585:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    267:269:boolean hasInsets() -> hasInsets
    461:461:boolean hasStableInsets() -> hasStableInsets
    256:256:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    730:730:int hashCode() -> hashCode
    626:626:androidx.core.view.WindowInsetsCompat inset(androidx.core.graphics.Insets) -> inset
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1337:1344:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    286:286:boolean isConsumed() -> isConsumed
    302:302:boolean isRound() -> isRound
    713:713:boolean isVisible(int) -> isVisible
    339:341:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    360:362:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    1706:1706:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2110:2110:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2106:2106:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1804:1804:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:173:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
    2133:2142:void <clinit>() -> <clinit>
    2150:2174:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1399:1405:void <init>() -> <init>
    1416:1422:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1613:1613:androidx.core.view.WindowInsetsCompat build() -> build
    1524:1524:androidx.core.view.WindowInsetsCompat$Builder setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1587:1587:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1442:1442:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1623:1623:void <init>() -> <init>
    1626:1627:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1672:1694:void applyInsetTypes() -> applyInsetTypes
    1644:1651:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1720:1721:void <init>() -> <init>
    1725:1726:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1745:1749:androidx.core.view.WindowInsetsCompat build() -> build
    1761:1794:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1739:1739:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1731:1732:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1812:1813:void <init>() -> <init>
    1817:1821:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1857:1860:androidx.core.view.WindowInsetsCompat build() -> build
    1836:1836:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1846:1846:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1831:1831:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1826:1826:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1841:1841:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1868:1868:void <init>() -> <init>
    1872:1872:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1877:1879:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    747:751:void <clinit>() -> <clinit>
    755:756:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    784:784:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    774:774:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    769:769:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    841:847:boolean equals(java.lang.Object) -> equals
    822:822:androidx.core.graphics.Insets getInsets(int) -> getInsets
    828:830:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    806:806:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    794:794:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    800:800:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    789:789:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    812:812:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    853:854:int hashCode() -> hashCode
    817:817:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    892:899:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:903:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1111:1115:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1086:1087:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1187:1189:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:945:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    956:1042:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    920:920:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    1102:1105:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1064:1071:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1126:1155:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1078:1081:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1052:1052:boolean isTypeVisible(int) -> isTypeVisible
    930:930:boolean isVisible(int) -> isVisible
    1171:1182:void loadReflectionField() -> loadReflectionField
    1164:1164:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1097:1097:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1092:1092:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1195:1198:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1195:1203:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1214:1214:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1220:1220:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1226:1233:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1208:1208:boolean isConsumed() -> isConsumed
    1238:1238:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1246:1246:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1250:1250:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1262:1262:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1268:1272:boolean equals(java.lang.Object) -> equals
    1256:1256:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1277:1277:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1284:1289:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1284:1293:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1308:1312:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1299:1302:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1318:1321:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1327:1327:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1350:1350:void <clinit>() -> <clinit>
    1353:1353:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1357:1357:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1363:1364:androidx.core.graphics.Insets getInsets(int) -> getInsets
    1371:1372:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    1378:1378:boolean isVisible(int) -> isVisible
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    2046:2046:int indexOf(int) -> indexOf
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2075:2096:int toPlatformType(int) -> toPlatformType
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.WindowInsetsControllerCompat:
    96:97:void <init>(android.view.WindowInsetsController) -> <init>
    100:106:void <init>(android.view.Window,android.view.View) -> <init>
    296:296:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    256:256:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    282:282:int getSystemBarsBehavior() -> getSystemBarsBehavior
    168:168:void hide(int) -> hide
    205:205:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    181:181:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    311:311:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    217:217:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    193:193:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    270:270:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    154:154:void show(int) -> show
    128:128:androidx.core.view.WindowInsetsControllerCompat toWindowInsetsControllerCompat(android.view.WindowInsetsController) -> toWindowInsetsControllerCompat
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.WindowInsetsControllerCompat$Impl:
    348:348:void <init>() -> <init>
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.WindowInsetsControllerCompat$Impl20:
    void $r8$lambda$pAhi3kcyEfefAOVk6cMro6TSEfc(android.view.View) -> $r8$lambda$pAhi3kcyEfefAOVk6cMro6TSEfc
      # {"id":"com.android.tools.r8.synthesized"}
    403:405:void <init>(android.view.Window,android.view.View) -> <init>
    467:467:void hide(int) -> hide
    474:482:void hideForType(int) -> hideForType
    451:453:void lambda$showForType$0(android.view.View) -> lambda$showForType$0
    519:527:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    488:490:void setSystemUiFlag(int) -> setSystemUiFlag
    502:502:void setWindowFlag(int) -> setWindowFlag
    415:415:void show(int) -> show
    422:449:void showForType(int) -> showForType
    495:497:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
    506:506:void unsetWindowFlag(int) -> unsetWindowFlag
androidx.core.view.WindowInsetsControllerCompat$Impl20$$ExternalSyntheticLambda0 -> androidx.core.view.WindowInsetsControllerCompat$Impl20$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.WindowInsetsControllerCompat$Impl20$$InternalSyntheticLambda$1$319e1760a8231388672c0875f97d4375b66c4c12da576c10f128d46a32ced4c0$0.f$0 -> f$0
    void androidx.core.view.WindowInsetsControllerCompat$Impl20$$InternalSyntheticLambda$1$319e1760a8231388672c0875f97d4375b66c4c12da576c10f128d46a32ced4c0$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.WindowInsetsControllerCompat$Impl20$$InternalSyntheticLambda$1$319e1760a8231388672c0875f97d4375b66c4c12da576c10f128d46a32ced4c0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.WindowInsetsControllerCompat$Impl23:
    554:554:void <init>(android.view.Window,android.view.View) -> <init>
    559:559:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    566:570:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.WindowInsetsControllerCompat$Impl26:
    579:579:void <init>(android.view.Window,android.view.View) -> <init>
    584:584:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    591:595:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.WindowInsetsControllerCompat$Impl30:
    void $r8$lambda$cdZqTFRvo8KSnFk5DhCaM1suM5Y(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener,android.view.WindowInsetsController,int) -> $r8$lambda$cdZqTFRvo8KSnFk5DhCaM1suM5Y
      # {"id":"com.android.tools.r8.synthesized"}
    613:614:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    605:620:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    769:781:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    707:733:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    761:761:int getSystemBarsBehavior() -> getSystemBarsBehavior
    644:644:void hide(int) -> hide
    676:676:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    649:649:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    775:776:void lambda$addOnControllableInsetsChangedListener$0(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener,android.view.WindowInsetsController,int) -> lambda$addOnControllableInsetsChangedListener$0
    789:791:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    683:695:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    656:668:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    748:748:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    803:805:void setSystemUiFlag(int) -> setSystemUiFlag
    625:639:void show(int) -> show
    796:798:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticLambda0 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.WindowInsetsControllerCompat$Impl30 androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticLambda$1$70dba293f2156ad97a4e86ec14015cdd9dae606cc42c8161d19ae4c4f5215d71$0.f$0 -> f$0
    androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticLambda$1$70dba293f2156ad97a4e86ec14015cdd9dae606cc42c8161d19ae4c4f5215d71$0.f$1 -> f$1
    void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticLambda$1$70dba293f2156ad97a4e86ec14015cdd9dae606cc42c8161d19ae4c4f5215d71$0.<init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticLambda$1$70dba293f2156ad97a4e86ec14015cdd9dae606cc42c8161d19ae4c4f5215d71$0.onControllableInsetsChanged(android.view.WindowInsetsController,int) -> onControllableInsetsChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$1 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$1:
    708:710:void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> <init>
    729:729:void onCancelled(android.view.WindowInsetsAnimationController) -> onCancelled
    723:723:void onFinished(android.view.WindowInsetsAnimationController) -> onFinished
    715:717:void onReady(android.view.WindowInsetsAnimationController,int) -> onReady
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1252:1699:void <init>(java.lang.Object) -> <init>
    1252:1703:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1999:1999:void addAction(int) -> addAction
    2033:2033:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1911:1911:void addChild(android.view.View) -> addChild
    1930:1930:void addChild(android.view.View,int) -> addChild
    2777:2780:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2706:2717:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    3335:3335:boolean canOpenPopup() -> canOpenPopup
    2769:2772:void clearExtrasSpans() -> clearExtrasSpans
    4132:4146:boolean equals(java.lang.Object) -> equals
    2006:2010:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    2146:2151:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    3382:3385:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    1836:1836:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1858:1858:androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    3078:3089:java.util.List getActionList() -> getActionList
    1984:1984:int getActions() -> getActions
    3459:3462:java.util.List getAvailableExtraData() -> getAvailableExtraData
    4224:4226:boolean getBooleanProperty(int) -> getBooleanProperty
    2229:2229:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2261:2261:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1896:1896:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1879:1879:int getChildCount() -> getChildCount
    2644:2644:java.lang.CharSequence getClassName() -> getClassName
    2743:2745:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2992:2994:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    3025:3027:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    2804:2804:java.lang.CharSequence getContentDescription() -> getContentDescription
    2960:2961:int getDrawingOrder() -> getDrawingOrder
    3215:3215:java.lang.CharSequence getError() -> getError
    3408:3408:android.os.Bundle getExtras() -> getExtras
    3160:3163:java.lang.CharSequence getHintText() -> getHintText
    1730:1730:java.lang.Object getInfo() -> getInfo
    3421:3421:int getInputType() -> getInputType
    3266:3266:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    3322:3322:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    2924:2924:int getLiveRegion() -> getLiveRegion
    3517:3517:int getMaxTextLength() -> getMaxTextLength
    2126:2126:int getMovementGranularities() -> getMovementGranularities
    2724:2727:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2620:2620:java.lang.CharSequence getPackageName() -> getPackageName
    3863:3866:java.lang.CharSequence getPaneTitle() -> getPaneTitle
    2167:2167:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    3040:3042:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    4034:4034:java.lang.CharSequence getRoleDescription() -> getRoleDescription
    2734:2734:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2814:2817:java.lang.CharSequence getStateDescription() -> getStateDescription
    2668:2682:java.lang.CharSequence getText() -> getText
    3562:3562:int getTextSelectionEnd() -> getTextSelectionEnd
    3549:3549:int getTextSelectionStart() -> getTextSelectionStart
    3807:3810:java.lang.CharSequence getTooltipText() -> getTooltipText
    4087:4090:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo() -> getTouchDelegateInfo
    3644:3644:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    3579:3579:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    2898:2898:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3705:3705:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    1870:1870:int getWindowId() -> getWindowId
    2764:2764:boolean hasSpans() -> hasSpans
    4121:4121:int hashCode() -> hashCode
    2753:2760:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2413:2413:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2285:2285:boolean isCheckable() -> isCheckable
    2309:2309:boolean isChecked() -> isChecked
    2467:2467:boolean isClickable() -> isClickable
    3118:3118:boolean isContentInvalid() -> isContentInvalid
    3131:3131:boolean isContextClickable() -> isContextClickable
    3718:3718:boolean isDismissable() -> isDismissable
    3747:3747:boolean isEditable() -> isEditable
    2515:2515:boolean isEnabled() -> isEnabled
    2333:2333:boolean isFocusable() -> isFocusable
    2357:2357:boolean isFocused() -> isFocused
    3953:3958:boolean isHeading() -> isHeading
    2590:2591:boolean isImportantForAccessibility() -> isImportantForAccessibility
    2491:2491:boolean isLongClickable() -> isLongClickable
    3778:3778:boolean isMultiLine() -> isMultiLine
    2539:2539:boolean isPassword() -> isPassword
    3882:3885:boolean isScreenReaderFocusable() -> isScreenReaderFocusable
    2563:2563:boolean isScrollable() -> isScrollable
    2443:2443:boolean isSelected() -> isSelected
    3916:3919:boolean isShowingHintText() -> isShowingHintText
    3986:3989:boolean isTextEntryKey() -> isTextEntryKey
    2382:2382:boolean isVisibleToUser() -> isVisibleToUser
    1741:1741:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1756:1757:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    1769:1769:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1780:1780:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2077:2077:boolean performAction(int) -> performAction
    2095:2095:boolean performAction(int,android.os.Bundle) -> performAction
    2864:2864:void recycle() -> recycle
    4022:4022:boolean refresh() -> refresh
    2058:2058:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    1950:1950:boolean removeChild(android.view.View) -> removeChild
    1968:1968:boolean removeChild(android.view.View,int) -> removeChild
    2784:2793:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2433:2433:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    3483:3484:void setAvailableExtraData(java.util.List) -> setAvailableExtraData
    4214:4219:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2252:2252:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2276:2276:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    3353:3353:void setCanOpenPopup(boolean) -> setCanOpenPopup
    2300:2300:void setCheckable(boolean) -> setCheckable
    2324:2324:void setChecked(boolean) -> setChecked
    2659:2659:void setClassName(java.lang.CharSequence) -> setClassName
    2482:2482:void setClickable(boolean) -> setClickable
    3002:3003:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3011:3012:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2834:2834:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    3106:3106:void setContentInvalid(boolean) -> setContentInvalid
    3150:3150:void setContextClickable(boolean) -> setContextClickable
    3736:3736:void setDismissable(boolean) -> setDismissable
    2979:2980:void setDrawingOrder(int) -> setDrawingOrder
    3767:3767:void setEditable(boolean) -> setEditable
    2530:2530:void setEnabled(boolean) -> setEnabled
    3204:3204:void setError(java.lang.CharSequence) -> setError
    2348:2348:void setFocusable(boolean) -> setFocusable
    2372:2372:void setFocused(boolean) -> setFocused
    3973:3976:void setHeading(boolean) -> setHeading
    3182:3185:void setHintText(java.lang.CharSequence) -> setHintText
    2609:2610:void setImportantForAccessibility(boolean) -> setImportantForAccessibility
    3442:3442:void setInputType(int) -> setInputType
    3229:3229:void setLabelFor(android.view.View) -> setLabelFor
    3249:3249:void setLabelFor(android.view.View,int) -> setLabelFor
    3280:3280:void setLabeledBy(android.view.View) -> setLabeledBy
    3305:3305:void setLabeledBy(android.view.View,int) -> setLabeledBy
    2944:2944:void setLiveRegion(int) -> setLiveRegion
    2506:2506:void setLongClickable(boolean) -> setLongClickable
    3505:3505:void setMaxTextLength(int) -> setMaxTextLength
    2115:2115:void setMovementGranularities(int) -> setMovementGranularities
    3796:3796:void setMultiLine(boolean) -> setMultiLine
    2635:2635:void setPackageName(java.lang.CharSequence) -> setPackageName
    3849:3852:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2182:2184:void setParent(android.view.View) -> setParent
    2209:2212:void setParent(android.view.View,int) -> setParent
    2554:2554:void setPassword(boolean) -> setPassword
    3060:3060:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    4066:4066:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    3901:3904:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2578:2578:void setScrollable(boolean) -> setScrollable
    2458:2458:void setSelected(boolean) -> setSelected
    3936:3939:void setShowingHintText(boolean) -> setShowingHintText
    1789:1791:void setSource(android.view.View) -> setSource
    1816:1819:void setSource(android.view.View,int) -> setSource
    2849:2852:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2698:2698:void setText(java.lang.CharSequence) -> setText
    4004:4007:void setTextEntryKey(boolean) -> setTextEntryKey
    3538:3538:void setTextSelection(int,int) -> setTextSelection
    3829:3832:void setTooltipText(java.lang.CharSequence) -> setTooltipText
    4114:4115:void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat) -> setTouchDelegateInfo
    3666:3666:void setTraversalAfter(android.view.View) -> setTraversalAfter
    3692:3692:void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    3601:3601:void setTraversalBefore(android.view.View) -> setTraversalBefore
    3628:3628:void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    2880:2880:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    2402:2402:void setVisibleToUser(boolean) -> setVisibleToUser
    4156:4210:java.lang.String toString() -> toString
    1720:1720:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1713:1713:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
    1684:1684:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    107:591:void <clinit>() -> <clinit>
    611:611:void <init>(int,java.lang.CharSequence) -> <init>
    625:625:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    629:629:void <init>(java.lang.Object) -> <init>
    634:634:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    639:647:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    711:711:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    725:734:boolean equals(java.lang.Object) -> equals
    657:657:int getId() -> getId
    671:671:java.lang.CharSequence getLabel() -> getLabel
    717:717:int hashCode() -> hashCode
    686:700:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    811:812:void <init>(java.lang.Object) -> <init>
    822:822:int getColumnCount() -> getColumnCount
    835:835:int getRowCount() -> getRowCount
    866:866:int getSelectionMode() -> getSelectionMode
    848:848:boolean isHierarchical() -> isHierarchical
    782:782:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    804:804:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    935:936:void <init>(java.lang.Object) -> <init>
    946:946:int getColumnIndex() -> getColumnIndex
    959:959:int getColumnSpan() -> getColumnSpan
    972:972:int getRowIndex() -> getRowIndex
    985:985:int getRowSpan() -> getRowSpan
    1002:1002:boolean isHeading() -> isHeading
    1015:1015:boolean isSelected() -> isSelected
    903:903:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    928:928:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    1053:1054:void <init>(java.lang.Object) -> <init>
    1064:1064:float getCurrent() -> getCurrent
    1077:1077:float getMax() -> getMax
    1090:1090:float getMin() -> getMin
    1107:1107:int getType() -> getType
    1044:1045:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat:
    1125:1129:void <init>(java.util.Map) -> <init>
    1133:1134:void <init>(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo) -> <init>
    1167:1168:android.graphics.Region getRegionAt(int) -> getRegionAt
    1148:1149:int getRegionCount() -> getRegionCount
    1195:1198:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region) -> getTargetForRegion
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    120:124:void <init>() -> <init>
    138:139:void <init>(java.lang.Object) -> <init>
    147:147:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    39:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:66:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    81:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
    98:98:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:105:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    54:54:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat:
    88:89:void <init>(java.lang.Object) -> <init>
    338:345:boolean equals(java.lang.Object) -> equals
    267:269:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> getAnchor
    172:172:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    239:239:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    224:224:int getChildCount() -> getChildCount
    159:159:int getId() -> getId
    117:117:int getLayer() -> getLayer
    146:146:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    131:132:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    253:254:java.lang.CharSequence getTitle() -> getTitle
    103:103:int getType() -> getType
    327:327:int hashCode() -> hashCode
    211:211:boolean isAccessibilityFocused() -> isAccessibilityFocused
    185:185:boolean isActive() -> isActive
    198:198:boolean isFocused() -> isFocused
    284:284:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    304:305:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    321:321:void recycle() -> recycle
    351:364:java.lang.String toString() -> toString
    83:83:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl:
    394:394:void getBoundsInScreen(android.view.accessibility.AccessibilityWindowInfo,android.graphics.Rect) -> getBoundsInScreen
    399:399:android.view.accessibility.AccessibilityWindowInfo getChild(android.view.accessibility.AccessibilityWindowInfo,int) -> getChild
    404:404:int getChildCount(android.view.accessibility.AccessibilityWindowInfo) -> getChildCount
    409:409:int getId(android.view.accessibility.AccessibilityWindowInfo) -> getId
    414:414:int getLayer(android.view.accessibility.AccessibilityWindowInfo) -> getLayer
    419:419:android.view.accessibility.AccessibilityWindowInfo getParent(android.view.accessibility.AccessibilityWindowInfo) -> getParent
    424:424:android.view.accessibility.AccessibilityNodeInfo getRoot(android.view.accessibility.AccessibilityWindowInfo) -> getRoot
    429:429:int getType(android.view.accessibility.AccessibilityWindowInfo) -> getType
    434:434:boolean isAccessibilityFocused(android.view.accessibility.AccessibilityWindowInfo) -> isAccessibilityFocused
    439:439:boolean isActive(android.view.accessibility.AccessibilityWindowInfo) -> isActive
    444:444:boolean isFocused(android.view.accessibility.AccessibilityWindowInfo) -> isFocused
    449:449:android.view.accessibility.AccessibilityWindowInfo obtain() -> obtain
    454:454:android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo) -> obtain
    459:459:void recycle(android.view.accessibility.AccessibilityWindowInfo) -> recycle
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api24Impl -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api24Impl:
    471:471:android.view.accessibility.AccessibilityNodeInfo getAnchor(android.view.accessibility.AccessibilityWindowInfo) -> getAnchor
    476:476:java.lang.CharSequence getTitle(android.view.accessibility.AccessibilityWindowInfo) -> getTitle
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    45:52:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    135:224:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    94:123:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    135:141:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    157:163:androidx.lifecycle.Lifecycle$Event downTo(androidx.lifecycle.Lifecycle$State) -> downTo
    224:238:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    179:185:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    201:207:androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State) -> upTo
    94:94:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    94:94:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    246:286:void <clinit>() -> <clinit>
    247:247:void <init>(java.lang.String,int) -> <init>
    295:295:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    246:246:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    246:246:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    212:212:void <init>() -> <init>
    209:209:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
    36:39:boolean approveCall(java.lang.String,int) -> approveCall
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    31:32:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    173:185:void <clinit>() -> <clinit>
    250:250:void <init>() -> <init>
    619:626:boolean equals(java.lang.Object) -> equals
    493:493:int hashCode() -> hashCode
    498:498:java.lang.String toString() -> toString
    609:609:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    536:536:java.lang.String usageToString(int) -> usageToString
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    14:15:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    21:22:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    46:56:void <init>() -> <init>
    115:119:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    125:125:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    14:16:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi26 -> androidx.media.AudioAttributesImplApi26:
    41:41:void <init>() -> <init>
androidx.media.AudioAttributesImplApi26Parcelizer -> androidx.media.AudioAttributesImplApi26Parcelizer:
    14:16:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    63:91:void <init>() -> <init>
    156:162:boolean equals(java.lang.Object) -> equals
    126:126:int getContentType() -> getContentType
    136:137:int getFlags() -> getFlags
    113:116:int getLegacyStreamType() -> getLegacyStreamType
    131:131:int getUsage() -> getUsage
    151:151:int hashCode() -> hashCode
    169:180:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    14:18:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    24:28:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    34:35:void <init>(androidx.versionedparcelable.VersionedParcelable) -> <init>
    38:39:void <init>(android.os.Parcel) -> <init>
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    82:83:androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream) -> fromInputStream
    58:61:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    109:114:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> getVersionedParcelable
    144:151:java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String) -> getVersionedParcelableList
    94:96:void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable) -> putVersionedParcelable
    126:132:void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List) -> putVersionedParcelableList
    70:72:void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream) -> toOutputStream
    48:48:android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable) -> toParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:89:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1221:1237:java.lang.Exception createException(int,java.lang.String) -> createException
    1628:1633:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1609:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1208:1208:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    995:1010:int getType(java.lang.Object) -> getType
    1616:1621:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    1435:1438:java.lang.Object[] readArray(java.lang.Object[],int) -> readArray
    1444:1487:java.lang.Object[] readArray(java.lang.Object[]) -> readArray
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    578:581:boolean[] readBooleanArray(boolean[],int) -> readBooleanArray
    587:593:boolean[] readBooleanArray() -> readBooleanArray
    493:496:android.os.Bundle readBundle(android.os.Bundle,int) -> readBundle
    1245:1248:byte readByte(byte,int) -> readByte
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    625:634:char[] readCharArray(char[],int) -> readCharArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1344:1380:java.util.Collection readCollection(java.util.Collection) -> readCollection
    441:444:double readDouble(double,int) -> readDouble
    795:798:double[] readDoubleArray(double[],int) -> readDoubleArray
    804:810:double[] readDoubleArray() -> readDoubleArray
    1170:1176:java.lang.Exception readException(java.lang.Exception,int) -> readException
    1198:1198:java.lang.Exception readException(int,java.lang.String) -> readException
    1193:1193:int readExceptionCode() -> readExceptionCode
    430:433:float readFloat(float,int) -> readFloat
    751:754:float[] readFloatArray(float[],int) -> readFloatArray
    760:766:float[] readFloatArray() -> readFloatArray
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    663:666:int[] readIntArray(int[],int) -> readIntArray
    672:678:int[] readIntArray() -> readIntArray
    1337:1340:java.util.List readList(java.util.List,int) -> readList
    419:422:long readLong(long,int) -> readLong
    707:710:long[] readLongArray(long[],int) -> readLongArray
    716:722:long[] readLongArray() -> readLongArray
    1401:1417:java.util.Map readMap(java.util.Map,int) -> readMap
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    1523:1553:java.io.Serializable readSerializable() -> readSerializable
    1318:1321:java.util.Set readSet(java.util.Set,int) -> readSet
    1256:1262:android.util.Size readSize(android.util.Size,int) -> readSize
    1272:1278:android.util.SizeF readSizeF(android.util.SizeF,int) -> readSizeF
    1289:1299:android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int) -> readSparseBooleanArray
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    461:464:android.os.IBinder readStrongBinder(android.os.IBinder,int) -> readStrongBinder
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    941:942:void writeArray(java.lang.Object[],int) -> writeArray
    949:986:void writeArray(java.lang.Object[]) -> writeArray
    294:295:void writeBoolean(boolean,int) -> writeBoolean
    557:558:void writeBooleanArray(boolean[],int) -> writeBooleanArray
    565:571:void writeBooleanArray(boolean[]) -> writeBooleanArray
    285:286:void writeBundle(android.os.Bundle,int) -> writeBundle
    504:505:void writeByte(byte,int) -> writeByte
    304:305:void writeByteArray(byte[],int) -> writeByteArray
    316:317:void writeByteArray(byte[],int,int,int) -> writeByteArray
    601:609:void writeCharArray(char[],int) -> writeCharArray
    325:326:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    875:876:void writeCollection(java.util.Collection,int) -> writeCollection
    881:923:void writeCollection(java.util.Collection) -> writeCollection
    361:362:void writeDouble(double,int) -> writeDouble
    774:775:void writeDoubleArray(double[],int) -> writeDoubleArray
    782:788:void writeDoubleArray(double[]) -> writeDoubleArray
    1107:1144:void writeException(java.lang.Exception,int) -> writeException
    352:353:void writeFloat(float,int) -> writeFloat
    730:731:void writeFloatArray(float[],int) -> writeFloatArray
    738:744:void writeFloatArray(float[]) -> writeFloatArray
    334:335:void writeInt(int,int) -> writeInt
    642:643:void writeIntArray(int[],int) -> writeIntArray
    650:656:void writeIntArray(int[]) -> writeIntArray
    840:840:void writeList(java.util.List,int) -> writeList
    343:344:void writeLong(long,int) -> writeLong
    686:687:void writeLongArray(long[],int) -> writeLongArray
    694:700:void writeLongArray(long[]) -> writeLongArray
    854:871:void writeMap(java.util.Map,int) -> writeMap
    1157:1157:void writeNoException() -> writeNoException
    391:392:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    1057:1058:void writeSerializable(java.io.Serializable,int) -> writeSerializable
    1063:1077:void writeSerializable(java.io.Serializable) -> writeSerializable
    826:826:void writeSet(java.util.Set,int) -> writeSet
    514:518:void writeSize(android.util.Size,int) -> writeSize
    528:532:void writeSizeF(android.util.SizeF,int) -> writeSizeF
    539:549:void writeSparseBooleanArray(android.util.SparseBooleanArray,int) -> writeSparseBooleanArray
    370:371:void writeString(java.lang.String,int) -> writeString
    379:380:void writeStrongBinder(android.os.IBinder,int) -> writeStrongBinder
    276:277:void writeStrongInterface(android.os.IInterface,int) -> writeStrongInterface
    1586:1598:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1022:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1029:1036:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1042:1047:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcel$1 -> androidx.versionedparcelable.VersionedParcel$1:
    1535:1535:void <init>(androidx.versionedparcelable.VersionedParcel,java.io.InputStream) -> <init>
    1539:1544:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
    1642:1642:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    41:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    253:253:android.os.Bundle readBundle() -> readBundle
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    221:221:double readDouble() -> readDouble
    70:84:boolean readField(int) -> readField
    216:216:float readFloat() -> readFloat
    206:206:int readInt() -> readInt
    211:211:long readLong() -> readLong
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    231:231:android.os.IBinder readStrongBinder() -> readStrongBinder
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    191:191:void writeBundle(android.os.Bundle) -> writeBundle
    127:130:void writeByteArray(byte[]) -> writeByteArray
    137:140:void writeByteArray(byte[],int,int) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    161:161:void writeDouble(double) -> writeDouble
    156:156:void writeFloat(float) -> writeFloat
    146:146:void writeInt(int) -> writeInt
    151:151:void writeLong(long) -> writeLong
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
    171:171:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    186:186:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream -> androidx.versionedparcelable.VersionedParcelStream:
    44:44:void <clinit>() -> <clinit>
    76:76:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    71:122:void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    142:150:void closeField() -> closeField
    156:156:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    402:404:boolean readBoolean() -> readBoolean
    429:436:android.os.Bundle readBundle() -> readBundle
    381:390:byte[] readByteArray() -> readByteArray
    356:358:double readDouble() -> readDouble
    164:182:boolean readField(int) -> readField
    347:349:float readFloat() -> readFloat
    329:331:int readInt() -> readInt
    338:340:long readLong() -> readLong
    491:536:void readObject(int,java.lang.String,android.os.Bundle) -> readObject
    365:374:java.lang.String readString() -> readString
    191:193:void setOutputField(int) -> setOutputField
    135:137:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    288:290:void writeBoolean(boolean) -> writeBoolean
    412:423:void writeBundle(android.os.Bundle) -> writeBundle
    200:206:void writeByteArray(byte[]) -> writeByteArray
    214:220:void writeByteArray(byte[],int,int) -> writeByteArray
    226:227:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    263:265:void writeDouble(double) -> writeDouble
    253:255:void writeFloat(float) -> writeFloat
    234:236:void writeInt(int) -> writeInt
    243:245:void writeLong(long) -> writeLong
    443:484:void writeObject(java.lang.Object) -> writeObject
    303:304:void writeParcelable(android.os.Parcelable) -> writeParcelable
    274:281:void writeString(java.lang.String) -> writeString
    296:297:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    310:311:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream$1 -> androidx.versionedparcelable.VersionedParcelStream$1:
    85:85:void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream) -> <init>
    88:92:int read() -> read
    98:103:int read(byte[],int,int) -> read
    110:115:long skip(long) -> skip
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> androidx.versionedparcelable.VersionedParcelStream$FieldBuffer:
    544:551:void <init>(int,java.io.DataOutputStream) -> <init>
    555:562:void flushField() -> flushField
com.tnemec.mariasek.android.MariasekActivity -> com.tnemec.mariasek.android.MariasekActivity:
    26:26:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    129:131:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    136:137:void monodroidClearReferences() -> monodroidClearReferences
    121:121:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    57:57:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    41:41:void onCreate(android.os.Bundle) -> onCreate
    97:97:void onDestroy() -> onDestroy
    73:73:void onPause() -> onPause
    105:105:void onRestart() -> onRestart
    81:81:void onResume() -> onResume
    113:113:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    65:65:void onStart() -> onStart
    89:89:void onStop() -> onStop
    49:49:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
com.xamarin.java_interop.ManagedPeer -> com.xamarin.java_interop.ManagedPeer:
    4:4:void <init>() -> <init>
com.xamarin.java_interop.internal.JavaProxyObject -> com.xamarin.java_interop.internal.JavaProxyObject:
    13:13:void <clinit>() -> <clinit>
    7:19:void <init>() -> <init>
    32:32:void jiAddManagedReference(java.lang.Object) -> jiAddManagedReference
    37:37:void jiClearManagedReferences() -> jiClearManagedReferences
com.xamarin.java_interop.internal.JavaProxyThrowable -> com.xamarin.java_interop.internal.JavaProxyThrowable:
    13:13:void <clinit>() -> <clinit>
    19:21:void <init>() -> <init>
    19:25:void <init>(java.lang.String) -> <init>
    30:30:void jiAddManagedReference(java.lang.Object) -> jiAddManagedReference
    35:35:void jiClearManagedReferences() -> jiClearManagedReferences
crc64493ac3851fab1842.AndroidGameActivity -> crc64493ac3851fab1842.AndroidGameActivity:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    74:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    81:82:void monodroidClearReferences() -> monodroidClearReferences
    42:42:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    34:34:void onCreate(android.os.Bundle) -> onCreate
    66:66:void onDestroy() -> onDestroy
    50:50:void onPause() -> onPause
    58:58:void onResume() -> onResume
crc64493ac3851fab1842.MonoGameAndroidGameView -> crc64493ac3851fab1842.MonoGameAndroidGameView:
    23:23:void <clinit>() -> <clinit>
    29:31:void <init>(android.content.Context) -> <init>
    38:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    112:114:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    119:120:void monodroidClearReferences() -> monodroidClearReferences
    72:72:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    56:56:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    64:64:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    104:104:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    80:80:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    88:88:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    96:96:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
crc64493ac3851fab1842.OrientationListener -> crc64493ac3851fab1842.OrientationListener:
    15:15:void <clinit>() -> <clinit>
    21:23:void <init>(android.content.Context,int) -> <init>
    38:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:46:void monodroidClearReferences() -> monodroidClearReferences
    30:30:void onOrientationChanged(int) -> onOrientationChanged
crc64493ac3851fab1842.ScreenReceiver -> crc64493ac3851fab1842.ScreenReceiver:
    15:15:void <clinit>() -> <clinit>
    21:23:void <init>() -> <init>
    38:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:46:void monodroidClearReferences() -> monodroidClearReferences
    30:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
crc645f7d33becc382dfd.UncaughtExceptionEventHandler -> crc645f7d33becc382dfd.UncaughtExceptionEventHandler:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    30:32:void <init>(com.tnemec.mariasek.android.MariasekActivity) -> <init>
    47:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:55:void monodroidClearReferences() -> monodroidClearReferences
    39:39:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
kotlin.ExceptionsKt -> kotlin.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ExceptionsKt__ExceptionsKt -> kotlin.ExceptionsKt__ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    71:71:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
kotlin.KotlinNothingValueException -> kotlin.KotlinNothingValueException:
# {"id":"sourceFile","fileName":"ExceptionsH.kt"}
    118:118:void <init>() -> <init>
kotlin.Result -> kotlin.Result:
# {"id":"sourceFile","fileName":"Result.kt"}
    38:38:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    32:32:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
kotlin.Result$Companion -> kotlin.Result$Companion:
# {"id":"sourceFile","fileName":"Result.kt"}
kotlin.Result$Failure -> kotlin.Result$Failure:
# {"id":"sourceFile","fileName":"Result.kt"}
    105:106:void <init>(java.lang.Throwable) -> <init>
    109:109:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
kotlin.ResultKt -> kotlin.ResultKt:
# {"id":"sourceFile","fileName":"Result.kt"}
    122:122:java.lang.Object createFailure(java.lang.Throwable) -> createFailure
kotlin.Unit -> kotlin.Unit:
# {"id":"sourceFile","fileName":"Unit.kt"}
kotlin.collections.ArraysKt -> kotlin.collections.ArraysKt:
    char single(char[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
# {"id":"sourceFile","fileName":"Arrays.kt"}
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    2890:2893:char single(char[]) -> single
    3063:3063:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
kotlin.collections.CollectionsKt -> kotlin.collections.CollectionsKt:
    boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toList(java.lang.Iterable) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Set toSet(java.lang.Iterable) -> toSet
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    20:20:java.util.List listOf(java.lang.Object) -> listOf
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    71:71:java.util.List emptyList() -> emptyList
    291:293:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
# {"id":"sourceFile","fileName":"Iterators.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
# {"id":"sourceFile","fileName":"MutableCollectionsJVM.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
# {"id":"sourceFile","fileName":"MutableCollections.kt"}
    116:120:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
# {"id":"sourceFile","fileName":"_CollectionsJvm.kt"}
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    1293:1294:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> toCollection
    1310:1317:java.util.List toList(java.lang.Iterable) -> toList
    1324:1326:java.util.List toMutableList(java.lang.Iterable) -> toMutableList
    1333:1333:java.util.List toMutableList(java.util.Collection) -> toMutableList
    1342:1349:java.util.Set toSet(java.lang.Iterable) -> toSet
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
# {"id":"sourceFile","fileName":"Collections.kt"}
    15:15:java.lang.Object next() -> next
    20:20:java.lang.Void next() -> next
    15:15:java.lang.Object previous() -> previous
    21:21:java.lang.Void previous() -> previous
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
# {"id":"sourceFile","fileName":"Collections.kt"}
    24:24:boolean contains(java.lang.Object) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    36:36:java.lang.Void get(int) -> get
    24:24:int indexOf(java.lang.Object) -> indexOf
    40:40:java.util.Iterator iterator() -> iterator
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    24:24:int size() -> size
    49:49:java.util.List subList(int,int) -> subList
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
# {"id":"sourceFile","fileName":"Sets.kt"}
    14:14:boolean contains(java.lang.Object) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    26:26:java.util.Iterator iterator() -> iterator
    14:14:int size() -> size
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    35:35:java.lang.Object next() -> next
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
kotlin.collections.SetsKt__SetsJVMKt -> kotlin.collections.SetsKt__SetsJVMKt:
# {"id":"sourceFile","fileName":"SetsJVM.kt"}
    18:18:java.util.Set setOf(java.lang.Object) -> setOf
kotlin.collections.SetsKt__SetsKt -> kotlin.collections.SetsKt__SetsKt:
# {"id":"sourceFile","fileName":"Sets.kt"}
    36:36:java.util.Set emptySet() -> emptySet
    173:175:java.util.Set optimizeReadOnlySet(java.util.Set) -> optimizeReadOnlySet
kotlin.coroutines.AbstractCoroutineContextElement -> kotlin.coroutines.AbstractCoroutineContextElement:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    14:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    14:14:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    14:14:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    14:14:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    14:14:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.AbstractCoroutineContextKey -> kotlin.coroutines.AbstractCoroutineContextKey:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    46:52:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1) -> <init>
    55:55:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key) -> isSubKey$kotlin_stdlib
    54:54:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element) -> tryCast$kotlin_stdlib
kotlin.coroutines.CombinedContext -> kotlin.coroutines.CombinedContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> <init>
    111:111:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):111 -> <init>
    113:114:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    153:153:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> contains
    158:163:boolean containsAll(kotlin.coroutines.CombinedContext) -> containsAll
    169:169:boolean equals(java.lang.Object) -> equals
    131:131:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    120:125:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    171:171:int hashCode() -> hashCode
    134:139:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    147:147:int size() -> size
    174:174:java.lang.String toString() -> toString
kotlin.coroutines.CombinedContext$toString$1 -> kotlin.coroutines.CombinedContext$toString$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    174:174:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    175:175:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.ContinuationInterceptor -> kotlin.coroutines.ContinuationInterceptor:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> kotlin.coroutines.ContinuationInterceptor$DefaultImpls:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    55:60:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> get
    67:70:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlin.coroutines.ContinuationInterceptor$Key -> kotlin.coroutines.ContinuationInterceptor$Key:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
kotlin.coroutines.CoroutineContext -> kotlin.coroutines.CoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> kotlin.coroutines.CoroutineContext$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    31:32:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Element -> kotlin.coroutines.CoroutineContext$Element:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.CoroutineContext$Element$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    67:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> get
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    59:59:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Key -> kotlin.coroutines.CoroutineContext$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$plus$1 -> kotlin.coroutines.CoroutineContext$plus$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:40:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.EmptyCoroutineContext -> kotlin.coroutines.EmptyCoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
kotlin.internal.PlatformImplementations -> kotlin.internal.PlatformImplementations:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    32:32:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    45:45:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
kotlin.internal.PlatformImplementations$ReflectThrowable -> kotlin.internal.PlatformImplementations$ReflectThrowable:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    21:27:void <clinit>() -> <clinit>
kotlin.internal.PlatformImplementationsKt -> kotlin.internal.PlatformImplementationsKt:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    50:70:void <clinit>() -> <clinit>
    89:100:int getJavaVersion() -> getJavaVersion
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
# {"id":"sourceFile","fileName":"progressionUtil.kt"}
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    46:48:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    10:10:int mod(int,int) -> mod
kotlin.internal.jdk7.JDK7PlatformImplementations -> kotlin.internal.jdk7.JDK7PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    11:11:void <init>() -> <init>
    27:30:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    22:22:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    16:19:void <clinit>() -> <clinit>
kotlin.internal.jdk8.JDK8PlatformImplementations -> kotlin.internal.jdk8.JDK8PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    27:27:void <init>() -> <init>
    55:55:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    40:40:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    34:37:void <clinit>() -> <clinit>
kotlin.io.CloseableKt -> kotlin.io.CloseableKt:
# {"id":"sourceFile","fileName":"Closeable.kt"}
    57:62:void closeFinally(java.io.Closeable,java.lang.Throwable) -> closeFinally
kotlin.jvm.functions.Function1 -> kotlin.jvm.functions.Function1:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> kotlin.jvm.functions.Function2:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    14:14:void <clinit>() -> <clinit>
    30:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:34:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:39:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    39:46:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    22:22:java.lang.Object[] toArray(java.util.Collection) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    23:23:java.lang.Object[] toArray(java.util.Collection) -> toArray
kotlin.jvm.internal.FunctionBase -> kotlin.jvm.internal.FunctionBase:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
    167:167:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    25:25:void checkNotNull(java.lang.Object) -> checkNotNull
    93:93:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    131:131:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    144:155:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> createParameterIsNullExceptionMessage
    251:251:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    255:266:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    45:45:void throwJavaNpe() -> throwJavaNpe
    140:140:void throwParameterIsNullNPE(java.lang.String) -> throwParameterIsNullNPE
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
    26:39:void <clinit>() -> <clinit>
    78:78:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.random.AbstractPlatformRandom -> kotlin.random.AbstractPlatformRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    35:35:void <init>() -> <init>
    41:41:int nextInt() -> nextInt
kotlin.random.FallbackThreadLocalRandom -> kotlin.random.FallbackThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    50:51:void <init>() -> <init>
    56:56:java.util.Random getImpl() -> getImpl
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> kotlin.random.FallbackThreadLocalRandom$implStorage$1:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    52:52:java.util.Random initialValue() -> initialValue
kotlin.random.Random -> kotlin.random.Random:
# {"id":"sourceFile","fileName":"Random.kt"}
    271:271:void <clinit>() -> <clinit>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> <init>
    19:19:void <init>():19 -> <init>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> access$getDefaultRandom$cp
kotlin.random.Random$Default -> kotlin.random.Random$Default:
# {"id":"sourceFile","fileName":"Random.kt"}
    270:270:void <init>() -> <init>
    282:282:int nextInt() -> nextInt
kotlin.random.jdk8.PlatformThreadLocalRandom -> kotlin.random.jdk8.PlatformThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformThreadLocalRandom.kt"}
    11:11:void <init>() -> <init>
    13:13:java.util.Random getImpl() -> getImpl
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    77:102:void <init>(int,int,int) -> <init>
    115:116:boolean equals(java.lang.Object) -> equals
    92:92:int getFirst() -> getFirst
    97:97:int getLast() -> getLast
    102:102:int getStep() -> getStep
    119:119:int hashCode() -> hashCode
    112:112:boolean isEmpty() -> isEmpty
    77:77:java.util.Iterator iterator() -> iterator
    104:104:kotlin.collections.IntIterator iterator() -> iterator
    121:121:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    132:132:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    38:41:void <init>(int,int,int) -> <init>
    43:43:boolean hasNext() -> hasNext
    46:52:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    68:68:void <clinit>() -> <clinit>
    44:44:void <init>(int,int) -> <init>
    58:59:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    55:55:boolean isEmpty() -> isEmpty
    64:64:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
# {"id":"sourceFile","fileName":"Ranges.kt"}
kotlin.ranges.RangesKt -> kotlin.ranges.RangesKt:
    int coerceAtLeast(int,int) -> coerceAtLeast
      # {"id":"com.android.tools.r8.synthesized"}
    int coerceAtMost(int,int) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    long coerceAtMost(long,long) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.ranges.IntProgression downTo(int,int) -> downTo
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
# {"id":"sourceFile","fileName":"Ranges.kt"}
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    518:518:kotlin.ranges.IntProgression downTo(int,int) -> downTo
kotlin.reflect.KClass -> kotlin.reflect.KClass:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.sequences.ConstrainedOnceSequence -> kotlin.sequences.ConstrainedOnceSequence:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:24:java.util.Iterator iterator() -> iterator
kotlin.sequences.Sequence -> kotlin.sequences.Sequence:
# {"id":"sourceFile","fileName":"Sequence.kt"}
kotlin.sequences.SequencesKt -> kotlin.sequences.SequencesKt:
    kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toList(kotlin.sequences.Sequence) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.sequences.SequencesKt__SequenceBuilderKt -> kotlin.sequences.SequencesKt__SequenceBuilderKt:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
kotlin.sequences.SequencesKt__SequencesJVMKt -> kotlin.sequences.SequencesKt__SequencesJVMKt:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
kotlin.sequences.SequencesKt__SequencesKt -> kotlin.sequences.SequencesKt__SequencesKt:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    30:30:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
    626:626:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.util.Iterator):21 -> <init>
    30:30:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequencesKt.asSequence(java.util.Iterator) -> iterator
    30:30:java.util.Iterator iterator():681 -> iterator
kotlin.sequences.SequencesKt___SequencesJvmKt -> kotlin.sequences.SequencesKt___SequencesJvmKt:
# {"id":"sourceFile","fileName":"_SequencesJvm.kt"}
kotlin.sequences.SequencesKt___SequencesKt -> kotlin.sequences.SequencesKt___SequencesKt:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    786:787:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> toCollection
    807:807:java.util.List toList(kotlin.sequences.Sequence) -> toList
    816:816:java.util.List toMutableList(kotlin.sequences.Sequence) -> toMutableList
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
    314:314:int checkRadix(int) -> checkRadix
    306:306:int digitOf(char,int) -> digitOf
    98:98:boolean isWhitespace(char) -> isWhitespace
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
# {"id":"sourceFile","fileName":"Char.kt"}
    237:240:boolean equals(char,char,boolean) -> equals
kotlin.text.StringsKt -> kotlin.text.StringsKt:
    int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence trim(java.lang.CharSequence) -> trim
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> kotlin.text.StringsKt__AppendableKt:
# {"id":"sourceFile","fileName":"Appendable.kt"}
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
# {"id":"sourceFile","fileName":"Indent.kt"}
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
    132:132:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
    142:199:java.lang.Long toLongOrNull(java.lang.String,int) -> toLongOrNull
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    654:656:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    418:420:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    416:416:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
# {"id":"sourceFile","fileName":"Strings.kt"}
    379:379:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    1087:1090:int indexOf(java.lang.CharSequence,char,int,boolean) -> indexOf
    1102:1105:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    974:985:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    972:972:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    1086:1086:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
    1101:1101:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    933:939:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    12781:12781:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> indexOfAny
    12781:12781:int indexOfAny(java.lang.CharSequence,char[],int,boolean):940 -> indexOfAny
    940:940:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    821:826:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    457:458:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> substringAfter
    456:456:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
    430:431:java.lang.String substringBefore(java.lang.String,char,java.lang.String) -> substringBefore
    439:440:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String) -> substringBefore
    429:429:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
    438:438:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
    80:85:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    80:85:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
    176:176:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
kotlin.text.StringsKt___StringsJvmKt -> kotlin.text.StringsKt___StringsJvmKt:
# {"id":"sourceFile","fileName":"_StringsJvm.kt"}
kotlin.text.StringsKt___StringsKt -> kotlin.text.StringsKt___StringsKt:
# {"id":"sourceFile","fileName":"_Strings.kt"}
kotlinx.coroutines.AbstractTimeSource -> kotlinx.coroutines.AbstractTimeSource:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
kotlinx.coroutines.AbstractTimeSourceKt -> kotlinx.coroutines.AbstractTimeSourceKt:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
kotlinx.coroutines.CoroutineDispatcher -> kotlinx.coroutines.CoroutineDispatcher:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    32:32:void <init>() -> <init>
    31:31:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    100:101:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int) -> limitedParallelism
    31:31:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    166:166:java.lang.String toString() -> toString
kotlinx.coroutines.CoroutineDispatcher$Key -> kotlinx.coroutines.CoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    36:38:void <init>() -> <init>
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> kotlinx.coroutines.CoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    38:38:java.lang.Object invoke(java.lang.Object) -> invoke
    38:38:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineExceptionHandler -> kotlinx.coroutines.CoroutineExceptionHandler:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
kotlinx.coroutines.CoroutineExceptionHandler$Key -> kotlinx.coroutines.CoroutineExceptionHandler$Key:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
kotlinx.coroutines.CoroutineExceptionHandlerImplKt -> kotlinx.coroutines.CoroutineExceptionHandlerImplKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    20:23:void <clinit>() -> <clinit>
    46:61:void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineExceptionImpl
kotlinx.coroutines.CoroutineExceptionHandlerKt -> kotlinx.coroutines.CoroutineExceptionHandlerKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    24:33:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineException
    38:38:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):39 -> handlerException
kotlinx.coroutines.DebugKt -> kotlinx.coroutines.DebugKt:
# {"id":"sourceFile","fileName":"Debug.kt"}
    70:85:void <clinit>() -> <clinit>
    67:67:boolean getASSERTIONS_ENABLED() -> getASSERTIONS_ENABLED
kotlinx.coroutines.DebugStringsKt -> kotlinx.coroutines.DebugStringsKt:
# {"id":"sourceFile","fileName":"DebugStrings.kt"}
    21:21:java.lang.String getClassSimpleName(java.lang.Object) -> getClassSimpleName
    13:13:java.lang.String getHexAddress(java.lang.Object) -> getHexAddress
kotlinx.coroutines.DefaultExecutor -> kotlinx.coroutines.DefaultExecutor:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    32:41:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    177:181:void acknowledgeShutdownIfNeeded() -> acknowledgeShutdownIfNeeded
    135:138:java.lang.Thread createThreadSync() -> createThreadSync
    68:69:void enqueue(java.lang.Runnable) -> enqueue
    49:49:java.lang.Thread getThread() -> getThread
    60:60:boolean isShutDown() -> isShutDown
    63:63:boolean isShutdownRequested() -> isShutdownRequested
    154:157:boolean notifyStartup() -> notifyStartup
    101:129:void run() -> run
    78:78:void shutdownError() -> shutdownError
kotlinx.coroutines.DefaultExecutorKt -> kotlinx.coroutines.DefaultExecutorKt:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    11:13:void <clinit>() -> <clinit>
    13:13:kotlinx.coroutines.Delay getDefaultDelay() -> getDefaultDelay
    17:24:kotlinx.coroutines.Delay initializeDefaultDelay() -> initializeDefaultDelay
kotlinx.coroutines.Delay -> kotlinx.coroutines.Delay:
# {"id":"sourceFile","fileName":"Delay.kt"}
kotlinx.coroutines.DiagnosticCoroutineContextException -> kotlinx.coroutines.DiagnosticCoroutineContextException:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    32:32:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    39:39:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    34:34:java.lang.String getLocalizedMessage() -> getLocalizedMessage
kotlinx.coroutines.Dispatchers -> kotlinx.coroutines.Dispatchers:
# {"id":"sourceFile","fileName":"Dispatchers.kt"}
    32:135:void <clinit>() -> <clinit>
    135:135:kotlinx.coroutines.CoroutineDispatcher getIO() -> getIO
    57:57:kotlinx.coroutines.MainCoroutineDispatcher getMain() -> getMain
kotlinx.coroutines.EventLoop -> kotlinx.coroutines.EventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    23:23:void <init>() -> <init>
    104:105:void incrementUseCount(boolean) -> incrementUseCount
    103:103:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object) -> incrementUseCount$default
kotlinx.coroutines.EventLoopImplBase -> kotlinx.coroutines.EventLoopImplBase:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    184:184:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> <init>
    184:184:void <init>():184 -> <init>
    186:191:void <init>() -> <init>
    333:564:java.lang.Runnable dequeue() -> dequeue
    290:290:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    293:297:void enqueue(java.lang.Runnable) -> enqueue
    304:562:boolean enqueueImpl(java.lang.Runnable) -> enqueueImpl
    209:217:long getNextTime() -> getNextTime
    193:193:boolean isCompleted() -> isCompleted
    197:203:boolean isEmpty() -> isEmpty
    264:287:long processNextEvent() -> processNextEvent
    391:392:void resetAll() -> resetAll
kotlinx.coroutines.EventLoopImplBase$$ExternalSyntheticBackportWithForwarding0 -> kotlinx.coroutines.EventLoopImplBase$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean kotlinx.coroutines.EventLoopImplBase$$InternalSyntheticBackportWithForwarding$1$4a2c55d37881f9d71f928fdf4f5de9f6e107cf0ea5766bb8aefda524855451f3$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.EventLoopImplPlatform -> kotlinx.coroutines.EventLoopImplPlatform:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    7:7:void <init>() -> <init>
    11:13:void unpark() -> unpark
kotlinx.coroutines.EventLoop_commonKt -> kotlinx.coroutines.EventLoop_commonKt:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    146:172:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p() -> access$getCLOSED_EMPTY$p
kotlinx.coroutines.ExecutorCoroutineDispatcher -> kotlinx.coroutines.ExecutorCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Executors.kt"}
    20:20:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"Executors.kt"}
    23:25:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"Executors.kt"}
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    25:25:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.Job -> kotlinx.coroutines.Job:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.Job$Key -> kotlinx.coroutines.Job$Key:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.JobKt -> kotlinx.coroutines.JobKt:
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
kotlinx.coroutines.JobKt__JobKt -> kotlinx.coroutines.JobKt__JobKt:
# {"id":"sourceFile","fileName":"Job.kt"}
    549:549:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
kotlinx.coroutines.MainCoroutineDispatcher -> kotlinx.coroutines.MainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainCoroutineDispatcher.kt"}
    15:15:void <init>() -> <init>
    69:72:java.lang.String toStringInternalImpl() -> toStringInternalImpl
kotlinx.coroutines.ThreadLocalEventLoop -> kotlinx.coroutines.ThreadLocalEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    128:128:void <clinit>() -> <clinit>
    141:141:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop) -> setEventLoop$kotlinx_coroutines_core
kotlinx.coroutines.Unconfined -> kotlinx.coroutines.Unconfined:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    13:13:void <init>() -> <init>
    24:30:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
kotlinx.coroutines.YieldContext -> kotlinx.coroutines.YieldContext:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
kotlinx.coroutines.YieldContext$Key -> kotlinx.coroutines.YieldContext$Key:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
kotlinx.coroutines.android.AndroidDispatcherFactory -> kotlinx.coroutines.android.AndroidDispatcherFactory:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    55:56:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> createDispatcher
kotlinx.coroutines.android.AndroidExceptionPreHandler -> kotlinx.coroutines.android.AndroidExceptionPreHandler:
# {"id":"sourceFile","fileName":"AndroidExceptionPreHandler.kt"}
    13:16:void <init>() -> <init>
    47:49:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
    20:29:java.lang.reflect.Method preHandler() -> preHandler
kotlinx.coroutines.android.HandlerContext -> kotlinx.coroutines.android.HandlerContext:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    115:131:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    134:134:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    125:125:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String):128 -> <init>
    166:167:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> cancelOnRejection
    141:142:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    175:175:boolean equals(java.lang.Object) -> equals
    114:114:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> getImmediate
    114:114:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():114 -> getImmediate
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> getImmediate
    176:176:int hashCode() -> hashCode
    137:137:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    170:172:java.lang.String toString() -> toString
kotlinx.coroutines.android.HandlerDispatcher -> kotlinx.coroutines.android.HandlerDispatcher:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    22:22:void <init>() -> <init>
kotlinx.coroutines.android.HandlerDispatcherKt -> kotlinx.coroutines.android.HandlerDispatcherKt:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    109:109:void <clinit>() -> <clinit>
    86:104:android.os.Handler asHandler(android.os.Looper,boolean) -> asHandler
kotlinx.coroutines.internal.FastServiceLoader -> kotlinx.coroutines.internal.FastServiceLoader:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    105:107:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class) -> getProviderInstance
    87:90:java.util.List load(java.lang.Class,java.lang.ClassLoader) -> load
    54:59:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():60 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    60:60:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():61 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    61:65:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    96:99:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1358:1358:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1358:1358:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    1444:1445:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1444:1445:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    99:99:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    99:100:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1547:1547:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1547:1547:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):101 -> loadProviders$kotlinx_coroutines_core
    1618:1619:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1618:1619:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):101 -> loadProviders$kotlinx_coroutines_core
    100:101:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    111:119:java.util.List parse(java.net.URL) -> parse
    136:143:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    136:143:java.util.List parse(java.net.URL):117 -> parse
    124:125:java.util.List parse(java.net.URL) -> parse
    149:158:java.util.List parseFile(java.io.BufferedReader) -> parseFile
    1059:1059:boolean kotlin.text.StringsKt___StringsKt.all(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> parseFile
    1059:1059:java.util.List parseFile(java.io.BufferedReader):153 -> parseFile
    153:155:java.util.List parseFile(java.io.BufferedReader) -> parseFile
kotlinx.coroutines.internal.FastServiceLoaderKt -> kotlinx.coroutines.internal.FastServiceLoaderKt:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    17:17:void <clinit>() -> <clinit>
    17:17:void <clinit>() -> getANDROID_DETECTED
    17:17:boolean getANDROID_DETECTED():17 -> getANDROID_DETECTED
kotlinx.coroutines.internal.LimitedDispatcher -> kotlinx.coroutines.internal.LimitedDispatcher:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    17:27:void <init>(kotlinx.coroutines.CoroutineDispatcher,int) -> <init>
    100:101:boolean addAndTryDispatching(java.lang.Runnable) -> addAndTryDispatching
    80:87:void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function0) -> dispatch
    80:87:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):66 -> dispatch
    67:67:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    39:56:void run() -> run
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> run
    20:20:void run():56 -> run
    57:61:void run() -> run
    92:92:boolean tryAllocateWorker() -> tryAllocateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryAllocateWorker
    20:20:boolean tryAllocateWorker():92 -> tryAllocateWorker
    93:95:boolean tryAllocateWorker() -> tryAllocateWorker
kotlinx.coroutines.internal.LimitedDispatcherKt -> kotlinx.coroutines.internal.LimitedDispatcherKt:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    106:106:void checkParallelism(int) -> checkParallelism
kotlinx.coroutines.internal.LockFreeTaskQueue -> kotlinx.coroutines.internal.LockFreeTaskQueue:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    30:33:void <init>(boolean) -> <init>
    48:312:boolean addLast(java.lang.Object) -> addLast
    41:310:void close() -> close
    37:37:int getSize() -> getSize
    59:314:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> kotlinx.coroutines.internal.LockFreeTaskQueueCore:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    288:288:void <clinit>() -> <clinit>
    76:87:void <init>(int,boolean) -> <init>
    106:320:int addLast(java.lang.Object) -> addLast
    230:239:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long) -> allocateNextCopy
    225:340:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long) -> allocateOrGetNextCopy
    316:318:boolean close() -> close
    143:155:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object) -> fillPlaceholder
    92:92:int getSize() -> getSize
    91:91:boolean isEmpty() -> isEmpty
    336:338:long markFrozen() -> markFrozen
    214:214:kotlinx.coroutines.internal.LockFreeTaskQueueCore next() -> next
    166:325:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    201:330:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int) -> removeSlowPath
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    295:295:long updateHead(long,int) -> updateHead
    296:296:long updateTail(long,int) -> updateTail
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    268:268:void <init>(int) -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> kotlinx.coroutines.internal.MainDispatcherFactory:
# {"id":"sourceFile","fileName":"MainDispatcherFactory.kt"}
kotlinx.coroutines.internal.MainDispatcherLoader -> kotlinx.coroutines.internal.MainDispatcherLoader:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    19:22:void <clinit>() -> <clinit>
    26:35:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1895:1899:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadMainDispatcher
    1895:1899:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1901:1902:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadMainDispatcher
    1901:1902:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1907:1907:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> loadMainDispatcher
    1907:1907:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:42:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
kotlinx.coroutines.internal.MainDispatchersKt -> kotlinx.coroutines.internal.MainDispatchersKt:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    77:78:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String) -> createMissingDispatcher
    76:76:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object) -> createMissingDispatcher$default
    66:66:boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher) -> isMissing
    81:81:java.lang.Void throwMissingMainDispatcherException() -> throwMissingMainDispatcherException
    57:59:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List) -> tryCreateDispatcher
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> kotlinx.coroutines.internal.MissingMainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    89:91:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String):90 -> <init>
    88:88:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> dispatch
    88:88:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):88 -> dispatch
    108:108:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    96:96:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    114:118:java.lang.Void missing() -> missing
    122:122:java.lang.String toString() -> toString
kotlinx.coroutines.internal.ResizableAtomicArray -> kotlinx.coroutines.internal.ResizableAtomicArray:
# {"id":"sourceFile","fileName":"ResizableAtomicArray.kt"}
    13:15:void <init>(int) -> <init>
    18:18:int currentLength() -> currentLength
    21:22:java.lang.Object get(int) -> get
    27:35:void setSynchronized(int,java.lang.Object) -> setSynchronized
kotlinx.coroutines.internal.Symbol -> kotlinx.coroutines.internal.Symbol:
# {"id":"sourceFile","fileName":"Symbol.kt"}
    14:14:void <init>(java.lang.String) -> <init>
    15:15:java.lang.String toString() -> toString
kotlinx.coroutines.internal.SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt:
    1:1:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    1:1:int systemProp(java.lang.String,int,int,int) -> systemProp
    1:1:long systemProp(java.lang.String,long,long,long) -> systemProp
    1:1:java.lang.String systemProp(java.lang.String) -> systemProp
    1:1:boolean systemProp(java.lang.String,boolean) -> systemProp
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt:
# {"id":"sourceFile","fileName":"SystemProps.kt"}
    11:11:void <clinit>() -> <clinit>
    11:11:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    17:17:java.lang.String systemProp(java.lang.String) -> systemProp
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt:
# {"id":"sourceFile","fileName":"SystemProps.common.kt"}
    21:21:boolean systemProp(java.lang.String,boolean) -> systemProp
    35:35:int systemProp(java.lang.String,int,int,int) -> systemProp
    50:54:long systemProp(java.lang.String,long,long,long) -> systemProp
    30:30:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    44:44:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.scheduling.CoroutineScheduler -> kotlinx.coroutines.scheduling.CoroutineScheduler:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    303:303:void <clinit>() -> <clinit>
    90:93:void <init>(int,int,long,java.lang.String) -> <init>
    94:94:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    94:94:void <init>(int,int,long,java.lang.String):94 -> <init>
    95:95:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    95:95:void <init>(int,int,long,java.lang.String):95 -> <init>
    98:297:void <init>(int,int,long,java.lang.String) -> <init>
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    85:85:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):118 -> addToGlobalQueue
    119:121:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    328:328:void close() -> close
    463:463:int createNewWorker() -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():463 -> createNewWorker
    465:472:int createNewWorker() -> createNewWorker
    270:270:int getCreatedWorkers() -> createNewWorker
    270:270:int createNewWorker():474 -> createNewWorker
    475:482:int createNewWorker() -> createNewWorker
    278:278:int incrementCreatedWorkers() -> createNewWorker
    278:278:int createNewWorker():483 -> createNewWorker
    475:485:int createNewWorker() -> createNewWorker
    406:412:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext) -> createTask
    508:508:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    596:596:kotlinx.coroutines.scheduling.CoroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.getScheduler() -> currentWorker
    596:596:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():508 -> currentWorker
    508:508:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    383:391:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> dispatch
    82:82:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):396 -> dispatch
    398:401:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    382:382:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object) -> dispatch$default
    326:326:void execute(java.lang.Runnable) -> execute
    298:298:boolean isTerminated() -> isTerminated
    236:246:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackNextIndex
    206:988:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop() -> parkedWorkersStackPop
    177:985:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackPush
    154:983:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int) -> parkedWorkersStackTopUpdate
    570:575:void runSafely(kotlinx.coroutines.scheduling.Task) -> runSafely
    333:337:void shutdown(long) -> shutdown
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    20:20:void shutdown(long):337 -> shutdown
    270:270:int getCreatedWorkers() -> shutdown
    270:270:void shutdown(long):337 -> shutdown
    337:365:void shutdown(long) -> shutdown
    271:271:int getAvailableCpuPermits() -> shutdown
    271:271:void shutdown(long):365 -> shutdown
    337:367:void shutdown(long) -> shutdown
    281:281:long incrementBlockingTasks() -> signalBlockingWork
    281:281:void signalBlockingWork(boolean):417 -> signalBlockingWork
    419:421:void signalBlockingWork(boolean) -> signalBlockingWork
    425:427:void signalCpuWork() -> signalCpuWork
    499:499:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> submitToLocalQueue
    82:82:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):501 -> submitToLocalQueue
    501:505:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    526:564:java.lang.String toString() -> toString
    433:442:boolean tryCreateWorker(long) -> tryCreateWorker
    430:430:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object) -> tryCreateWorker$default
    450:452:boolean tryUnpark() -> tryUnpark
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> kotlinx.coroutines.scheduling.CoroutineScheduler$Companion:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> kotlinx.coroutines.scheduling.CoroutineScheduler$Worker:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    579:579:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> <init>
    579:579:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):579 -> <init>
    581:616:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    630:630:void setNextParkedWorker(java.lang.Object) -> <init>
    630:630:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):630 -> <init>
    637:637:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    592:593:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int) -> <init>
    579:579:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> access$getThis$0$p
    763:763:void afterTask(int) -> afterTask
    284:284:void kotlinx.coroutines.scheduling.CoroutineScheduler.decrementBlockingTasks() -> afterTask
    284:284:void afterTask(int):763 -> afterTask
    764:768:void afterTask(int) -> afterTask
    756:757:void beforeTask(int) -> beforeTask
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> executeTask
    82:82:void executeTask(kotlinx.coroutines.scheduling.Task):746 -> executeTask
    747:750:void executeTask(kotlinx.coroutines.scheduling.Task) -> executeTask
    885:892:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    869:876:kotlinx.coroutines.scheduling.Task findTask(boolean) -> findTask
    586:586:int getIndexInArray() -> getIndexInArray
    630:630:void setNextParkedWorker(java.lang.Object) -> getNextParkedWorker
    630:630:java.lang.Object getNextParkedWorker():630 -> getNextParkedWorker
    861:864:void idleReset(int) -> idleReset
    743:743:boolean inStack() -> inStack
    777:787:int nextInt(int) -> nextInt
    792:799:void park() -> park
    896:901:kotlinx.coroutines.scheduling.Task pollGlobalQueues() -> pollGlobalQueues
    664:664:void run() -> run
    671:712:void runWorker() -> runWorker
    588:589:void setIndexInArray(int) -> setIndexInArray
    630:630:void setNextParkedWorker(java.lang.Object) -> setNextParkedWorker
    644:983:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    291:291:boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryAcquireCpuPermit() -> tryAcquireCpuPermit
    291:291:boolean tryAcquireCpuPermit():645 -> tryAcquireCpuPermit
    646:646:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    717:739:void tryPark() -> tryPark
    657:659:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    294:294:long kotlinx.coroutines.scheduling.CoroutineScheduler.releaseCpuPermit() -> tryReleaseCpu
    294:294:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):659 -> tryReleaseCpu
    660:660:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    906:907:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    270:270:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> trySteal
    270:270:kotlinx.coroutines.scheduling.Task trySteal(boolean):907 -> trySteal
    913:933:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    807:807:void tryTerminateWorker() -> tryTerminateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    20:20:void tryTerminateWorker():807 -> tryTerminateWorker
    809:809:void tryTerminateWorker() -> tryTerminateWorker
    270:270:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> tryTerminateWorker
    270:270:void tryTerminateWorker():811 -> tryTerminateWorker
    811:832:void tryTerminateWorker() -> tryTerminateWorker
    279:279:int kotlinx.coroutines.scheduling.CoroutineScheduler.decrementCreatedWorkers() -> tryTerminateWorker
    279:279:void tryTerminateWorker():837 -> tryTerminateWorker
    839:856:void tryTerminateWorker() -> tryTerminateWorker
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    942:962:void <clinit>() -> <clinit>
    938:938:void <init>(java.lang.String,int) -> <init>
kotlinx.coroutines.scheduling.DefaultIoScheduler -> kotlinx.coroutines.scheduling.DefaultIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    46:49:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    74:74:void close() -> close
    65:65:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    56:56:void execute(java.lang.Runnable) -> execute
kotlinx.coroutines.scheduling.DefaultScheduler -> kotlinx.coroutines.scheduling.DefaultScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    13:15:void <init>() -> <init>
    24:24:void close() -> close
kotlinx.coroutines.scheduling.GlobalQueue -> kotlinx.coroutines.scheduling.GlobalQueue:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    106:106:void <init>() -> <init>
kotlinx.coroutines.scheduling.NanoTimeSource -> kotlinx.coroutines.scheduling.NanoTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    113:113:void <init>() -> <init>
    114:114:long nanoTime() -> nanoTime
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher -> kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    82:92:void <init>(int,int,long,java.lang.String) -> <init>
    95:95:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler() -> createScheduler
    97:97:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    103:103:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatchWithContext$kotlinx_coroutines_core
kotlinx.coroutines.scheduling.SchedulerTimeSource -> kotlinx.coroutines.scheduling.SchedulerTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
kotlinx.coroutines.scheduling.Task -> kotlinx.coroutines.scheduling.Task:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    77:79:void <init>(long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
kotlinx.coroutines.scheduling.TaskContext -> kotlinx.coroutines.scheduling.TaskContext:
# {"id":"sourceFile","fileName":"Tasks.kt"}
kotlinx.coroutines.scheduling.TaskContextImpl -> kotlinx.coroutines.scheduling.TaskContextImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    65:65:void <init>(int) -> <init>
    65:65:int getTaskMode() -> getTaskMode
kotlinx.coroutines.scheduling.TaskImpl -> kotlinx.coroutines.scheduling.TaskImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    89:92:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    95:97:void run() -> run
    102:102:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.TasksKt -> kotlinx.coroutines.scheduling.TasksKt:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    17:75:void <clinit>() -> <clinit>
kotlinx.coroutines.scheduling.UnlimitedIoScheduler -> kotlinx.coroutines.scheduling.UnlimitedIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    31:31:void <init>() -> <init>
    39:39:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
kotlinx.coroutines.scheduling.WorkQueue -> kotlinx.coroutines.scheduling.WorkQueue:
# {"id":"sourceFile","fileName":"WorkQueue.kt"}
    37:60:void <init>() -> <init>
    73:75:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean) -> add
    72:72:kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object) -> add$default
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addLast
    85:85:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):83 -> addLast
    83:98:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task) -> addLast
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    85:85:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):195 -> decrementIfBlocking
    196:197:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    52:52:int getBufferSize$kotlinx_coroutines_core() -> getBufferSize$kotlinx_coroutines_core
    53:53:int getSize$kotlinx_coroutines_core() -> getSize$kotlinx_coroutines_core
    141:142:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue) -> offloadAllWorkTo
    66:66:kotlinx.coroutines.scheduling.Task poll() -> poll
    182:188:kotlinx.coroutines.scheduling.Task pollBuffer() -> pollBuffer
    175:176:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue) -> pollTo
    120:128:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealBlockingFrom
    85:85:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue):129 -> tryStealBlockingFrom
    129:137:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    109:116:long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealFrom
    152:152:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealLastScheduled
    85:85:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean):153 -> tryStealLastScheduled
    156:167:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
kotlinx.coroutines.scheduling.WorkQueue$$ExternalSyntheticBackportWithForwarding0 -> kotlinx.coroutines.scheduling.WorkQueue$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean kotlinx.coroutines.scheduling.WorkQueue$$InternalSyntheticBackportWithForwarding$1$fea41a45c8396694b734bf6713722fe4232fc4db1f67f3f538fe971a17baaead$0.m(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
mono.MonoPackageManager -> mono.MonoPackageManager:
    24:24:void <clinit>() -> <clinit>
    31:132:void LoadApplication(android.content.Context,android.content.pm.ApplicationInfo,java.lang.String[]) -> LoadApplication
    170:170:java.lang.String[] getAssemblies() -> getAssemblies
    175:175:java.lang.String[] getDependencies() -> getDependencies
    158:158:java.lang.String getNativeLibraryPath(android.content.Context) -> getNativeLibraryPath
    164:164:java.lang.String getNativeLibraryPath(android.content.pm.ApplicationInfo) -> getNativeLibraryPath
    142:145:boolean isEmulator() -> isEmulator
mono.MonoPackageManager_Resources -> mono.MonoPackageManager_Resources:
    3:29:void <clinit>() -> <clinit>
mono.MonoRuntimeProvider -> mono.MonoRuntimeProvider:
    9:9:void <init>() -> <init>
    22:37:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    61:61:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    49:49:java.lang.String getType(android.net.Uri) -> getType
    55:55:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    43:43:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    67:67:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
mono.android.GCUserPeer -> mono.android.GCUserPeer:
    3:4:void <init>() -> <init>
    8:10:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    15:16:void monodroidClearReferences() -> monodroidClearReferences
mono.android.MultiDexLoader -> mono.android.MultiDexLoader:
    63:63:void <init>() -> <init>
    74:88:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    118:118:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    92:92:java.util.List getDexList(java.lang.String) -> getDexList
    106:106:java.lang.String getType(android.net.Uri) -> getType
    112:112:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    100:100:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    124:124:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
mono.android.Runtime -> mono.android.Runtime:
    7:14:void <clinit>() -> <clinit>
mono.android.TypeManager -> mono.android.TypeManager:
    16:16:void <clinit>() -> <clinit>
    7:7:void Activate(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object[]) -> Activate
mono.android.XamarinUncaughtExceptionHandler -> mono.android.XamarinUncaughtExceptionHandler:
# {"id":"sourceFile","fileName":"Runtime.java"}
    44:45:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    51:54:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
mono.android.accessibilityservice.AccessibilityService_MagnificationController_OnMagnificationChangedListenerImplementor -> mono.android.accessibilityservice.AccessibilityService_MagnificationController_OnMagnificationChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onMagnificationChanged(android.accessibilityservice.AccessibilityService$MagnificationController,android.graphics.Region,float,float,float) -> onMagnificationChanged
mono.android.accessibilityservice.AccessibilityService_SoftKeyboardController_OnShowModeChangedListenerImplementor -> mono.android.accessibilityservice.AccessibilityService_SoftKeyboardController_OnShowModeChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onShowModeChanged(android.accessibilityservice.AccessibilityService$SoftKeyboardController,int) -> onShowModeChanged
mono.android.accounts.OnAccountsUpdateListenerImplementor -> mono.android.accounts.OnAccountsUpdateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
mono.android.animation.AnimatorEventDispatcher -> mono.android.animation.AnimatorEventDispatcher:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    42:42:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    50:50:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    58:58:void onAnimationStart(android.animation.Animator) -> onAnimationStart
mono.android.animation.Animator_AnimatorListenerImplementor -> mono.android.animation.Animator_AnimatorListenerImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    42:42:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    50:50:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    58:58:void onAnimationStart(android.animation.Animator) -> onAnimationStart
mono.android.animation.Animator_AnimatorPauseListenerImplementor -> mono.android.animation.Animator_AnimatorPauseListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    40:40:void onAnimationResume(android.animation.Animator) -> onAnimationResume
mono.android.animation.LayoutTransition_TransitionListenerImplementor -> mono.android.animation.LayoutTransition_TransitionListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    32:32:void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> endTransition
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    40:40:void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> startTransition
mono.android.animation.TimeAnimator_TimeListenerImplementor -> mono.android.animation.TimeAnimator_TimeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTimeUpdate(android.animation.TimeAnimator,long,long) -> onTimeUpdate
mono.android.animation.ValueAnimator_AnimatorUpdateListenerImplementor -> mono.android.animation.ValueAnimator_AnimatorUpdateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
mono.android.animation.ValueAnimator_DurationScaleChangeListenerImplementor -> mono.android.animation.ValueAnimator_DurationScaleChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onChanged(float) -> onChanged
mono.android.app.ActionBar_OnMenuVisibilityListenerImplementor -> mono.android.app.ActionBar_OnMenuVisibilityListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
mono.android.app.ActionBar_OnNavigationListenerImplementor -> mono.android.app.ActionBar_OnNavigationListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
mono.android.app.ActionBar_TabListenerImplementor -> mono.android.app.ActionBar_TabListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    41:41:void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    49:49:void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
mono.android.app.AlarmManager_OnAlarmListenerImplementor -> mono.android.app.AlarmManager_OnAlarmListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAlarm() -> onAlarm
mono.android.app.AppOpsManager_OnOpActiveChangedListenerImplementor -> mono.android.app.AppOpsManager_OnOpActiveChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onOpActiveChanged(java.lang.String,int,java.lang.String,boolean) -> onOpActiveChanged
mono.android.app.AppOpsManager_OnOpChangedListenerImplementor -> mono.android.app.AppOpsManager_OnOpChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onOpChanged(java.lang.String,java.lang.String) -> onOpChanged
mono.android.app.Application_OnProvideAssistDataListenerImplementor -> mono.android.app.Application_OnProvideAssistDataListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onProvideAssistData(android.app.Activity,android.os.Bundle) -> onProvideAssistData
mono.android.app.DatePickerDialog_OnDateSetListenerImplementor -> mono.android.app.DatePickerDialog_OnDateSetListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
mono.android.app.DumpTimingData -> mono.android.app.DumpTimingData:
    3:3:void <init>() -> <init>
    6:6:void onReceive(android.content.Context,android.content.Intent) -> onReceive
mono.android.app.FragmentBreadCrumbs_OnBreadCrumbClickListenerImplementor -> mono.android.app.FragmentBreadCrumbs_OnBreadCrumbClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onBreadCrumbClick(android.app.FragmentManager$BackStackEntry,int) -> onBreadCrumbClick
mono.android.app.FragmentManager_OnBackStackChangedListenerImplementor -> mono.android.app.FragmentManager_OnBackStackChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onBackStackChanged() -> onBackStackChanged
mono.android.app.IntentService -> mono.android.app.IntentService:
    6:6:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
    17:19:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    24:25:void monodroidClearReferences() -> monodroidClearReferences
mono.android.app.KeyguardManager_KeyguardLockedStateListenerImplementor -> mono.android.app.KeyguardManager_KeyguardLockedStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onKeyguardLockedStateChanged(boolean) -> onKeyguardLockedStateChanged
mono.android.app.NotifyTimeZoneChanges -> mono.android.app.NotifyTimeZoneChanges:
    3:3:void <init>() -> <init>
    6:6:void onReceive(android.content.Context,android.content.Intent) -> onReceive
mono.android.app.SearchManager_OnCancelListenerImplementor -> mono.android.app.SearchManager_OnCancelListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCancel() -> onCancel
mono.android.app.SearchManager_OnDismissListenerImplementor -> mono.android.app.SearchManager_OnDismissListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDismiss() -> onDismiss
mono.android.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor -> mono.android.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSharedElementsReady() -> onSharedElementsReady
mono.android.app.TabEventDispatcher -> mono.android.app.TabEventDispatcher:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    41:41:void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    49:49:void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
mono.android.app.TimePickerDialog_OnTimeSetListenerImplementor -> mono.android.app.TimePickerDialog_OnTimeSetListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
mono.android.app.UiAutomation_OnAccessibilityEventListenerImplementor -> mono.android.app.UiAutomation_OnAccessibilityEventListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onAccessibilityEvent
mono.android.app.WallpaperManager_OnColorsChangedListenerImplementor -> mono.android.app.WallpaperManager_OnColorsChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onColorsChanged(android.app.WallpaperColors,int) -> onColorsChanged
mono.android.app.admin.DevicePolicyManager_OnClearApplicationUserDataListenerImplementor -> mono.android.app.admin.DevicePolicyManager_OnClearApplicationUserDataListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onApplicationUserDataCleared(java.lang.String,boolean) -> onApplicationUserDataCleared
mono.android.bluetooth.BluetoothProfile_ServiceListenerImplementor -> mono.android.bluetooth.BluetoothProfile_ServiceListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    40:40:void onServiceDisconnected(int) -> onServiceDisconnected
mono.android.content.ClipboardManager_OnPrimaryClipChangedListenerImplementor -> mono.android.content.ClipboardManager_OnPrimaryClipChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onPrimaryClipChanged() -> onPrimaryClipChanged
mono.android.content.DialogInterface_OnCancelListenerImplementor -> mono.android.content.DialogInterface_OnCancelListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCancel(android.content.DialogInterface) -> onCancel
mono.android.content.DialogInterface_OnClickListenerImplementor -> mono.android.content.DialogInterface_OnClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onClick(android.content.DialogInterface,int) -> onClick
mono.android.content.DialogInterface_OnDismissListenerImplementor -> mono.android.content.DialogInterface_OnDismissListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDismiss(android.content.DialogInterface) -> onDismiss
mono.android.content.DialogInterface_OnKeyListenerImplementor -> mono.android.content.DialogInterface_OnKeyListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
mono.android.content.DialogInterface_OnMultiChoiceClickListenerImplementor -> mono.android.content.DialogInterface_OnMultiChoiceClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onClick(android.content.DialogInterface,int,boolean) -> onClick
mono.android.content.DialogInterface_OnShowListenerImplementor -> mono.android.content.DialogInterface_OnShowListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onShow(android.content.DialogInterface) -> onShow
mono.android.content.Loader_OnLoadCanceledListenerImplementor -> mono.android.content.Loader_OnLoadCanceledListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onLoadCanceled(android.content.Loader) -> onLoadCanceled
mono.android.content.Loader_OnLoadCompleteListenerImplementor -> mono.android.content.Loader_OnLoadCompleteListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onLoadComplete(android.content.Loader,java.lang.Object) -> onLoadComplete
mono.android.content.SharedPreferences_OnSharedPreferenceChangeListenerImplementor -> mono.android.content.SharedPreferences_OnSharedPreferenceChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
mono.android.content.pm.PackageManager_OnChecksumsReadyListenerImplementor -> mono.android.content.pm.PackageManager_OnChecksumsReadyListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onChecksumsReady(java.util.List) -> onChecksumsReady
mono.android.database.sqlite.SQLiteTransactionListenerImplementor -> mono.android.database.sqlite.SQLiteTransactionListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onBegin() -> onBegin
    41:41:void onCommit() -> onCommit
    49:49:void onRollback() -> onRollback
mono.android.drm.DrmManagerClient_OnErrorListenerImplementor -> mono.android.drm.DrmManagerClient_OnErrorListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onError(android.drm.DrmManagerClient,android.drm.DrmErrorEvent) -> onError
mono.android.drm.DrmManagerClient_OnEventListenerImplementor -> mono.android.drm.DrmManagerClient_OnEventListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onEvent(android.drm.DrmManagerClient,android.drm.DrmEvent) -> onEvent
mono.android.drm.DrmManagerClient_OnInfoListenerImplementor -> mono.android.drm.DrmManagerClient_OnInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onInfo(android.drm.DrmManagerClient,android.drm.DrmInfoEvent) -> onInfo
mono.android.gesture.GestureOverlayView_OnGestureListenerImplementor -> mono.android.gesture.GestureOverlayView_OnGestureListenerImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGesture
    42:42:void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGestureCancelled
    50:50:void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGestureEnded
    58:58:void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGestureStarted
mono.android.gesture.GestureOverlayView_OnGesturePerformedListenerImplementor -> mono.android.gesture.GestureOverlayView_OnGesturePerformedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
mono.android.gesture.GestureOverlayView_OnGesturingListenerImplementor -> mono.android.gesture.GestureOverlayView_OnGesturingListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onGesturingEnded(android.gesture.GestureOverlayView) -> onGesturingEnded
    40:40:void onGesturingStarted(android.gesture.GestureOverlayView) -> onGesturingStarted
mono.android.graphics.ImageDecoder_OnHeaderDecodedListenerImplementor -> mono.android.graphics.ImageDecoder_OnHeaderDecodedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
mono.android.graphics.ImageDecoder_OnPartialImageListenerImplementor -> mono.android.graphics.ImageDecoder_OnPartialImageListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onPartialImage(android.graphics.ImageDecoder$DecodeException) -> onPartialImage
mono.android.graphics.SurfaceTexture_OnFrameAvailableListenerImplementor -> mono.android.graphics.SurfaceTexture_OnFrameAvailableListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
mono.android.graphics.drawable.Icon_OnDrawableLoadedListenerImplementor -> mono.android.graphics.drawable.Icon_OnDrawableLoadedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDrawableLoaded(android.graphics.drawable.Drawable) -> onDrawableLoaded
mono.android.hardware.Camera_FaceDetectionListenerImplementor -> mono.android.hardware.Camera_FaceDetectionListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFaceDetection(android.hardware.Camera$Face[],android.hardware.Camera) -> onFaceDetection
mono.android.hardware.Camera_OnZoomChangeListenerImplementor -> mono.android.hardware.Camera_OnZoomChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onZoomChange(int,boolean,android.hardware.Camera) -> onZoomChange
mono.android.hardware.SensorEventListenerImplementor -> mono.android.hardware.SensorEventListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    40:40:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
mono.android.hardware.SensorListenerImplementor -> mono.android.hardware.SensorListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onAccuracyChanged(int,int) -> onAccuracyChanged
    40:40:void onSensorChanged(int,float[]) -> onSensorChanged
mono.android.hardware.display.DisplayManager_DisplayListenerImplementor -> mono.android.hardware.display.DisplayManager_DisplayListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onDisplayAdded(int) -> onDisplayAdded
    41:41:void onDisplayChanged(int) -> onDisplayChanged
    49:49:void onDisplayRemoved(int) -> onDisplayRemoved
mono.android.hardware.input.InputManager_InputDeviceListenerImplementor -> mono.android.hardware.input.InputManager_InputDeviceListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onInputDeviceAdded(int) -> onInputDeviceAdded
    41:41:void onInputDeviceChanged(int) -> onInputDeviceChanged
    49:49:void onInputDeviceRemoved(int) -> onInputDeviceRemoved
mono.android.incrementaldeployment.IncrementalClassLoader -> mono.android.incrementaldeployment.IncrementalClassLoader:
    35:40:void <init>(java.lang.ClassLoader,java.lang.String,java.io.File,java.lang.String,java.util.List) -> <init>
    65:79:mono.android.incrementaldeployment.IncrementalClassLoader$DelegateClassLoader createDelegateClassLoader(java.io.File,java.lang.String,java.util.List,java.lang.ClassLoader) -> createDelegateClassLoader
    45:45:java.lang.Class findClass(java.lang.String) -> findClass
    100:102:void inject(java.lang.ClassLoader,java.lang.String,java.io.File,java.lang.String,java.util.List) -> inject
    85:93:void setParent(java.lang.ClassLoader,java.lang.ClassLoader) -> setParent
mono.android.incrementaldeployment.IncrementalClassLoader$DelegateClassLoader -> mono.android.incrementaldeployment.IncrementalClassLoader$DelegateClassLoader:
    51:51:void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader,mono.android.incrementaldeployment.IncrementalClassLoader$1) -> <init>
    54:54:void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    59:59:java.lang.Class findClass(java.lang.String) -> findClass
mono.android.inputmethodservice.KeyboardView_OnKeyboardActionListenerImplementor -> mono.android.inputmethodservice.KeyboardView_OnKeyboardActionListenerImplementor:
    23:23:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    102:104:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    109:110:void monodroidClearReferences() -> monodroidClearReferences
    38:38:void onKey(int,int[]) -> onKey
    46:46:void onPress(int) -> onPress
    54:54:void onRelease(int) -> onRelease
    62:62:void onText(java.lang.CharSequence) -> onText
    70:70:void swipeDown() -> swipeDown
    78:78:void swipeLeft() -> swipeLeft
    86:86:void swipeRight() -> swipeRight
    94:94:void swipeUp() -> swipeUp
mono.android.location.Geocoder_GeocodeListenerImplementor -> mono.android.location.Geocoder_GeocodeListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    40:40:void onError(java.lang.String) -> onError
    32:32:void onGeocode(java.util.List) -> onGeocode
mono.android.location.GnssAntennaInfo_ListenerImplementor -> mono.android.location.GnssAntennaInfo_ListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGnssAntennaInfoReceived(java.util.List) -> onGnssAntennaInfoReceived
mono.android.location.GpsStatus_ListenerImplementor -> mono.android.location.GpsStatus_ListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGpsStatusChanged(int) -> onGpsStatusChanged
mono.android.location.GpsStatus_NmeaListenerImplementor -> mono.android.location.GpsStatus_NmeaListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
mono.android.location.LocationListenerImplementor -> mono.android.location.LocationListenerImplementor:
    20:20:void <clinit>() -> <clinit>
    26:28:void <init>() -> <init>
    75:77:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    82:83:void monodroidClearReferences() -> monodroidClearReferences
    67:67:void onFlushComplete(int) -> onFlushComplete
    35:35:void onLocationChanged(android.location.Location) -> onLocationChanged
    43:43:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    51:51:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    59:59:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
mono.android.location.OnNmeaMessageListenerImplementor -> mono.android.location.OnNmeaMessageListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onNmeaMessage(java.lang.String,long) -> onNmeaMessage
mono.android.media.AudioManager_OnAudioFocusChangeListenerImplementor -> mono.android.media.AudioManager_OnAudioFocusChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAudioFocusChange(int) -> onAudioFocusChange
mono.android.media.AudioManager_OnCommunicationDeviceChangedListenerImplementor -> mono.android.media.AudioManager_OnCommunicationDeviceChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCommunicationDeviceChanged(android.media.AudioDeviceInfo) -> onCommunicationDeviceChanged
mono.android.media.AudioManager_OnModeChangedListenerImplementor -> mono.android.media.AudioManager_OnModeChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onModeChanged(int) -> onModeChanged
mono.android.media.AudioRecord_OnRecordPositionUpdateListenerImplementor -> mono.android.media.AudioRecord_OnRecordPositionUpdateListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onMarkerReached(android.media.AudioRecord) -> onMarkerReached
    40:40:void onPeriodicNotification(android.media.AudioRecord) -> onPeriodicNotification
mono.android.media.AudioRouting_OnRoutingChangedListenerImplementor -> mono.android.media.AudioRouting_OnRoutingChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onRoutingChanged(android.media.AudioRouting) -> onRoutingChanged
mono.android.media.AudioTrack_OnCodecFormatChangedListenerImplementor -> mono.android.media.AudioTrack_OnCodecFormatChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCodecFormatChanged(android.media.AudioTrack,android.media.AudioMetadataReadMap) -> onCodecFormatChanged
mono.android.media.AudioTrack_OnPlaybackPositionUpdateListenerImplementor -> mono.android.media.AudioTrack_OnPlaybackPositionUpdateListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onMarkerReached(android.media.AudioTrack) -> onMarkerReached
    40:40:void onPeriodicNotification(android.media.AudioTrack) -> onPeriodicNotification
mono.android.media.ImageReader_OnImageAvailableListenerImplementor -> mono.android.media.ImageReader_OnImageAvailableListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onImageAvailable(android.media.ImageReader) -> onImageAvailable
mono.android.media.ImageWriter_OnImageReleasedListenerImplementor -> mono.android.media.ImageWriter_OnImageReleasedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onImageReleased(android.media.ImageWriter) -> onImageReleased
mono.android.media.JetPlayer_OnJetEventListenerImplementor -> mono.android.media.JetPlayer_OnJetEventListenerImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte) -> onJetEvent
    42:42:void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int) -> onJetNumQueuedSegmentUpdate
    50:50:void onJetPauseUpdate(android.media.JetPlayer,int) -> onJetPauseUpdate
    58:58:void onJetUserIdUpdate(android.media.JetPlayer,int,int) -> onJetUserIdUpdate
mono.android.media.MediaCas_EventListenerImplementor -> mono.android.media.MediaCas_EventListenerImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onEvent(android.media.MediaCas,int,int,byte[]) -> onEvent
    42:42:void onPluginStatusUpdate(android.media.MediaCas,int,int) -> onPluginStatusUpdate
    50:50:void onResourceLost(android.media.MediaCas) -> onResourceLost
    58:58:void onSessionEvent(android.media.MediaCas,android.media.MediaCas$Session,int,int,byte[]) -> onSessionEvent
mono.android.media.MediaCodec_OnFirstTunnelFrameReadyListenerImplementor -> mono.android.media.MediaCodec_OnFirstTunnelFrameReadyListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFirstTunnelFrameReady(android.media.MediaCodec) -> onFirstTunnelFrameReady
mono.android.media.MediaCodec_OnFrameRenderedListenerImplementor -> mono.android.media.MediaCodec_OnFrameRenderedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFrameRendered(android.media.MediaCodec,long,long) -> onFrameRendered
mono.android.media.MediaDrm_OnEventListenerImplementor -> mono.android.media.MediaDrm_OnEventListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onEvent(android.media.MediaDrm,byte[],int,int,byte[]) -> onEvent
mono.android.media.MediaDrm_OnExpirationUpdateListenerImplementor -> mono.android.media.MediaDrm_OnExpirationUpdateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onExpirationUpdate(android.media.MediaDrm,byte[],long) -> onExpirationUpdate
mono.android.media.MediaDrm_OnKeyStatusChangeListenerImplementor -> mono.android.media.MediaDrm_OnKeyStatusChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onKeyStatusChange(android.media.MediaDrm,byte[],java.util.List,boolean) -> onKeyStatusChange
mono.android.media.MediaDrm_OnSessionLostStateListenerImplementor -> mono.android.media.MediaDrm_OnSessionLostStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSessionLostState(android.media.MediaDrm,byte[]) -> onSessionLostState
mono.android.media.MediaPlayer_OnBufferingUpdateListenerImplementor -> mono.android.media.MediaPlayer_OnBufferingUpdateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
mono.android.media.MediaPlayer_OnCompletionListenerImplementor -> mono.android.media.MediaPlayer_OnCompletionListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCompletion(android.media.MediaPlayer) -> onCompletion
mono.android.media.MediaPlayer_OnDrmInfoListenerImplementor -> mono.android.media.MediaPlayer_OnDrmInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDrmInfo(android.media.MediaPlayer,android.media.MediaPlayer$DrmInfo) -> onDrmInfo
mono.android.media.MediaPlayer_OnDrmPreparedListenerImplementor -> mono.android.media.MediaPlayer_OnDrmPreparedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDrmPrepared(android.media.MediaPlayer,int) -> onDrmPrepared
mono.android.media.MediaPlayer_OnErrorListenerImplementor -> mono.android.media.MediaPlayer_OnErrorListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onError(android.media.MediaPlayer,int,int) -> onError
mono.android.media.MediaPlayer_OnInfoListenerImplementor -> mono.android.media.MediaPlayer_OnInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onInfo(android.media.MediaPlayer,int,int) -> onInfo
mono.android.media.MediaPlayer_OnMediaTimeDiscontinuityListenerImplementor -> mono.android.media.MediaPlayer_OnMediaTimeDiscontinuityListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onMediaTimeDiscontinuity(android.media.MediaPlayer,android.media.MediaTimestamp) -> onMediaTimeDiscontinuity
mono.android.media.MediaPlayer_OnPreparedListenerImplementor -> mono.android.media.MediaPlayer_OnPreparedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onPrepared(android.media.MediaPlayer) -> onPrepared
mono.android.media.MediaPlayer_OnSeekCompleteListenerImplementor -> mono.android.media.MediaPlayer_OnSeekCompleteListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSeekComplete(android.media.MediaPlayer) -> onSeekComplete
mono.android.media.MediaPlayer_OnSubtitleDataListenerImplementor -> mono.android.media.MediaPlayer_OnSubtitleDataListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSubtitleData(android.media.MediaPlayer,android.media.SubtitleData) -> onSubtitleData
mono.android.media.MediaPlayer_OnTimedMetaDataAvailableListenerImplementor -> mono.android.media.MediaPlayer_OnTimedMetaDataAvailableListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTimedMetaDataAvailable(android.media.MediaPlayer,android.media.TimedMetaData) -> onTimedMetaDataAvailable
mono.android.media.MediaPlayer_OnTimedTextListenerImplementor -> mono.android.media.MediaPlayer_OnTimedTextListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTimedText(android.media.MediaPlayer,android.media.TimedText) -> onTimedText
mono.android.media.MediaPlayer_OnVideoSizeChangedListenerImplementor -> mono.android.media.MediaPlayer_OnVideoSizeChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onVideoSizeChanged(android.media.MediaPlayer,int,int) -> onVideoSizeChanged
mono.android.media.MediaRecorder_OnErrorListenerImplementor -> mono.android.media.MediaRecorder_OnErrorListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onError(android.media.MediaRecorder,int,int) -> onError
mono.android.media.MediaRecorder_OnInfoListenerImplementor -> mono.android.media.MediaRecorder_OnInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onInfo(android.media.MediaRecorder,int,int) -> onInfo
mono.android.media.MediaRouter2_OnGetControllerHintsListenerImplementor -> mono.android.media.MediaRouter2_OnGetControllerHintsListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:android.os.Bundle onGetControllerHints(android.media.MediaRoute2Info) -> onGetControllerHints
mono.android.media.MediaScannerConnection_OnScanCompletedListenerImplementor -> mono.android.media.MediaScannerConnection_OnScanCompletedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
mono.android.media.MediaSync_OnErrorListenerImplementor -> mono.android.media.MediaSync_OnErrorListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onError(android.media.MediaSync,int,int) -> onError
mono.android.media.RemoteControlClient_OnGetPlaybackPositionListenerImplementor -> mono.android.media.RemoteControlClient_OnGetPlaybackPositionListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:long onGetPlaybackPosition() -> onGetPlaybackPosition
mono.android.media.RemoteControlClient_OnMetadataUpdateListenerImplementor -> mono.android.media.RemoteControlClient_OnMetadataUpdateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
mono.android.media.RemoteControlClient_OnPlaybackPositionUpdateListenerImplementor -> mono.android.media.RemoteControlClient_OnPlaybackPositionUpdateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
mono.android.media.RemoteController_OnClientUpdateListenerImplementor -> mono.android.media.RemoteController_OnClientUpdateListenerImplementor:
    20:20:void <clinit>() -> <clinit>
    26:28:void <init>() -> <init>
    75:77:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    82:83:void monodroidClearReferences() -> monodroidClearReferences
    35:35:void onClientChange(boolean) -> onClientChange
    43:43:void onClientMetadataUpdate(android.media.RemoteController$MetadataEditor) -> onClientMetadataUpdate
    51:51:void onClientPlaybackStateUpdate(int) -> onClientPlaybackStateUpdate
    59:59:void onClientPlaybackStateUpdate(int,long,long,float) -> onClientPlaybackStateUpdate
    67:67:void onClientTransportControlUpdate(int) -> onClientTransportControlUpdate
mono.android.media.SoundPool_OnLoadCompleteListenerImplementor -> mono.android.media.SoundPool_OnLoadCompleteListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onLoadComplete(android.media.SoundPool,int,int) -> onLoadComplete
mono.android.media.Spatializer_OnHeadTrackerAvailableListenerImplementor -> mono.android.media.Spatializer_OnHeadTrackerAvailableListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onHeadTrackerAvailableChanged(android.media.Spatializer,boolean) -> onHeadTrackerAvailableChanged
mono.android.media.Spatializer_OnSpatializerStateChangedListenerImplementor -> mono.android.media.Spatializer_OnSpatializerStateChangedListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onSpatializerAvailableChanged(android.media.Spatializer,boolean) -> onSpatializerAvailableChanged
    40:40:void onSpatializerEnabledChanged(android.media.Spatializer,boolean) -> onSpatializerEnabledChanged
mono.android.media.audiofx.AudioEffect_OnControlStatusChangeListenerImplementor -> mono.android.media.audiofx.AudioEffect_OnControlStatusChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onControlStatusChange(android.media.audiofx.AudioEffect,boolean) -> onControlStatusChange
mono.android.media.audiofx.AudioEffect_OnEnableStatusChangeListenerImplementor -> mono.android.media.audiofx.AudioEffect_OnEnableStatusChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onEnableStatusChange(android.media.audiofx.AudioEffect,boolean) -> onEnableStatusChange
mono.android.media.audiofx.BassBoost_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.BassBoost_OnParameterChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onParameterChange(android.media.audiofx.BassBoost,int,int,short) -> onParameterChange
mono.android.media.audiofx.EnvironmentalReverb_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.EnvironmentalReverb_OnParameterChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onParameterChange(android.media.audiofx.EnvironmentalReverb,int,int,int) -> onParameterChange
mono.android.media.audiofx.Equalizer_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.Equalizer_OnParameterChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onParameterChange(android.media.audiofx.Equalizer,int,int,int,int) -> onParameterChange
mono.android.media.audiofx.PresetReverb_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.PresetReverb_OnParameterChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onParameterChange(android.media.audiofx.PresetReverb,int,int,short) -> onParameterChange
mono.android.media.audiofx.Virtualizer_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.Virtualizer_OnParameterChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onParameterChange(android.media.audiofx.Virtualizer,int,int,short) -> onParameterChange
mono.android.media.audiofx.Visualizer_OnDataCaptureListenerImplementor -> mono.android.media.audiofx.Visualizer_OnDataCaptureListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
    40:40:void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
mono.android.media.effect.EffectUpdateListenerImplementor -> mono.android.media.effect.EffectUpdateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onEffectUpdated(android.media.effect.Effect,java.lang.Object) -> onEffectUpdated
mono.android.media.midi.MidiManager_OnDeviceOpenedListenerImplementor -> mono.android.media.midi.MidiManager_OnDeviceOpenedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDeviceOpened(android.media.midi.MidiDevice) -> onDeviceOpened
mono.android.media.session.MediaSessionManager_OnActiveSessionsChangedListenerImplementor -> mono.android.media.session.MediaSessionManager_OnActiveSessionsChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onActiveSessionsChanged(java.util.List) -> onActiveSessionsChanged
mono.android.media.session.MediaSessionManager_OnMediaKeyEventSessionChangedListenerImplementor -> mono.android.media.session.MediaSessionManager_OnMediaKeyEventSessionChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onMediaKeyEventSessionChanged(java.lang.String,android.media.session.MediaSession$Token) -> onMediaKeyEventSessionChanged
mono.android.media.session.MediaSessionManager_OnSession2TokensChangedListenerImplementor -> mono.android.media.session.MediaSessionManager_OnSession2TokensChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSession2TokensChanged(java.util.List) -> onSession2TokensChanged
mono.android.media.tv.TvView_OnUnhandledInputEventListenerImplementor -> mono.android.media.tv.TvView_OnUnhandledInputEventListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onUnhandledInputEvent(android.view.InputEvent) -> onUnhandledInputEvent
mono.android.media.tv.interactive.TvInteractiveAppView_OnUnhandledInputEventListenerImplementor -> mono.android.media.tv.interactive.TvInteractiveAppView_OnUnhandledInputEventListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onUnhandledInputEvent(android.view.InputEvent) -> onUnhandledInputEvent
mono.android.net.ConnectivityManager_OnNetworkActiveListenerImplementor -> mono.android.net.ConnectivityManager_OnNetworkActiveListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onNetworkActive() -> onNetworkActive
mono.android.net.nsd.NsdManager_DiscoveryListenerImplementor -> mono.android.net.nsd.NsdManager_DiscoveryListenerImplementor:
    21:21:void <clinit>() -> <clinit>
    27:29:void <init>() -> <init>
    84:86:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    91:92:void monodroidClearReferences() -> monodroidClearReferences
    36:36:void onDiscoveryStarted(java.lang.String) -> onDiscoveryStarted
    44:44:void onDiscoveryStopped(java.lang.String) -> onDiscoveryStopped
    52:52:void onServiceFound(android.net.nsd.NsdServiceInfo) -> onServiceFound
    60:60:void onServiceLost(android.net.nsd.NsdServiceInfo) -> onServiceLost
    68:68:void onStartDiscoveryFailed(java.lang.String,int) -> onStartDiscoveryFailed
    76:76:void onStopDiscoveryFailed(java.lang.String,int) -> onStopDiscoveryFailed
mono.android.net.nsd.NsdManager_RegistrationListenerImplementor -> mono.android.net.nsd.NsdManager_RegistrationListenerImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onRegistrationFailed(android.net.nsd.NsdServiceInfo,int) -> onRegistrationFailed
    42:42:void onServiceRegistered(android.net.nsd.NsdServiceInfo) -> onServiceRegistered
    50:50:void onServiceUnregistered(android.net.nsd.NsdServiceInfo) -> onServiceUnregistered
    58:58:void onUnregistrationFailed(android.net.nsd.NsdServiceInfo,int) -> onUnregistrationFailed
mono.android.net.nsd.NsdManager_ResolveListenerImplementor -> mono.android.net.nsd.NsdManager_ResolveListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onResolveFailed(android.net.nsd.NsdServiceInfo,int) -> onResolveFailed
    40:40:void onServiceResolved(android.net.nsd.NsdServiceInfo) -> onServiceResolved
mono.android.net.sip.SipRegistrationListenerImplementor -> mono.android.net.sip.SipRegistrationListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onRegistering(java.lang.String) -> onRegistering
    41:41:void onRegistrationDone(java.lang.String,long) -> onRegistrationDone
    49:49:void onRegistrationFailed(java.lang.String,int,java.lang.String) -> onRegistrationFailed
mono.android.net.wifi.WifiManager_SuggestionConnectionStatusListenerImplementor -> mono.android.net.wifi.WifiManager_SuggestionConnectionStatusListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onConnectionStatus(android.net.wifi.WifiNetworkSuggestion,int) -> onConnectionStatus
mono.android.net.wifi.WifiManager_SuggestionUserApprovalStatusListenerImplementor -> mono.android.net.wifi.WifiManager_SuggestionUserApprovalStatusListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onUserApprovalStatusChange(int) -> onUserApprovalStatusChange
mono.android.net.wifi.p2p.WifiP2pManager_ActionListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ActionListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onFailure(int) -> onFailure
    40:40:void onSuccess() -> onSuccess
mono.android.net.wifi.p2p.WifiP2pManager_ChannelListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ChannelListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onChannelDisconnected() -> onChannelDisconnected
mono.android.net.wifi.p2p.WifiP2pManager_ConnectionInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ConnectionInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo) -> onConnectionInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DeviceInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DeviceInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDeviceInfoAvailable(android.net.wifi.p2p.WifiP2pDevice) -> onDeviceInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DiscoveryStateListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DiscoveryStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDiscoveryStateAvailable(int) -> onDiscoveryStateAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DnsSdServiceResponseListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DnsSdServiceResponseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDnsSdServiceAvailable(java.lang.String,java.lang.String,android.net.wifi.p2p.WifiP2pDevice) -> onDnsSdServiceAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DnsSdTxtRecordListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DnsSdTxtRecordListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDnsSdTxtRecordAvailable(java.lang.String,java.util.Map,android.net.wifi.p2p.WifiP2pDevice) -> onDnsSdTxtRecordAvailable
mono.android.net.wifi.p2p.WifiP2pManager_ExternalApproverRequestListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ExternalApproverRequestListenerImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onAttached(android.net.MacAddress) -> onAttached
    42:42:void onConnectionRequested(int,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pDevice) -> onConnectionRequested
    50:50:void onDetached(android.net.MacAddress,int) -> onDetached
    58:58:void onPinGenerated(android.net.MacAddress,java.lang.String) -> onPinGenerated
mono.android.net.wifi.p2p.WifiP2pManager_GroupInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_GroupInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroup) -> onGroupInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_NetworkInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_NetworkInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onNetworkInfoAvailable(android.net.NetworkInfo) -> onNetworkInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_P2pStateListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_P2pStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onP2pStateAvailable(int) -> onP2pStateAvailable
mono.android.net.wifi.p2p.WifiP2pManager_PeerListListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_PeerListListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList) -> onPeersAvailable
mono.android.net.wifi.p2p.WifiP2pManager_ServiceResponseListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ServiceResponseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onServiceAvailable(int,byte[],android.net.wifi.p2p.WifiP2pDevice) -> onServiceAvailable
mono.android.net.wifi.p2p.WifiP2pManager_UpnpServiceResponseListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_UpnpServiceResponseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onUpnpServiceAvailable(java.util.List,android.net.wifi.p2p.WifiP2pDevice) -> onUpnpServiceAvailable
mono.android.nfc.NfcAdapter_OnTagRemovedListenerImplementor -> mono.android.nfc.NfcAdapter_OnTagRemovedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTagRemoved() -> onTagRemoved
mono.android.os.ActionHandlerCallback -> mono.android.os.ActionHandlerCallback:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    31:31:boolean handleMessage(android.os.Message) -> handleMessage
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
mono.android.os.CancellationSignal_OnCancelListenerImplementor -> mono.android.os.CancellationSignal_OnCancelListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCancel() -> onCancel
mono.android.os.FileUtils_ProgressListenerImplementor -> mono.android.os.FileUtils_ProgressListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onProgress(long) -> onProgress
mono.android.os.MessageQueue_OnFileDescriptorEventListenerImplementor -> mono.android.os.MessageQueue_OnFileDescriptorEventListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:int onFileDescriptorEvents(java.io.FileDescriptor,int) -> onFileDescriptorEvents
mono.android.os.ParcelFileDescriptor_OnCloseListenerImplementor -> mono.android.os.ParcelFileDescriptor_OnCloseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onClose(java.io.IOException) -> onClose
mono.android.os.PowerManager_OnThermalStatusChangedListenerImplementor -> mono.android.os.PowerManager_OnThermalStatusChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onThermalStatusChanged(int) -> onThermalStatusChanged
mono.android.os.PowerManager_WakeLockStateListenerImplementor -> mono.android.os.PowerManager_WakeLockStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onStateChanged(boolean) -> onStateChanged
mono.android.os.RecoverySystem_ProgressListenerImplementor -> mono.android.os.RecoverySystem_ProgressListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onProgress(int) -> onProgress
mono.android.os.StrictMode_OnThreadViolationListenerImplementor -> mono.android.os.StrictMode_OnThreadViolationListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onThreadViolation(android.os.strictmode.Violation) -> onThreadViolation
mono.android.os.StrictMode_OnVmViolationListenerImplementor -> mono.android.os.StrictMode_OnVmViolationListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onVmViolation(android.os.strictmode.Violation) -> onVmViolation
mono.android.preference.PreferenceManager_OnActivityDestroyListenerImplementor -> mono.android.preference.PreferenceManager_OnActivityDestroyListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onActivityDestroy() -> onActivityDestroy
mono.android.preference.PreferenceManager_OnActivityResultListenerImplementor -> mono.android.preference.PreferenceManager_OnActivityResultListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
mono.android.preference.PreferenceManager_OnActivityStopListenerImplementor -> mono.android.preference.PreferenceManager_OnActivityStopListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onActivityStop() -> onActivityStop
mono.android.preference.Preference_OnPreferenceChangeListenerImplementor -> mono.android.preference.Preference_OnPreferenceChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
mono.android.preference.Preference_OnPreferenceClickListenerImplementor -> mono.android.preference.Preference_OnPreferenceClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
mono.android.renderscript.Allocation_OnBufferAvailableListenerImplementor -> mono.android.renderscript.Allocation_OnBufferAvailableListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onBufferAvailable(android.renderscript.Allocation) -> onBufferAvailable
mono.android.runtime.InputStreamAdapter -> mono.android.runtime.InputStreamAdapter:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    33:33:void close() -> close
    65:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:73:void monodroidClearReferences() -> monodroidClearReferences
    41:41:int read() -> read
    49:49:int read(byte[]) -> read
    57:57:int read(byte[],int,int) -> read
mono.android.runtime.JavaObject -> mono.android.runtime.JavaObject:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    32:32:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
    56:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:64:void monodroidClearReferences() -> monodroidClearReferences
    48:48:java.lang.String toString() -> toString
mono.android.runtime.OutputStreamAdapter -> mono.android.runtime.OutputStreamAdapter:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    34:34:void close() -> close
    42:42:void flush() -> flush
    74:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    81:82:void monodroidClearReferences() -> monodroidClearReferences
    50:50:void write(byte[]) -> write
    58:58:void write(byte[],int,int) -> write
    66:66:void write(int) -> write
mono.android.sax.EndElementListenerImplementor -> mono.android.sax.EndElementListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    31:31:void end() -> end
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
mono.android.sax.EndTextElementListenerImplementor -> mono.android.sax.EndTextElementListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    31:31:void end(java.lang.String) -> end
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
mono.android.sax.StartElementListenerImplementor -> mono.android.sax.StartElementListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void start(org.xml.sax.Attributes) -> start
mono.android.se.omapi.SEService_OnConnectedListenerImplementor -> mono.android.se.omapi.SEService_OnConnectedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onConnected() -> onConnected
mono.android.speech.RecognitionListenerImplementor -> mono.android.speech.RecognitionListenerImplementor:
    26:26:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    129:131:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    136:137:void monodroidClearReferences() -> monodroidClearReferences
    41:41:void onBeginningOfSpeech() -> onBeginningOfSpeech
    49:49:void onBufferReceived(byte[]) -> onBufferReceived
    113:113:void onEndOfSegmentedSession() -> onEndOfSegmentedSession
    57:57:void onEndOfSpeech() -> onEndOfSpeech
    65:65:void onError(int) -> onError
    73:73:void onEvent(int,android.os.Bundle) -> onEvent
    81:81:void onPartialResults(android.os.Bundle) -> onPartialResults
    89:89:void onReadyForSpeech(android.os.Bundle) -> onReadyForSpeech
    97:97:void onResults(android.os.Bundle) -> onResults
    105:105:void onRmsChanged(float) -> onRmsChanged
    121:121:void onSegmentResults(android.os.Bundle) -> onSegmentResults
mono.android.speech.tts.TextToSpeech_OnInitListenerImplementor -> mono.android.speech.tts.TextToSpeech_OnInitListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onInit(int) -> onInit
mono.android.speech.tts.TextToSpeech_OnUtteranceCompletedListenerImplementor -> mono.android.speech.tts.TextToSpeech_OnUtteranceCompletedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
mono.android.telephony.TelephonyCallback_ActiveDataSubscriptionIdListenerImplementor -> mono.android.telephony.TelephonyCallback_ActiveDataSubscriptionIdListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onActiveDataSubscriptionIdChanged(int) -> onActiveDataSubscriptionIdChanged
mono.android.telephony.TelephonyCallback_BarringInfoListenerImplementor -> mono.android.telephony.TelephonyCallback_BarringInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onBarringInfoChanged(android.telephony.BarringInfo) -> onBarringInfoChanged
mono.android.telephony.TelephonyCallback_CallDisconnectCauseListenerImplementor -> mono.android.telephony.TelephonyCallback_CallDisconnectCauseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCallDisconnectCauseChanged(int,int) -> onCallDisconnectCauseChanged
mono.android.telephony.TelephonyCallback_CallForwardingIndicatorListenerImplementor -> mono.android.telephony.TelephonyCallback_CallForwardingIndicatorListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCallForwardingIndicatorChanged(boolean) -> onCallForwardingIndicatorChanged
mono.android.telephony.TelephonyCallback_CallStateListenerImplementor -> mono.android.telephony.TelephonyCallback_CallStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCallStateChanged(int) -> onCallStateChanged
mono.android.telephony.TelephonyCallback_CarrierNetworkListenerImplementor -> mono.android.telephony.TelephonyCallback_CarrierNetworkListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCarrierNetworkChange(boolean) -> onCarrierNetworkChange
mono.android.telephony.TelephonyCallback_CellInfoListenerImplementor -> mono.android.telephony.TelephonyCallback_CellInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCellInfoChanged(java.util.List) -> onCellInfoChanged
mono.android.telephony.TelephonyCallback_CellLocationListenerImplementor -> mono.android.telephony.TelephonyCallback_CellLocationListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
mono.android.telephony.TelephonyCallback_DataActivationStateListenerImplementor -> mono.android.telephony.TelephonyCallback_DataActivationStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDataActivationStateChanged(int) -> onDataActivationStateChanged
mono.android.telephony.TelephonyCallback_DataActivityListenerImplementor -> mono.android.telephony.TelephonyCallback_DataActivityListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDataActivity(int) -> onDataActivity
mono.android.telephony.TelephonyCallback_DataConnectionStateListenerImplementor -> mono.android.telephony.TelephonyCallback_DataConnectionStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDataConnectionStateChanged(int,int) -> onDataConnectionStateChanged
mono.android.telephony.TelephonyCallback_DisplayInfoListenerImplementor -> mono.android.telephony.TelephonyCallback_DisplayInfoListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo) -> onDisplayInfoChanged
mono.android.telephony.TelephonyCallback_EmergencyNumberListListenerImplementor -> mono.android.telephony.TelephonyCallback_EmergencyNumberListListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onEmergencyNumberListChanged(java.util.Map) -> onEmergencyNumberListChanged
mono.android.telephony.TelephonyCallback_ImsCallDisconnectCauseListenerImplementor -> mono.android.telephony.TelephonyCallback_ImsCallDisconnectCauseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onImsCallDisconnectCauseChanged(android.telephony.ims.ImsReasonInfo) -> onImsCallDisconnectCauseChanged
mono.android.telephony.TelephonyCallback_MessageWaitingIndicatorListenerImplementor -> mono.android.telephony.TelephonyCallback_MessageWaitingIndicatorListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onMessageWaitingIndicatorChanged(boolean) -> onMessageWaitingIndicatorChanged
mono.android.telephony.TelephonyCallback_PhysicalChannelConfigListenerImplementor -> mono.android.telephony.TelephonyCallback_PhysicalChannelConfigListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onPhysicalChannelConfigChanged(java.util.List) -> onPhysicalChannelConfigChanged
mono.android.telephony.TelephonyCallback_PreciseDataConnectionStateListenerImplementor -> mono.android.telephony.TelephonyCallback_PreciseDataConnectionStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState) -> onPreciseDataConnectionStateChanged
mono.android.telephony.TelephonyCallback_RegistrationFailedListenerImplementor -> mono.android.telephony.TelephonyCallback_RegistrationFailedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onRegistrationFailed(android.telephony.CellIdentity,java.lang.String,int,int,int) -> onRegistrationFailed
mono.android.telephony.TelephonyCallback_ServiceStateListenerImplementor -> mono.android.telephony.TelephonyCallback_ServiceStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
mono.android.telephony.TelephonyCallback_SignalStrengthsListenerImplementor -> mono.android.telephony.TelephonyCallback_SignalStrengthsListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
mono.android.telephony.TelephonyCallback_UserMobileDataStateListenerImplementor -> mono.android.telephony.TelephonyCallback_UserMobileDataStateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onUserMobileDataStateChanged(boolean) -> onUserMobileDataStateChanged
mono.android.text.TextWatcherImplementor -> mono.android.text.TextWatcherImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    34:34:void afterTextChanged(android.text.Editable) -> afterTextChanged
    42:42:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    58:60:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    65:66:void monodroidClearReferences() -> monodroidClearReferences
    50:50:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
mono.android.transition.Transition_TransitionListenerImplementor -> mono.android.transition.Transition_TransitionListenerImplementor:
    20:20:void <clinit>() -> <clinit>
    26:28:void <init>() -> <init>
    75:77:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    82:83:void monodroidClearReferences() -> monodroidClearReferences
    35:35:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    43:43:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    51:51:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    59:59:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    67:67:void onTransitionStart(android.transition.Transition) -> onTransitionStart
mono.android.view.ActionProvider_VisibilityListenerImplementor -> mono.android.view.ActionProvider_VisibilityListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
mono.android.view.AttachedSurfaceControl_OnBufferTransformHintChangedListenerImplementor -> mono.android.view.AttachedSurfaceControl_OnBufferTransformHintChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onBufferTransformHintChanged(int) -> onBufferTransformHintChanged
mono.android.view.GestureDetector_OnContextClickListenerImplementor -> mono.android.view.GestureDetector_OnContextClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onContextClick(android.view.MotionEvent) -> onContextClick
mono.android.view.GestureDetector_OnDoubleTapListenerImplementor -> mono.android.view.GestureDetector_OnDoubleTapListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    41:41:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    49:49:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
mono.android.view.GestureDetector_OnGestureListenerImplementor -> mono.android.view.GestureDetector_OnGestureListenerImplementor:
    21:21:void <clinit>() -> <clinit>
    27:29:void <init>() -> <init>
    84:86:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    91:92:void monodroidClearReferences() -> monodroidClearReferences
    36:36:boolean onDown(android.view.MotionEvent) -> onDown
    44:44:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    52:52:void onLongPress(android.view.MotionEvent) -> onLongPress
    60:60:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    68:68:void onShowPress(android.view.MotionEvent) -> onShowPress
    76:76:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
mono.android.view.MenuItem_OnActionExpandListenerImplementor -> mono.android.view.MenuItem_OnActionExpandListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    40:40:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
mono.android.view.MenuItem_OnMenuItemClickListenerImplementor -> mono.android.view.MenuItem_OnMenuItemClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.view.OnReceiveContentListenerImplementor -> mono.android.view.OnReceiveContentListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo) -> onReceiveContent
mono.android.view.PixelCopy_OnPixelCopyFinishedListenerImplementor -> mono.android.view.PixelCopy_OnPixelCopyFinishedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onPixelCopyFinished(int) -> onPixelCopyFinished
mono.android.view.ScaleGestureDetector_OnScaleGestureListenerImplementor -> mono.android.view.ScaleGestureDetector_OnScaleGestureListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:boolean onScale(android.view.ScaleGestureDetector) -> onScale
    41:41:boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    49:49:void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
mono.android.view.SurfaceControl_TransactionCommittedListenerImplementor -> mono.android.view.SurfaceControl_TransactionCommittedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTransactionCommitted() -> onTransactionCommitted
mono.android.view.TextureView_SurfaceTextureListenerImplementor -> mono.android.view.TextureView_SurfaceTextureListenerImplementor:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    66:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    73:74:void monodroidClearReferences() -> monodroidClearReferences
    34:34:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    42:42:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    50:50:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    58:58:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
mono.android.view.ViewGroup_OnHierarchyChangeListenerImplementor -> mono.android.view.ViewGroup_OnHierarchyChangeListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    40:40:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
mono.android.view.ViewStub_OnInflateListenerImplementor -> mono.android.view.ViewStub_OnInflateListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onInflate(android.view.ViewStub,android.view.View) -> onInflate
mono.android.view.ViewTreeObserver_OnDrawListenerImplementor -> mono.android.view.ViewTreeObserver_OnDrawListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDraw() -> onDraw
mono.android.view.ViewTreeObserver_OnGlobalFocusChangeListenerImplementor -> mono.android.view.ViewTreeObserver_OnGlobalFocusChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGlobalFocusChanged(android.view.View,android.view.View) -> onGlobalFocusChanged
mono.android.view.ViewTreeObserver_OnGlobalLayoutListenerImplementor -> mono.android.view.ViewTreeObserver_OnGlobalLayoutListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGlobalLayout() -> onGlobalLayout
mono.android.view.ViewTreeObserver_OnPreDrawListenerImplementor -> mono.android.view.ViewTreeObserver_OnPreDrawListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onPreDraw() -> onPreDraw
mono.android.view.ViewTreeObserver_OnScrollChangedListenerImplementor -> mono.android.view.ViewTreeObserver_OnScrollChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onScrollChanged() -> onScrollChanged
mono.android.view.ViewTreeObserver_OnTouchModeChangeListenerImplementor -> mono.android.view.ViewTreeObserver_OnTouchModeChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTouchModeChanged(boolean) -> onTouchModeChanged
mono.android.view.ViewTreeObserver_OnWindowAttachListenerImplementor -> mono.android.view.ViewTreeObserver_OnWindowAttachListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onWindowAttached() -> onWindowAttached
    40:40:void onWindowDetached() -> onWindowDetached
mono.android.view.ViewTreeObserver_OnWindowFocusChangeListenerImplementor -> mono.android.view.ViewTreeObserver_OnWindowFocusChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
mono.android.view.View_OnApplyWindowInsetsListenerImplementor -> mono.android.view.View_OnApplyWindowInsetsListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
mono.android.view.View_OnAttachStateChangeListenerImplementor -> mono.android.view.View_OnAttachStateChangeListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    40:40:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
mono.android.view.View_OnCapturedPointerListenerImplementor -> mono.android.view.View_OnCapturedPointerListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onCapturedPointer(android.view.View,android.view.MotionEvent) -> onCapturedPointer
mono.android.view.View_OnClickListenerImplementor -> mono.android.view.View_OnClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onClick(android.view.View) -> onClick
mono.android.view.View_OnContextClickListenerImplementor -> mono.android.view.View_OnContextClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onContextClick(android.view.View) -> onContextClick
mono.android.view.View_OnCreateContextMenuListenerImplementor -> mono.android.view.View_OnCreateContextMenuListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
mono.android.view.View_OnDragListenerImplementor -> mono.android.view.View_OnDragListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onDrag(android.view.View,android.view.DragEvent) -> onDrag
mono.android.view.View_OnFocusChangeListenerImplementor -> mono.android.view.View_OnFocusChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFocusChange(android.view.View,boolean) -> onFocusChange
mono.android.view.View_OnGenericMotionListenerImplementor -> mono.android.view.View_OnGenericMotionListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
mono.android.view.View_OnHoverListenerImplementor -> mono.android.view.View_OnHoverListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
mono.android.view.View_OnKeyListenerImplementor -> mono.android.view.View_OnKeyListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
mono.android.view.View_OnLayoutChangeListenerImplementor -> mono.android.view.View_OnLayoutChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
mono.android.view.View_OnLongClickListenerImplementor -> mono.android.view.View_OnLongClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onLongClick(android.view.View) -> onLongClick
mono.android.view.View_OnScrollChangeListenerImplementor -> mono.android.view.View_OnScrollChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onScrollChange(android.view.View,int,int,int,int) -> onScrollChange
mono.android.view.View_OnSystemUiVisibilityChangeListenerImplementor -> mono.android.view.View_OnSystemUiVisibilityChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
mono.android.view.View_OnTouchListenerImplementor -> mono.android.view.View_OnTouchListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
mono.android.view.View_OnUnhandledKeyEventListenerImplementor -> mono.android.view.View_OnUnhandledKeyEventListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
mono.android.view.WindowInsetsAnimationControlListenerImplementor -> mono.android.view.WindowInsetsAnimationControlListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onCancelled(android.view.WindowInsetsAnimationController) -> onCancelled
    41:41:void onFinished(android.view.WindowInsetsAnimationController) -> onFinished
    49:49:void onReady(android.view.WindowInsetsAnimationController,int) -> onReady
mono.android.view.WindowInsetsController_OnControllableInsetsChangedListenerImplementor -> mono.android.view.WindowInsetsController_OnControllableInsetsChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onControllableInsetsChanged(android.view.WindowInsetsController,int) -> onControllableInsetsChanged
mono.android.view.Window_OnFrameMetricsAvailableListenerImplementor -> mono.android.view.Window_OnFrameMetricsAvailableListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
mono.android.view.Window_OnRestrictedCaptionAreaChangedListenerImplementor -> mono.android.view.Window_OnRestrictedCaptionAreaChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onRestrictedCaptionAreaChanged(android.graphics.Rect) -> onRestrictedCaptionAreaChanged
mono.android.view.accessibility.AccessibilityManager_AccessibilityServicesStateChangeListenerImplementor -> mono.android.view.accessibility.AccessibilityManager_AccessibilityServicesStateChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAccessibilityServicesStateChanged(android.view.accessibility.AccessibilityManager) -> onAccessibilityServicesStateChanged
mono.android.view.accessibility.AccessibilityManager_AccessibilityStateChangeListenerImplementor -> mono.android.view.accessibility.AccessibilityManager_AccessibilityStateChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
mono.android.view.accessibility.AccessibilityManager_AudioDescriptionRequestedChangeListenerImplementor -> mono.android.view.accessibility.AccessibilityManager_AudioDescriptionRequestedChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onAudioDescriptionRequestedChanged(boolean) -> onAudioDescriptionRequestedChanged
mono.android.view.accessibility.AccessibilityManager_TouchExplorationStateChangeListenerImplementor -> mono.android.view.accessibility.AccessibilityManager_TouchExplorationStateChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
mono.android.view.animation.Animation_AnimationListenerImplementor -> mono.android.view.animation.Animation_AnimationListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    41:41:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    49:49:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
mono.android.view.textservice.SpellCheckerSession_SpellCheckerSessionListenerImplementor -> mono.android.view.textservice.SpellCheckerSession_SpellCheckerSessionListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[]) -> onGetSentenceSuggestions
    40:40:void onGetSuggestions(android.view.textservice.SuggestionsInfo[]) -> onGetSuggestions
mono.android.webkit.DownloadListenerImplementor -> mono.android.webkit.DownloadListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
mono.android.webkit.WebIconDatabase_IconListenerImplementor -> mono.android.webkit.WebIconDatabase_IconListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onReceivedIcon(java.lang.String,android.graphics.Bitmap) -> onReceivedIcon
mono.android.webkit.WebView_FindListenerImplementor -> mono.android.webkit.WebView_FindListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFindResultReceived(int,int,boolean) -> onFindResultReceived
mono.android.webkit.WebView_PictureListenerImplementor -> mono.android.webkit.WebView_PictureListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
mono.android.widget.AbsListView_OnScrollListenerImplementor -> mono.android.widget.AbsListView_OnScrollListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    40:40:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
mono.android.widget.AbsListView_RecyclerListenerImplementor -> mono.android.widget.AbsListView_RecyclerListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onMovedToScrapHeap(android.view.View) -> onMovedToScrapHeap
mono.android.widget.ActionMenuView_OnMenuItemClickListenerImplementor -> mono.android.widget.ActionMenuView_OnMenuItemClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.widget.AdapterView_OnItemClickListenerImplementor -> mono.android.widget.AdapterView_OnItemClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
mono.android.widget.AdapterView_OnItemLongClickListenerImplementor -> mono.android.widget.AdapterView_OnItemLongClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
mono.android.widget.AdapterView_OnItemSelectedListenerImplementor -> mono.android.widget.AdapterView_OnItemSelectedListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    40:40:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
mono.android.widget.AutoCompleteTextView_OnDismissListenerImplementor -> mono.android.widget.AutoCompleteTextView_OnDismissListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDismiss() -> onDismiss
mono.android.widget.CalendarView_OnDateChangeListenerImplementor -> mono.android.widget.CalendarView_OnDateChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSelectedDayChange(android.widget.CalendarView,int,int,int) -> onSelectedDayChange
mono.android.widget.Chronometer_OnChronometerTickListenerImplementor -> mono.android.widget.Chronometer_OnChronometerTickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onChronometerTick(android.widget.Chronometer) -> onChronometerTick
mono.android.widget.CompoundButton_OnCheckedChangeListenerImplementor -> mono.android.widget.CompoundButton_OnCheckedChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
mono.android.widget.DatePicker_OnDateChangedListenerImplementor -> mono.android.widget.DatePicker_OnDateChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDateChanged(android.widget.DatePicker,int,int,int) -> onDateChanged
mono.android.widget.ExpandableListView_OnChildClickListenerImplementor -> mono.android.widget.ExpandableListView_OnChildClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
mono.android.widget.ExpandableListView_OnGroupClickListenerImplementor -> mono.android.widget.ExpandableListView_OnGroupClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
mono.android.widget.ExpandableListView_OnGroupCollapseListenerImplementor -> mono.android.widget.ExpandableListView_OnGroupCollapseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGroupCollapse(int) -> onGroupCollapse
mono.android.widget.ExpandableListView_OnGroupExpandListenerImplementor -> mono.android.widget.ExpandableListView_OnGroupExpandListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onGroupExpand(int) -> onGroupExpand
mono.android.widget.Filter_FilterListenerImplementor -> mono.android.widget.Filter_FilterListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onFilterComplete(int) -> onFilterComplete
mono.android.widget.NumberPicker_OnScrollListenerImplementor -> mono.android.widget.NumberPicker_OnScrollListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onScrollStateChange(android.widget.NumberPicker,int) -> onScrollStateChange
mono.android.widget.NumberPicker_OnValueChangeListenerImplementor -> mono.android.widget.NumberPicker_OnValueChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
mono.android.widget.PopupMenu_OnDismissListenerImplementor -> mono.android.widget.PopupMenu_OnDismissListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDismiss(android.widget.PopupMenu) -> onDismiss
mono.android.widget.PopupMenu_OnMenuItemClickListenerImplementor -> mono.android.widget.PopupMenu_OnMenuItemClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.widget.PopupWindow_OnDismissListenerImplementor -> mono.android.widget.PopupWindow_OnDismissListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDismiss() -> onDismiss
mono.android.widget.RadioGroup_OnCheckedChangeListenerImplementor -> mono.android.widget.RadioGroup_OnCheckedChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
mono.android.widget.RatingBar_OnRatingBarChangeListenerImplementor -> mono.android.widget.RatingBar_OnRatingBarChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onRatingChanged(android.widget.RatingBar,float,boolean) -> onRatingChanged
mono.android.widget.SearchView_OnCloseListenerImplementor -> mono.android.widget.SearchView_OnCloseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onClose() -> onClose
mono.android.widget.SearchView_OnQueryTextListenerImplementor -> mono.android.widget.SearchView_OnQueryTextListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    40:40:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
mono.android.widget.SearchView_OnSuggestionListenerImplementor -> mono.android.widget.SearchView_OnSuggestionListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:boolean onSuggestionClick(int) -> onSuggestionClick
    40:40:boolean onSuggestionSelect(int) -> onSuggestionSelect
mono.android.widget.SeekBar_OnSeekBarChangeListenerImplementor -> mono.android.widget.SeekBar_OnSeekBarChangeListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    33:33:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    41:41:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    49:49:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
mono.android.widget.ShareActionProvider_OnShareTargetSelectedListenerImplementor -> mono.android.widget.ShareActionProvider_OnShareTargetSelectedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
mono.android.widget.SlidingDrawer_OnDrawerCloseListenerImplementor -> mono.android.widget.SlidingDrawer_OnDrawerCloseListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDrawerClosed() -> onDrawerClosed
mono.android.widget.SlidingDrawer_OnDrawerOpenListenerImplementor -> mono.android.widget.SlidingDrawer_OnDrawerOpenListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onDrawerOpened() -> onDrawerOpened
mono.android.widget.SlidingDrawer_OnDrawerScrollListenerImplementor -> mono.android.widget.SlidingDrawer_OnDrawerScrollListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onScrollEnded() -> onScrollEnded
    40:40:void onScrollStarted() -> onScrollStarted
mono.android.widget.TabHost_OnTabChangeListenerImplementor -> mono.android.widget.TabHost_OnTabChangeListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTabChanged(java.lang.String) -> onTabChanged
mono.android.widget.TextView_OnEditorActionListenerImplementor -> mono.android.widget.TextView_OnEditorActionListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
mono.android.widget.TimePicker_OnTimeChangedListenerImplementor -> mono.android.widget.TimePicker_OnTimeChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onTimeChanged(android.widget.TimePicker,int,int) -> onTimeChanged
mono.android.widget.Toolbar_OnMenuItemClickListenerImplementor -> mono.android.widget.Toolbar_OnMenuItemClickListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.widget.ZoomButtonsController_OnZoomListenerImplementor -> mono.android.widget.ZoomButtonsController_OnZoomListenerImplementor:
    17:17:void <clinit>() -> <clinit>
    23:25:void <init>() -> <init>
    48:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:56:void monodroidClearReferences() -> monodroidClearReferences
    32:32:void onVisibilityChanged(boolean) -> onVisibilityChanged
    40:40:void onZoom(boolean) -> onZoom
mono.android.window.SplashScreen_OnExitAnimationListenerImplementor -> mono.android.window.SplashScreen_OnExitAnimationListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onSplashScreenExit(android.window.SplashScreenView) -> onSplashScreenExit
mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor -> mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void onControllableInsetsChanged(androidx.core.view.WindowInsetsControllerCompat,int) -> onControllableInsetsChanged
mono.java.lang.Runnable -> mono.java.lang.Runnable:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void run() -> run
mono.java.lang.RunnableImplementor -> mono.java.lang.RunnableImplementor:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:void run() -> run
mono.java.util.EventListenerImplementor -> mono.java.util.EventListenerImplementor:
    15:15:void <clinit>() -> <clinit>
    21:23:void <init>() -> <init>
    30:32:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    37:38:void monodroidClearReferences() -> monodroidClearReferences
mono.javax.xml.transform.ErrorListenerImplementor -> mono.javax.xml.transform.ErrorListenerImplementor:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    33:33:void error(javax.xml.transform.TransformerException) -> error
    41:41:void fatalError(javax.xml.transform.TransformerException) -> fatalError
    57:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:65:void monodroidClearReferences() -> monodroidClearReferences
    49:49:void warning(javax.xml.transform.TransformerException) -> warning
xamarin.android.net.ServerCertificateCustomValidator_AlwaysAcceptingHostnameVerifier -> xamarin.android.net.ServerCertificateCustomValidator_AlwaysAcceptingHostnameVerifier:
    16:16:void <clinit>() -> <clinit>
    22:24:void <init>() -> <init>
    39:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    46:47:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
xamarin.android.net.ServerCertificateCustomValidator_TrustManager -> xamarin.android.net.ServerCertificateCustomValidator_TrustManager:
    19:19:void <clinit>() -> <clinit>
    25:27:void <init>() -> <init>
    34:34:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    42:42:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    50:50:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    58:60:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    65:66:void monodroidClearReferences() -> monodroidClearReferences
xamarin.android.net.ServerCertificateCustomValidator_TrustManager_FakeSSLSession -> xamarin.android.net.ServerCertificateCustomValidator_TrustManager_FakeSSLSession:
    36:36:void <clinit>() -> <clinit>
    42:44:void <init>() -> <init>
    50:52:void <init>(java.security.cert.X509Certificate[]) -> <init>
    59:59:int getApplicationBufferSize() -> getApplicationBufferSize
    67:67:java.lang.String getCipherSuite() -> getCipherSuite
    75:75:long getCreationTime() -> getCreationTime
    155:155:byte[] getId() -> getId
    91:91:long getLastAccessedTime() -> getLastAccessedTime
    163:163:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    99:99:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    107:107:int getPacketBufferSize() -> getPacketBufferSize
    171:171:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    179:179:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    115:115:java.lang.String getPeerHost() -> getPeerHost
    123:123:int getPeerPort() -> getPeerPort
    131:131:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    139:139:java.lang.String getProtocol() -> getProtocol
    147:147:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    187:187:java.lang.Object getValue(java.lang.String) -> getValue
    195:195:java.lang.String[] getValueNames() -> getValueNames
    203:203:void invalidate() -> invalidate
    83:83:boolean isValid() -> isValid
    227:229:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    234:235:void monodroidClearReferences() -> monodroidClearReferences
    211:211:void putValue(java.lang.String,java.lang.Object) -> putValue
    219:219:void removeValue(java.lang.String) -> removeValue
