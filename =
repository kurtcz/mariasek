@@ -92,7 +92,7 @@ namespace Mariasek.Engine
                             if (_rounds[i].c1.Suit == _rounds[i].c2.Suit &&
                                 _rounds[i].c1.BadValue > _rounds[i].c2.BadValue &&
                                 _rounds[i].c2.BadValue == minPossibleOpponentCardInSuit.BadValue &&
                                                .All(j => _probabilities.SuitHigherThanCardProbability(_rounds[i].player2.PlayerIndex, j, RoundNumber) == 0))
index 1892385..a6af2e8 100644
@@ -127,10 +127,10 @@ namespace Mariasek.Engine
-                        _hands[MyIndex].CardCount(r.c1.Suit) > 2 &&   //pokud mam jen jednu kartu v barve, dovol mi ji odmazat
+                        hands[MyIndex].CardCount(r.c1.Suit) > 2 &&   //pokud mam jen jednu kartu v barve, dovol mi ji odmazat
@@ -189,12 +189,12 @@ namespace Mariasek.Engine
@@ -257,7 +257,7 @@ namespace Mariasek.Engine
@@ -268,8 +268,8 @@ namespace Mariasek.Engine
                                                         (_probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Eso)) > 0 ||
                                                         (_probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Desitka)) > 0 ||
@@ -282,17 +282,17 @@ namespace Mariasek.Engine
                         //                                (_probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Eso)) > 0 ||
                         //                                 _probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Desitka)) > 0 ||
@@ -312,7 +312,7 @@ namespace Mariasek.Engine
                                                              (_probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Eso)) >= 1 - _epsilon ||
                                                               _probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Desitka)) >= 1 - _epsilon))
                                                                    _probabilities.SuitProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, b, RoundNumber) > 0 &&
-                    _hands[MyIndex].CardCount(b) == 2 &&
+                    hands[MyIndex].CardCount(b) == 2 &&
                      _probabilities.CardProbability((MyIndex + 2) % Game.NumPlayers, new Card(b, Hodnota.Eso)) > 0))
                 //    _rounds[RoundNumber - 1].player2.PlayerIndex == TeamMateIndex)))
                                                              (_probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Eso)) >= 1 - _epsilon ||
                                                               _probabilities.CardProbability(_rounds[RoundNumber - 1].player2.PlayerIndex, new Card(b, Hodnota.Desitka)) >= 1 - _epsilon))
-        private void BeforeGetRules23()
+        private void BeforeGetRules23(Hand[] hands)
@@ -527,7 +527,7 @@ namespace Mariasek.Engine
@@ -572,7 +572,7 @@ namespace Mariasek.Engine
@@ -627,14 +627,14 @@ namespace Mariasek.Engine
                                 _probabilities.CardProbability(TeamMateIndex == player2 ? player3 : player2, new Card(_trump, Hodnota.Desitka)) >= 1 - _epsilon)
                                 ((_probabilities.CardProbability(player2, new Card(_trump, Hodnota.Desitka)) >= 1 - _epsilon &&
                                   _probabilities.CardProbability(player2, new Card(_trump, Hodnota.Sedma)) >= 1 - _epsilon) ||
@@ -1171,23 +1171,23 @@ namespace Mariasek.Engine
                                              _probabilities.SuitProbability(player2, b, RoundNumber) > 0 &&
                                                                       .All(h => _probabilities.CardProbability(player2, new Card(i.Suit, h)) == 0 &&
@@ -1204,26 +1204,26 @@ namespace Mariasek.Engine
                               _probabilities.SuitProbability(player2, _trump, RoundNumber) > 0 &&
@@ -1239,7 +1239,7 @@ namespace Mariasek.Engine
@@ -1249,7 +1249,7 @@ namespace Mariasek.Engine
@@ -1259,9 +1259,9 @@ namespace Mariasek.Engine
@@ -1432,7 +1432,7 @@ namespace Mariasek.Engine
                                                                                _probabilities.CardProbability(player2, new Card(i.Suit, h)) > _epsilon)).ToList();
@@ -1452,7 +1452,7 @@ namespace Mariasek.Engine
@@ -1522,7 +1522,7 @@ namespace Mariasek.Engine
-                        _hands[MyIndex].CardCount(_trump) <= 2 &&
+                        hands[MyIndex].CardCount(_trump) <= 2 &&
                                                               (_probabilities.PotentialCards(player2).HasA(j.Suit) ||
                                                                _probabilities.PotentialCards(player2).HasX(j.Suit))) ||
                                                                   ((_probabilities.PotentialCards(player2).Where(j => j.Suit == i.Suit)
@@ -2006,7 +2007,7 @@ namespace Mariasek.Engine
                                             _probabilities.HasSolitaryX(player2, b, RoundNumber) >= 1 - _epsilon))
@@ -2108,7 +2109,8 @@ namespace Mariasek.Engine
                                                                                      (_probabilities.SuitProbability(player2, i.Suit, RoundNumber) == 0f ||
@@ -2202,13 +2204,13 @@ namespace Mariasek.Engine
@@ -2369,7 +2371,7 @@ namespace Mariasek.Engine
@@ -2480,7 +2482,7 @@ namespace Mariasek.Engine
@@ -2519,12 +2521,12 @@ namespace Mariasek.Engine
                                                  myInitialHand.HasA(i.Suit)) >= 2 &&
-                        _hands[MyIndex].CardCount(_trump) <= _probabilities.PotentialCards(player2) //pokud mas hodne trumfu a propad si az sem, tak pravidlo nehraj (asi si mas odmazat plonk x)
+                        hands[MyIndex].CardCount(_trump) <= _probabilities.PotentialCards(player2) //pokud mas hodne trumfu a propad si az sem, tak pravidlo nehraj (asi si mas odmazat plonk x)
                                                                                  _probabilities.SuitProbability(player2, i.Suit, RoundNumber) > 0 &&
@@ -2582,11 +2584,11 @@ namespace Mariasek.Engine
@@ -2736,7 +2738,7 @@ namespace Mariasek.Engine
                                                                                  (_probabilities.SuitProbability(player2, i.Suit, RoundNumber) >= 1 - RiskFactor &&
@@ -2757,7 +2759,7 @@ namespace Mariasek.Engine
@@ -2794,7 +2796,7 @@ namespace Mariasek.Engine
@@ -2863,7 +2865,7 @@ namespace Mariasek.Engine
                         cardsToPlay = cardsToPlay.Where(i => !(_probabilities.CertainCards(player2).Any(j => j.Suit == i.Suit &&      //nehraj pokud ma akter jiste nizke karty v barve
                                                                _probabilities.PotentialCards(player2).HasSuit(_trump) &&             //a navic jeste trumf
@@ -2901,7 +2903,7 @@ namespace Mariasek.Engine
                                                                                 !(_probabilities.CertainCards(player2).Any(j => j.Suit == i.Suit &&      //nehraj pokud ma akter jiste nizke karty v barve
                                                                                   _probabilities.PotentialCards(player2).HasSuit(_trump) &&             //a navic jeste trumf
@@ -3127,11 +3129,11 @@ namespace Mariasek.Engine
-                        _hands[MyIndex].CardCount(_trump) <= 2 &&
+                        hands[MyIndex].CardCount(_trump) <= 2 &&
                                                  myInitialHand.CardCount(i.Suit) > 1) >= 2 && //jen pokud eso neni samotne (samotne eso neni dobre hrat)
@@ -3680,7 +3682,7 @@ namespace Mariasek.Engine
                         myInitialHand.CardCount(_trump) <= 2 &&
                                                  i.Suit != _trump) >= 2 && //jen pokud eso neni samotne (samotne eso neni dobre hrat)
@@ -4010,7 +4012,7 @@ namespace Mariasek.Engine
@@ -4029,7 +4031,7 @@ namespace Mariasek.Engine
                                                                             !(_probabilities.CertainCards(player2).Any(j => j.Suit == i.Suit &&      //nehraj pokud ma akter jiste nizke karty v barve
                                                                               _probabilities.PotentialCards(player2).HasSuit(_trump) &&             //a navic jeste trumf
@@ -4121,7 +4123,7 @@ namespace Mariasek.Engine
                                                                             !(_probabilities.CertainCards(player2).Any(j => j.Suit == i.Suit &&      //nehraj pokud ma akter jiste nizke karty v barve
                                                                               _probabilities.PotentialCards(player2).HasSuit(_trump) &&             //a navic jeste trumf
@@ -4203,8 +4205,8 @@ namespace Mariasek.Engine
@@ -4541,21 +4543,21 @@ namespace Mariasek.Engine
                     if (TeamMateIndex == player2)
-                                                                                   _hands[MyIndex].CardCount(_trump) == 2) &&
+                                                                                   hands[MyIndex].CardCount(_trump) == 2) &&
@@ -4618,8 +4620,8 @@ namespace Mariasek.Engine
-                                                                   _hands[MyIndex].CardCount(_trump) == 2 &&
+                                                                   hands[MyIndex].CardCount(_trump) == 2 &&
@@ -4782,9 +4784,9 @@ namespace Mariasek.Engine
             var player1 = (MyIndex + 2) % Game.NumPlayers;
-            BeforeGetRules23();
+            BeforeGetRules23(hands);
@@ -5205,7 +5207,7 @@ namespace Mariasek.Engine
                                                                                                             j.Value >= Hodnota.Desitka) > 2) &&
@@ -5902,7 +5904,7 @@ namespace Mariasek.Engine
             var player2 = (MyIndex + 2) % Game.NumPlayers;
-            BeforeGetRules23();
+            BeforeGetRules23(hands);
                         ValidCards(c1, c2, hands[MyIndex]).HasX(_trump))
                                    _probabilities.LikelyCards(player1).Count(i => i != c2 &&
